["^ ","~:output",["^ ","~:js","goog.provide('datascript.query');\ndatascript.query.lru_cache_size = (100);\n\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Context = (function (rels,sources,rules,__meta,__extmap,__hash){\nthis.rels = rels;\nthis.sources = sources;\nthis.rules = rules;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k23881,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__23886 = k23881;\nvar G__23886__$1 = (((G__23886 instanceof cljs.core.Keyword))?G__23886.fqn:null);\nswitch (G__23886__$1) {\ncase \"rels\":\nreturn self__.rels;\n\nbreak;\ncase \"sources\":\nreturn self__.sources;\n\nbreak;\ncase \"rules\":\nreturn self__.rules;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k23881,else__4442__auto__);\n\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__23887){\nvar vec__23888 = p__23887;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23888,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23888,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(datascript.query.Context.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#datascript.query.Context{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__23880){\nvar self__ = this;\nvar G__23880__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__23880__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (){var fexpr__23891 = (function (coll__4436__auto__){\nreturn (1014232958 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n});\nreturn fexpr__23891(this__4435__auto____$1);\n})();\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this23882,other23883){\nvar self__ = this;\nvar this23882__$1 = this;\nreturn (((!((other23883 == null)))) && ((this23882__$1.constructor === other23883.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23882__$1.rels,other23883.rels)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23882__$1.sources,other23883.sources)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23882__$1.rules,other23883.rules)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23882__$1.__extmap,other23883.__extmap)));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),null,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),null,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__23880){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__23893 = cljs.core.keyword_identical_QMARK_;\nvar expr__23894 = k__4447__auto__;\nif(cljs.core.truth_((function (){var G__23896 = new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185);\nvar G__23897 = expr__23894;\nreturn (pred__23893.cljs$core$IFn$_invoke$arity$2 ? pred__23893.cljs$core$IFn$_invoke$arity$2(G__23896,G__23897) : pred__23893.call(null,G__23896,G__23897));\n})())){\nreturn (new datascript.query.Context(G__23880,self__.sources,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__23898 = new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424);\nvar G__23899 = expr__23894;\nreturn (pred__23893.cljs$core$IFn$_invoke$arity$2 ? pred__23893.cljs$core$IFn$_invoke$arity$2(G__23898,G__23899) : pred__23893.call(null,G__23898,G__23899));\n})())){\nreturn (new datascript.query.Context(self__.rels,G__23880,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__23900 = new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366);\nvar G__23901 = expr__23894;\nreturn (pred__23893.cljs$core$IFn$_invoke$arity$2 ? pred__23893.cljs$core$IFn$_invoke$arity$2(G__23900,G__23901) : pred__23893.call(null,G__23900,G__23901));\n})())){\nreturn (new datascript.query.Context(self__.rels,self__.sources,G__23880,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__23880),null));\n}\n}\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__23880){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,G__23880,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(datascript.query.Context.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"rels\",\"rels\",-884248584,null),new cljs.core.Symbol(null,\"sources\",\"sources\",1319365103,null),new cljs.core.Symbol(null,\"rules\",\"rules\",-1455523403,null)], null);\n}));\n\n(datascript.query.Context.cljs$lang$type = true);\n\n(datascript.query.Context.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Context\",null,(1),null));\n}));\n\n(datascript.query.Context.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"datascript.query/Context\");\n}));\n\n/**\n * Positional factory function for datascript.query/Context.\n */\ndatascript.query.__GT_Context = (function datascript$query$__GT_Context(rels,sources,rules){\nreturn (new datascript.query.Context(rels,sources,rules,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Context, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Context = (function datascript$query$map__GT_Context(G__23884){\nvar extmap__4478__auto__ = (function (){var G__23902 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__23884,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], 0));\nif(cljs.core.record_QMARK_(G__23884)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__23902);\n} else {\nreturn G__23902;\n}\n})();\nreturn (new datascript.query.Context(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(G__23884),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(G__23884),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(G__23884),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Relation = (function (attrs,tuples,__meta,__extmap,__hash){\nthis.attrs = attrs;\nthis.tuples = tuples;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k23904,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__23908 = k23904;\nvar G__23908__$1 = (((G__23908 instanceof cljs.core.Keyword))?G__23908.fqn:null);\nswitch (G__23908__$1) {\ncase \"attrs\":\nreturn self__.attrs;\n\nbreak;\ncase \"tuples\":\nreturn self__.tuples;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k23904,else__4442__auto__);\n\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__23909){\nvar vec__23910 = p__23909;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23910,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23910,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#datascript.query.Relation{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__23903){\nvar self__ = this;\nvar G__23903__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__23903__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (){var fexpr__23914 = (function (coll__4436__auto__){\nreturn (1107093117 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n});\nreturn fexpr__23914(this__4435__auto____$1);\n})();\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this23905,other23906){\nvar self__ = this;\nvar this23905__$1 = this;\nreturn (((!((other23906 == null)))) && ((this23905__$1.constructor === other23906.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23905__$1.attrs,other23906.attrs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23905__$1.tuples,other23906.tuples)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this23905__$1.__extmap,other23906.__extmap)));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),null,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__23903){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__23915 = cljs.core.keyword_identical_QMARK_;\nvar expr__23916 = k__4447__auto__;\nif(cljs.core.truth_((function (){var G__23918 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713);\nvar G__23919 = expr__23916;\nreturn (pred__23915.cljs$core$IFn$_invoke$arity$2 ? pred__23915.cljs$core$IFn$_invoke$arity$2(G__23918,G__23919) : pred__23915.call(null,G__23918,G__23919));\n})())){\nreturn (new datascript.query.Relation(G__23903,self__.tuples,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__23920 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639);\nvar G__23921 = expr__23916;\nreturn (pred__23915.cljs$core$IFn$_invoke$arity$2 ? pred__23915.cljs$core$IFn$_invoke$arity$2(G__23920,G__23921) : pred__23915.call(null,G__23920,G__23921));\n})())){\nreturn (new datascript.query.Relation(self__.attrs,G__23903,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__23903),null));\n}\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__23903){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,G__23903,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(datascript.query.Relation.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"tuples\",\"tuples\",964498888,null)], null);\n}));\n\n(datascript.query.Relation.cljs$lang$type = true);\n\n(datascript.query.Relation.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Relation\",null,(1),null));\n}));\n\n(datascript.query.Relation.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"datascript.query/Relation\");\n}));\n\n/**\n * Positional factory function for datascript.query/Relation.\n */\ndatascript.query.__GT_Relation = (function datascript$query$__GT_Relation(attrs,tuples){\nreturn (new datascript.query.Relation(attrs,tuples,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Relation, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Relation = (function datascript$query$map__GT_Relation(G__23907){\nvar extmap__4478__auto__ = (function (){var G__23922 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__23907,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], 0));\nif(cljs.core.record_QMARK_(G__23907)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__23922);\n} else {\nreturn G__23922;\n}\n})();\nreturn (new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(G__23907),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(G__23907),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\ndatascript.query.single = (function datascript$query$single(coll){\n\nreturn cljs.core.first(coll);\n});\ndatascript.query.intersect_keys = (function datascript$query$intersect_keys(attrs1,attrs2){\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(attrs1)),cljs.core.set(cljs.core.keys(attrs2)));\n});\ndatascript.query.concatv = (function datascript$query$concatv(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24315 = arguments.length;\nvar i__4790__auto___24316 = (0);\nwhile(true){\nif((i__4790__auto___24316 < len__4789__auto___24315)){\nargs__4795__auto__.push((arguments[i__4790__auto___24316]));\n\nvar G__24317 = (i__4790__auto___24316 + (1));\ni__4790__auto___24316 = G__24317;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\nreturn datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\n});\n\n(datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.cat,xs);\n}));\n\n(datascript.query.concatv.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query.concatv.cljs$lang$applyTo = (function (seq23924){\nvar self__4777__auto__ = this;\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23924));\n}));\n\ndatascript.query.zip = (function datascript$query$zip(var_args){\nvar G__23929 = arguments.length;\nswitch (G__23929) {\ncase 2:\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___24319 = arguments.length;\nvar i__4790__auto___24320 = (0);\nwhile(true){\nif((i__4790__auto___24320 < len__4789__auto___24319)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___24320]));\n\nvar G__24321 = (i__4790__auto___24320 + (1));\ni__4790__auto___24320 = G__24321;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((2)),(0),null));\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4811__auto__);\n\n}\n});\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,a,b);\n}));\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic = (function (a,b,rest){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.mapv,cljs.core.vector,a,b,rest);\n}));\n\n/** @this {Function} */\n(datascript.query.zip.cljs$lang$applyTo = (function (seq23926){\nvar G__23927 = cljs.core.first(seq23926);\nvar seq23926__$1 = cljs.core.next(seq23926);\nvar G__23928 = cljs.core.first(seq23926__$1);\nvar seq23926__$2 = cljs.core.next(seq23926__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23927,G__23928,seq23926__$2);\n}));\n\n(datascript.query.zip.cljs$lang$maxFixedArity = (2));\n\ndatascript.query.same_keys_QMARK_ = (function datascript$query$same_keys_QMARK_(a,b){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(a),cljs.core.count(b))) && (cljs.core.every_QMARK_((function (p1__23930_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__23930_SHARP_);\n}),cljs.core.keys(a))) && (cljs.core.every_QMARK_((function (p1__23931_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__23931_SHARP_);\n}),cljs.core.keys(a))));\n});\ndatascript.query.looks_like_QMARK_ = (function datascript$query$looks_like_QMARK_(pattern,form){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),pattern)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),pattern)){\nreturn cljs.core.sequential_QMARK_(form);\n} else {\nif((pattern instanceof cljs.core.Symbol)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form,pattern);\n} else {\nif(cljs.core.sequential_QMARK_(pattern)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.last(pattern),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null))){\nreturn ((cljs.core.sequential_QMARK_(form)) && (cljs.core.every_QMARK_((function (p__23936){\nvar vec__23937 = p__23936;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23937,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23937,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.butlast(pattern),form))));\n} else {\nreturn ((cljs.core.sequential_QMARK_(form)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(form),cljs.core.count(pattern))) && (cljs.core.every_QMARK_((function (p__23945){\nvar vec__23946 = p__23945;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23946,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23946,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,form))));\n}\n} else {\nreturn (pattern.cljs$core$IFn$_invoke$arity$1 ? pattern.cljs$core$IFn$_invoke$arity$1(form) : pattern.call(null,form));\n\n}\n}\n}\n}\n});\ndatascript.query.source_QMARK_ = (function datascript$query$source_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"$\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.free_var_QMARK_ = (function datascript$query$free_var_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"?\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.attr_QMARK_ = (function datascript$query$attr_QMARK_(form){\nreturn (((form instanceof cljs.core.Keyword)) || (typeof form === 'string'));\n});\ndatascript.query.lookup_ref_QMARK_ = (function datascript$query$lookup_ref_QMARK_(form){\nreturn datascript.query.looks_like_QMARK_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.attr_QMARK_,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null),form);\n});\ndatascript.query.join_tuples = (function datascript$query$join_tuples(t1,idxs1,t2,idxs2){\nvar l1 = idxs1.length;\nvar l2 = idxs2.length;\nvar res = me.tonsky.persistent_sorted_set.arrays.make_array((l1 + l2));\nvar n__4666__auto___24341 = l1;\nvar i_24342 = (0);\nwhile(true){\nif((i_24342 < n__4666__auto___24341)){\n(res[i_24342] = (t1[(idxs1[i_24342])]));\n\nvar G__24343 = (i_24342 + (1));\ni_24342 = G__24343;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar n__4666__auto___24344 = l2;\nvar i_24345 = (0);\nwhile(true){\nif((i_24345 < n__4666__auto___24344)){\n(res[(l1 + i_24345)] = (t2[(idxs2[i_24345])]));\n\nvar G__24346 = (i_24345 + (1));\ni_24345 = G__24346;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n});\ndatascript.query.sum_rel = (function datascript$query$sum_rel(a,b){\nvar map__23949 = a;\nvar map__23949__$1 = (((((!((map__23949 == null))))?(((((map__23949.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__23949.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23949):map__23949);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23949__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23949__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__23950 = b;\nvar map__23950__$1 = (((((!((map__23950 == null))))?(((((map__23950.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__23950.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23950):map__23950);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23950__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23950__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(attrs_a,attrs_b)){\nreturn (new datascript.query.Relation(attrs_a,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(tuples_a),tuples_b),null,null,null));\n} else {\nif((!(datascript.query.same_keys_QMARK_(attrs_a,attrs_b)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Can\\u2019t sum relations with different attrs: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a], 0)),\" and \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_b], 0))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429)], null));\n} else {\nif(cljs.core.every_QMARK_(cljs.core.number_QMARK_,cljs.core.vals(attrs_a))){\nvar idxb__GT_idxa = cljs.core.vec((function (){var iter__4582__auto__ = (function datascript$query$sum_rel_$_iter__23954(s__23955){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__23955__$1 = s__23955;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__23955__$1);\nif(temp__5735__auto__){\nvar s__23955__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__23955__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__23955__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__23957 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__23956 = (0);\nwhile(true){\nif((i__23956 < size__4581__auto__)){\nvar vec__23958 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__23956);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23958,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23958,(1),null);\ncljs.core.chunk_append(b__23957,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null));\n\nvar G__24359 = (i__23956 + (1));\ni__23956 = G__24359;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23957),datascript$query$sum_rel_$_iter__23954(cljs.core.chunk_rest(s__23955__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__23957),null);\n}\n} else {\nvar vec__23961 = cljs.core.first(s__23955__$2);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23961,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23961,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null),datascript$query$sum_rel_$_iter__23954(cljs.core.rest(s__23955__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(attrs_b);\n})());\nvar tlen = (cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.vals(attrs_a)) + (1));\nvar tuples_SINGLEQUOTE_ = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,tuple_b){\nvar tuple_SINGLEQUOTE_ = me.tonsky.persistent_sorted_set.arrays.make_array(tlen);\nvar seq__23964_24363 = cljs.core.seq(idxb__GT_idxa);\nvar chunk__23965_24364 = null;\nvar count__23966_24365 = (0);\nvar i__23967_24366 = (0);\nwhile(true){\nif((i__23967_24366 < count__23966_24365)){\nvar vec__23974_24370 = chunk__23965_24364.cljs$core$IIndexed$_nth$arity$2(null,i__23967_24366);\nvar idx_b_24371 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23974_24370,(0),null);\nvar idx_a_24372 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23974_24370,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_24372] = (tuple_b[idx_b_24371]));\n\n\nvar G__24373 = seq__23964_24363;\nvar G__24374 = chunk__23965_24364;\nvar G__24375 = count__23966_24365;\nvar G__24376 = (i__23967_24366 + (1));\nseq__23964_24363 = G__24373;\nchunk__23965_24364 = G__24374;\ncount__23966_24365 = G__24375;\ni__23967_24366 = G__24376;\ncontinue;\n} else {\nvar temp__5735__auto___24377 = cljs.core.seq(seq__23964_24363);\nif(temp__5735__auto___24377){\nvar seq__23964_24378__$1 = temp__5735__auto___24377;\nif(cljs.core.chunked_seq_QMARK_(seq__23964_24378__$1)){\nvar c__4609__auto___24379 = cljs.core.chunk_first(seq__23964_24378__$1);\nvar G__24380 = cljs.core.chunk_rest(seq__23964_24378__$1);\nvar G__24381 = c__4609__auto___24379;\nvar G__24382 = cljs.core.count(c__4609__auto___24379);\nvar G__24383 = (0);\nseq__23964_24363 = G__24380;\nchunk__23965_24364 = G__24381;\ncount__23966_24365 = G__24382;\ni__23967_24366 = G__24383;\ncontinue;\n} else {\nvar vec__23977_24384 = cljs.core.first(seq__23964_24378__$1);\nvar idx_b_24385 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23977_24384,(0),null);\nvar idx_a_24386 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23977_24384,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_24386] = (tuple_b[idx_b_24385]));\n\n\nvar G__24389 = cljs.core.next(seq__23964_24378__$1);\nvar G__24390 = null;\nvar G__24391 = (0);\nvar G__24392 = (0);\nseq__23964_24363 = G__24389;\nchunk__23965_24364 = G__24390;\ncount__23966_24365 = G__24391;\ni__23967_24366 = G__24392;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc,tuple_SINGLEQUOTE_);\n}),cljs.core.transient$(cljs.core.vec(tuples_a)),tuples_b));\nreturn (new datascript.query.Relation(attrs_a,tuples_SINGLEQUOTE_,null,null,null));\n} else {\nvar all_attrs = cljs.core.zipmap(cljs.core.keys(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a,attrs_b], 0))),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar G__23980 = (function (){var G__23982 = (new datascript.query.Relation(all_attrs,cljs.core.PersistentVector.EMPTY,null,null,null));\nvar G__23983 = a;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__23982,G__23983) : datascript.query.sum_rel.call(null,G__23982,G__23983));\n})();\nvar G__23981 = b;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__23980,G__23981) : datascript.query.sum_rel.call(null,G__23980,G__23981));\n\n}\n}\n}\n});\ndatascript.query.prod_rel = (function datascript$query$prod_rel(var_args){\nvar G__23985 = arguments.length;\nswitch (G__23985) {\ncase 0:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 2:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array((0))], null),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2 = (function (rel1,rel2){\nvar attrs1 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1));\nvar attrs2 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2));\nvar idxs1 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),attrs1));\nvar idxs2 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2),attrs2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(attrs1,attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,t1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc__$1,t2){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(t1,idxs1,t2,idxs2));\n}),acc,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2));\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1))),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$lang$maxFixedArity = 2);\n\ndatascript.query._differ_QMARK_ = (function datascript$query$_differ_QMARK_(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24400 = arguments.length;\nvar i__4790__auto___24401 = (0);\nwhile(true){\nif((i__4790__auto___24401 < len__4789__auto___24400)){\nargs__4795__auto__.push((arguments[i__4790__auto___24401]));\n\nvar G__24402 = (i__4790__auto___24401 + (1));\ni__4790__auto___24401 = G__24402;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\nreturn datascript.query._differ_QMARK_.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\n});\n\n(datascript.query._differ_QMARK_.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\nvar l = cljs.core.count(xs);\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.take.cljs$core$IFn$_invoke$arity$2((l / (2)),xs),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((l / (2)),xs));\n}));\n\n(datascript.query._differ_QMARK_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query._differ_QMARK_.cljs$lang$applyTo = (function (seq23986){\nvar self__4777__auto__ = this;\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23986));\n}));\n\ndatascript.query._get_else = (function datascript$query$_get_else(db,e,a,else_val){\nif((else_val == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"get-else: nil default value is not supported\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429)], null));\n} else {\n}\n\nvar temp__5737__auto__ = cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,a], null)));\nif((temp__5737__auto__ == null)){\nreturn else_val;\n} else {\nvar datom = temp__5737__auto__;\nreturn new cljs.core.Keyword(null,\"v\",\"v\",21465059).cljs$core$IFn$_invoke$arity$1(datom);\n}\n});\ndatascript.query._get_some = (function datascript$query$_get_some(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24403 = arguments.length;\nvar i__4790__auto___24404 = (0);\nwhile(true){\nif((i__4790__auto___24404 < len__4789__auto___24403)){\nargs__4795__auto__.push((arguments[i__4790__auto___24404]));\n\nvar G__24405 = (i__4790__auto___24404 + (1));\ni__4790__auto___24404 = G__24405;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((2) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((2)),(0),null)):null);\nreturn datascript.query._get_some.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4796__auto__);\n});\n\n(datascript.query._get_some.cljs$core$IFn$_invoke$arity$variadic = (function (db,e,as){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (_,a){\nvar temp__5739__auto__ = cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,a], null)));\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar datom = temp__5739__auto__;\nreturn cljs.core.reduced(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"a\",\"a\",-2123407586).cljs$core$IFn$_invoke$arity$1(datom),new cljs.core.Keyword(null,\"v\",\"v\",21465059).cljs$core$IFn$_invoke$arity$1(datom)], null));\n}\n}),null,as);\n}));\n\n(datascript.query._get_some.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(datascript.query._get_some.cljs$lang$applyTo = (function (seq23988){\nvar G__23989 = cljs.core.first(seq23988);\nvar seq23988__$1 = cljs.core.next(seq23988);\nvar G__23990 = cljs.core.first(seq23988__$1);\nvar seq23988__$2 = cljs.core.next(seq23988__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23989,G__23990,seq23988__$2);\n}));\n\ndatascript.query._missing_QMARK_ = (function datascript$query$_missing_QMARK_(db,e,a){\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.impl.entity.entity(db,e),a) == null);\n});\ndatascript.query.and_fn = (function datascript$query$and_fn(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24406 = arguments.length;\nvar i__4790__auto___24407 = (0);\nwhile(true){\nif((i__4790__auto___24407 < len__4789__auto___24406)){\nargs__4795__auto__.push((arguments[i__4790__auto___24407]));\n\nvar G__24411 = (i__4790__auto___24407 + (1));\ni__4790__auto___24407 = G__24411;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\nreturn datascript.query.and_fn.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\n});\n\n(datascript.query.and_fn.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (a,b){\nif(cljs.core.truth_(b)){\nreturn b;\n} else {\nreturn cljs.core.reduced(b);\n}\n}),true,args);\n}));\n\n(datascript.query.and_fn.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query.and_fn.cljs$lang$applyTo = (function (seq23991){\nvar self__4777__auto__ = this;\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23991));\n}));\n\ndatascript.query.or_fn = (function datascript$query$or_fn(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24412 = arguments.length;\nvar i__4790__auto___24413 = (0);\nwhile(true){\nif((i__4790__auto___24413 < len__4789__auto___24412)){\nargs__4795__auto__.push((arguments[i__4790__auto___24413]));\n\nvar G__24414 = (i__4790__auto___24413 + (1));\ni__4790__auto___24413 = G__24414;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\nreturn datascript.query.or_fn.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\n});\n\n(datascript.query.or_fn.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (a,b){\nif(cljs.core.truth_(b)){\nreturn cljs.core.reduced(b);\n} else {\nreturn b;\n}\n}),null,args);\n}));\n\n(datascript.query.or_fn.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query.or_fn.cljs$lang$applyTo = (function (seq23993){\nvar self__4777__auto__ = this;\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23993));\n}));\n\ndatascript.query.built_ins = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\"true?\",\"true?\",-1600332395,null),new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),new cljs.core.Symbol(null,\"odd?\",\"odd?\",-1458588199,null),new cljs.core.Symbol(null,\"get-else\",\"get-else\",1312024065,null),new cljs.core.Symbol(null,\">=\",\">=\",1016916022,null),new cljs.core.Symbol(null,\"print-str\",\"print-str\",-699700354,null),new cljs.core.Symbol(null,\">\",\">\",1085014381,null),new cljs.core.Symbol(null,\"count\",\"count\",-514511684,null),new cljs.core.Symbol(null,\"get-some\",\"get-some\",409442058,null),new cljs.core.Symbol(null,\"nil?\",\"nil?\",1612038930,null),new cljs.core.Symbol(null,\"inc\",\"inc\",324505433,null),new cljs.core.Symbol(null,\"/\",\"/\",-1371932971,null),new cljs.core.Symbol(null,\"quot\",\"quot\",-1125214196,null),new cljs.core.Symbol(null,\"false?\",\"false?\",-1522377573,null),new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),new cljs.core.Symbol(null,\"identity\",\"identity\",-1007039734,null),new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null),new cljs.core.Symbol(null,\"re-seq\",\"re-seq\",-2105554076,null),new cljs.core.Symbol(null,\"<=\",\"<=\",1244895369,null),new cljs.core.Symbol(\"clojure.string\",\"starts-with?\",\"clojure.string/starts-with?\",656256322,null),new cljs.core.Symbol(null,\"=\",\"=\",-1501502141,null),new cljs.core.Symbol(null,\"min\",\"min\",2085523049,null),new cljs.core.Symbol(null,\"+\",\"+\",-740910886,null),new cljs.core.Symbol(null,\"name\",\"name\",-810760592,null),new cljs.core.Symbol(null,\"missing?\",\"missing?\",-1710383910,null),new cljs.core.Symbol(null,\"ground\",\"ground\",-1460862835,null),new cljs.core.Symbol(null,\"rand-int\",\"rand-int\",-495012157,null),new cljs.core.Symbol(null,\"complement\",\"complement\",-913606051,null),new cljs.core.Symbol(null,\"==\",\"==\",-234118149,null),new cljs.core.Symbol(null,\"hash-map\",\"hash-map\",-439030950,null),new cljs.core.Symbol(null,\"compare\",\"compare\",1109853757,null),new cljs.core.Symbol(null,\"range\",\"range\",-1014743483,null),new cljs.core.Symbol(null,\"max\",\"max\",1701898075,null),new cljs.core.Symbol(null,\"empty?\",\"empty?\",76408555,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null),new cljs.core.Symbol(null,\"pr-str\",\"pr-str\",-2066912145,null),new cljs.core.Symbol(null,\"println-str\",\"println-str\",-2049216703,null),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"zero?\",\"zero?\",325758897,null),new cljs.core.Symbol(null,\"!=\",\"!=\",-201205829,null),new cljs.core.Symbol(null,\"prn-str\",\"prn-str\",-145225943,null),new cljs.core.Symbol(null,\"dec\",\"dec\",-766002333,null),new cljs.core.Symbol(null,\"re-pattern\",\"re-pattern\",1047705161,null),new cljs.core.Symbol(null,\"vector\",\"vector\",-751469611,null),new cljs.core.Symbol(null,\"not=\",\"not=\",1466536204,null),new cljs.core.Symbol(null,\"str\",\"str\",-1564826950,null),new cljs.core.Symbol(null,\"<\",\"<\",993667236,null),new cljs.core.Symbol(null,\"namespace\",\"namespace\",1263021155,null),new cljs.core.Symbol(null,\"-\",\"-\",-471816912,null),new cljs.core.Symbol(null,\"some?\",\"some?\",234752293,null),new cljs.core.Symbol(null,\"pos?\",\"pos?\",-244377722,null),new cljs.core.Symbol(null,\"rand\",\"rand\",-1745930995,null),new cljs.core.Symbol(null,\"re-matches\",\"re-matches\",-1865705768,null),new cljs.core.Symbol(null,\"list\",\"list\",-1889078086,null),new cljs.core.Symbol(null,\"contains?\",\"contains?\",-1676812576,null),new cljs.core.Symbol(\"clojure.string\",\"ends-with?\",\"clojure.string/ends-with?\",-745964149,null),new cljs.core.Symbol(null,\"subs\",\"subs\",1453849536,null),new cljs.core.Symbol(null,\"mod\",\"mod\",1510044207,null),new cljs.core.Symbol(\"clojure.string\",\"includes?\",\"clojure.string/includes?\",-1842146260,null),new cljs.core.Symbol(null,\"array-map\",\"array-map\",1555038968,null),new cljs.core.Symbol(null,\"rem\",\"rem\",664046770,null),new cljs.core.Symbol(null,\"even?\",\"even?\",-1827825394,null),new cljs.core.Symbol(null,\"type\",\"type\",-1480165421,null),new cljs.core.Symbol(null,\"neg?\",\"neg?\",-1902175577,null),new cljs.core.Symbol(\"clojure.string\",\"blank?\",\"clojure.string/blank?\",1772874244,null),new cljs.core.Symbol(null,\"not-empty\",\"not-empty\",2029453590,null),new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),new cljs.core.Symbol(null,\"identical?\",\"identical?\",-745864205,null),new cljs.core.Symbol(null,\"set\",\"set\",1945134081,null),new cljs.core.Symbol(null,\"re-find\",\"re-find\",1143444147,null)],[cljs.core.true_QMARK_,datascript.query.and_fn,cljs.core.odd_QMARK_,datascript.query._get_else,cljs.core._GT__EQ_,cljs.core.print_str,cljs.core._GT_,cljs.core.count,datascript.query._get_some,cljs.core.nil_QMARK_,cljs.core.inc,cljs.core._SLASH_,cljs.core.quot,cljs.core.false_QMARK_,cljs.core.not,cljs.core.identity,datascript.query._differ_QMARK_,cljs.core.re_seq,cljs.core._LT__EQ_,clojure.string.starts_with_QMARK_,cljs.core._EQ_,cljs.core.min,cljs.core._PLUS_,cljs.core.name,datascript.query._missing_QMARK_,cljs.core.identity,cljs.core.rand_int,cljs.core.complement,cljs.core._EQ__EQ_,cljs.core.hash_map,cljs.core.compare,cljs.core.range,cljs.core.max,cljs.core.empty,cljs.core._STAR_,cljs.core.pr_str,cljs.core.println_str,cljs.core.meta,cljs.core.zero_QMARK_,cljs.core.not_EQ_,cljs.core.prn_str,cljs.core.dec,cljs.core.re_pattern,cljs.core.vector,cljs.core.not_EQ_,cljs.core.str,cljs.core._LT_,cljs.core.namespace,cljs.core._,cljs.core.some_QMARK_,cljs.core.pos_QMARK_,cljs.core.rand,cljs.core.re_matches,cljs.core.list,cljs.core.contains_QMARK_,clojure.string.ends_with_QMARK_,cljs.core.subs,cljs.core.mod,clojure.string.includes_QMARK_,cljs.core.array_map,cljs.core.rem,cljs.core.even_QMARK_,cljs.core.type,cljs.core.neg_QMARK_,clojure.string.blank_QMARK_,cljs.core.not_empty,datascript.query.or_fn,cljs.core.identical_QMARK_,cljs.core.set,cljs.core.re_find]);\ndatascript.query.built_in_aggregates = (function (){var sum = (function datascript$query$sum(coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,(0),coll);\n});\nvar avg = (function datascript$query$avg(coll){\nreturn (sum(coll) / cljs.core.count(coll));\n});\nvar median = (function datascript$query$median(coll){\nvar terms = cljs.core.sort.cljs$core$IFn$_invoke$arity$1(coll);\nvar size = cljs.core.count(coll);\nvar med = (size >> (1));\nvar G__23999 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(terms,med);\nif(cljs.core.even_QMARK_(size)){\nreturn ((G__23999 + cljs.core.nth.cljs$core$IFn$_invoke$arity$2(terms,(med - (1)))) / (2));\n} else {\nreturn G__23999;\n}\n});\nvar variance = (function datascript$query$variance(coll){\nvar mean = avg(coll);\nvar sum__$1 = sum((function (){var iter__4582__auto__ = (function datascript$query$variance_$_iter__24000(s__24001){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24001__$1 = s__24001;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24001__$1);\nif(temp__5735__auto__){\nvar s__24001__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24001__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24001__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24003 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24002 = (0);\nwhile(true){\nif((i__24002 < size__4581__auto__)){\nvar x = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24002);\nvar delta = (x - mean);\ncljs.core.chunk_append(b__24003,(delta * delta));\n\nvar G__24418 = (i__24002 + (1));\ni__24002 = G__24418;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24003),datascript$query$variance_$_iter__24000(cljs.core.chunk_rest(s__24001__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24003),null);\n}\n} else {\nvar x = cljs.core.first(s__24001__$2);\nvar delta = (x - mean);\nreturn cljs.core.cons((delta * delta),datascript$query$variance_$_iter__24000(cljs.core.rest(s__24001__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(coll);\n})());\nreturn (sum__$1 / cljs.core.count(coll));\n});\nvar stddev = (function datascript$query$stddev(coll){\nreturn Math.sqrt(variance(coll));\n});\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\"variance\",\"variance\",-1522424942,null),new cljs.core.Symbol(null,\"count\",\"count\",-514511684,null),new cljs.core.Symbol(null,\"median\",\"median\",-2084869638,null),new cljs.core.Symbol(null,\"sum\",\"sum\",1777518341,null),new cljs.core.Symbol(null,\"min\",\"min\",2085523049,null),new cljs.core.Symbol(null,\"max\",\"max\",1701898075,null),new cljs.core.Symbol(null,\"count-distinct\",\"count-distinct\",-1566572514,null),new cljs.core.Symbol(null,\"distinct\",\"distinct\",-148347594,null),new cljs.core.Symbol(null,\"avg\",\"avg\",1837937727,null),new cljs.core.Symbol(null,\"stddev\",\"stddev\",775056588,null),new cljs.core.Symbol(null,\"rand\",\"rand\",-1745930995,null),new cljs.core.Symbol(null,\"sample\",\"sample\",1719555128,null)],[variance,cljs.core.count,median,sum,(function() {\nvar G__24421 = null;\nvar G__24421__1 = (function (coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,x){\nif((cljs.core.compare(x,acc) < (0))){\nreturn x;\n} else {\nreturn acc;\n}\n}),cljs.core.first(coll),cljs.core.next(coll));\n});\nvar G__24421__2 = (function (n,coll){\nreturn cljs.core.vec(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,x){\nif((cljs.core.count(acc) < n)){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,x));\n} else {\nif((cljs.core.compare(x,cljs.core.last(acc)) < (0))){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(acc),x));\n} else {\nreturn acc;\n\n}\n}\n}),cljs.core.PersistentVector.EMPTY,coll));\n});\nG__24421 = function(n,coll){\nswitch(arguments.length){\ncase 1:\nreturn G__24421__1.call(this,n);\ncase 2:\nreturn G__24421__2.call(this,n,coll);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__24421.cljs$core$IFn$_invoke$arity$1 = G__24421__1;\nG__24421.cljs$core$IFn$_invoke$arity$2 = G__24421__2;\nreturn G__24421;\n})()\n,(function() {\nvar G__24422 = null;\nvar G__24422__1 = (function (coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,x){\nif((cljs.core.compare(x,acc) > (0))){\nreturn x;\n} else {\nreturn acc;\n}\n}),cljs.core.first(coll),cljs.core.next(coll));\n});\nvar G__24422__2 = (function (n,coll){\nreturn cljs.core.vec(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,x){\nif((cljs.core.count(acc) < n)){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,x));\n} else {\nif((cljs.core.compare(x,cljs.core.first(acc)) > (0))){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.next(acc),x));\n} else {\nreturn acc;\n\n}\n}\n}),cljs.core.PersistentVector.EMPTY,coll));\n});\nG__24422 = function(n,coll){\nswitch(arguments.length){\ncase 1:\nreturn G__24422__1.call(this,n);\ncase 2:\nreturn G__24422__2.call(this,n,coll);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__24422.cljs$core$IFn$_invoke$arity$1 = G__24422__1;\nG__24422.cljs$core$IFn$_invoke$arity$2 = G__24422__2;\nreturn G__24422;\n})()\n,(function (coll){\nreturn cljs.core.count(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(coll));\n}),cljs.core.set,avg,stddev,(function() {\nvar G__24423 = null;\nvar G__24423__1 = (function (coll){\nreturn cljs.core.rand_nth(coll);\n});\nvar G__24423__2 = (function (n,coll){\nreturn cljs.core.vec(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(n,(function (){\nreturn cljs.core.rand_nth(coll);\n})));\n});\nG__24423 = function(n,coll){\nswitch(arguments.length){\ncase 1:\nreturn G__24423__1.call(this,n);\ncase 2:\nreturn G__24423__2.call(this,n,coll);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__24423.cljs$core$IFn$_invoke$arity$1 = G__24423__1;\nG__24423.cljs$core$IFn$_invoke$arity$2 = G__24423__2;\nreturn G__24423;\n})()\n,(function (n,coll){\nreturn cljs.core.vec(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.shuffle(coll)));\n})]);\n})();\ndatascript.query.parse_rules = (function datascript$query$parse_rules(rules){\nvar rules__$1 = ((typeof rules === 'string')?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(rules):rules);\nreturn cljs.core.group_by(cljs.core.ffirst,rules__$1);\n});\ndatascript.query.empty_rel = (function datascript$query$empty_rel(binding){\nvar vars = cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),datascript.parser.collect_vars_distinct(binding));\nreturn (new datascript.query.Relation(cljs.core.zipmap(vars,cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.PersistentVector.EMPTY,null,null,null));\n});\n\n/**\n * @interface\n */\ndatascript.query.IBinding = function(){};\n\ndatascript.query.in__GT_rel = (function datascript$query$in__GT_rel(binding,value){\nif((((!((binding == null)))) && ((!((binding.datascript$query$IBinding$in__GT_rel$arity$2 == null)))))){\nreturn binding.datascript$query$IBinding$in__GT_rel$arity$2(binding,value);\n} else {\nvar x__4487__auto__ = (((binding == null))?null:binding);\nvar m__4488__auto__ = (datascript.query.in__GT_rel[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__4488__auto__.call(null,binding,value));\n} else {\nvar m__4485__auto__ = (datascript.query.in__GT_rel[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__4485__auto__.call(null,binding,value));\n} else {\nthrow cljs.core.missing_protocol(\"IBinding.in->rel\",binding);\n}\n}\n}\n});\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (_,___$1){\nvar ___$2 = this;\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,value){\nvar binding__$1 = this;\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),(0)]),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null))], null),null,null,null));\n}));\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif(cljs.core.empty_QMARK_(coll)){\nreturn datascript.query.empty_rel(binding__$1);\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24005_SHARP_){\nreturn datascript.query.in__GT_rel(binding__$1.binding,p1__24005_SHARP_);\n}),coll));\n\n}\n}\n}));\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif((cljs.core.count(coll) < cljs.core.count(binding__$1.bindings))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Not enough elements in a collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to bind tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__24006_SHARP_,p2__24007_SHARP_){\nreturn datascript.query.in__GT_rel(p1__24006_SHARP_,p2__24007_SHARP_);\n}),binding__$1.bindings,coll));\n\n}\n}\n}));\ndatascript.query.resolve_in = (function datascript$query$resolve_in(context,p__24008){\nvar vec__24009 = p__24008;\nvar binding = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24009,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24009,(1),null);\nif((((binding instanceof datascript.parser.BindScalar)) && ((binding.variable instanceof datascript.parser.SrcVar)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(context,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),cljs.core.assoc,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),value);\n} else {\nif((((binding instanceof datascript.parser.BindScalar)) && ((binding.variable instanceof datascript.parser.RulesVar)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),datascript.query.parse_rules(value));\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,datascript.query.in__GT_rel(binding,value));\n\n}\n}\n});\ndatascript.query.resolve_ins = (function datascript$query$resolve_ins(context,bindings,values){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_in,context,cljs.core.zipmap(bindings,values));\n});\n/**\n * List of symbols in current pattern that might potentiall be resolved to refs\n */\ndatascript.query._STAR_lookup_attrs_STAR_ = null;\n/**\n * Default pattern source. Lookup refs, patterns, rules will be resolved with it\n */\ndatascript.query._STAR_implicit_source_STAR_ = null;\ndatascript.query.getter_fn = (function datascript$query$getter_fn(attrs,attr){\nvar idx = (attrs.cljs$core$IFn$_invoke$arity$1 ? attrs.cljs$core$IFn$_invoke$arity$1(attr) : attrs.call(null,attr));\nif(cljs.core.contains_QMARK_(datascript.query._STAR_lookup_attrs_STAR_,attr)){\nreturn (function (tuple){\nvar eid = (tuple[idx]);\nif(typeof eid === 'number'){\nreturn eid;\n} else {\nif(cljs.core.sequential_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nif(me.tonsky.persistent_sorted_set.arrays.array_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nreturn eid;\n\n}\n}\n}\n});\n} else {\nreturn (function (tuple){\nreturn (tuple[idx]);\n});\n}\n});\ndatascript.query.tuple_key_fn = (function datascript$query$tuple_key_fn(getters){\nif((cljs.core.count(getters) === (1))){\nreturn cljs.core.first(getters);\n} else {\nvar getters__$1 = cljs.core.to_array(getters);\nreturn (function (tuple){\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(getters__$1.map((function (p1__24012_SHARP_){\nreturn (p1__24012_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24012_SHARP_.cljs$core$IFn$_invoke$arity$1(tuple) : p1__24012_SHARP_.call(null,tuple));\n})));\n});\n}\n});\ndatascript.query.hash_attrs = (function datascript$query$hash_attrs(key_fn,tuples){\nvar tuples__$1 = tuples;\nvar hash_table = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(tuples__$1);\nif((temp__5737__auto__ == null)){\nreturn cljs.core.persistent_BANG_(hash_table);\n} else {\nvar tuple = temp__5737__auto__;\nvar key = (key_fn.cljs$core$IFn$_invoke$arity$1 ? key_fn.cljs$core$IFn$_invoke$arity$1(tuple) : key_fn.call(null,tuple));\nvar G__24439 = cljs.core.next(tuples__$1);\nvar G__24440 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(hash_table,key,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(hash_table,key,cljs.core.List.EMPTY),tuple));\ntuples__$1 = G__24439;\nhash_table = G__24440;\ncontinue;\n}\nbreak;\n}\n});\ndatascript.query.hash_join = (function datascript$query$hash_join(rel1,rel2){\nvar tuples1 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1);\nvar tuples2 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2);\nvar attrs1 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1);\nvar attrs2 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2);\nvar common_attrs = cljs.core.vec(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2)));\nvar common_gtrs1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24015_SHARP_){\nreturn datascript.query.getter_fn(attrs1,p1__24015_SHARP_);\n}),common_attrs);\nvar common_gtrs2 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24016_SHARP_){\nreturn datascript.query.getter_fn(attrs2,p1__24016_SHARP_);\n}),common_attrs);\nvar keep_attrs1 = cljs.core.keys(attrs1);\nvar keep_attrs2 = cljs.core.vec(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(attrs2)),cljs.core.set(cljs.core.keys(attrs1))));\nvar keep_idxs1 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(attrs1,keep_attrs1));\nvar keep_idxs2 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(attrs2,keep_attrs2));\nvar key_fn1 = datascript.query.tuple_key_fn(common_gtrs1);\nvar hash = datascript.query.hash_attrs(key_fn1,tuples1);\nvar key_fn2 = datascript.query.tuple_key_fn(common_gtrs2);\nvar new_tuples = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,tuple2){\nvar key = (key_fn2.cljs$core$IFn$_invoke$arity$1 ? key_fn2.cljs$core$IFn$_invoke$arity$1(tuple2) : key_fn2.call(null,tuple2));\nvar temp__5737__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(hash,key);\nif((temp__5737__auto__ == null)){\nreturn acc;\n} else {\nvar tuples1__$1 = temp__5737__auto__;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc__$1,tuple1){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(tuple1,keep_idxs1,tuple2,keep_idxs2));\n}),acc,tuples1__$1);\n}\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),tuples2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(keep_attrs1,keep_attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),new_tuples,null,null,null));\n});\ndatascript.query.subtract_rel = (function datascript$query$subtract_rel(a,b){\nvar map__24020 = a;\nvar map__24020__$1 = (((((!((map__24020 == null))))?(((((map__24020.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24020.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24020):map__24020);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24020__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24020__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__24021 = b;\nvar map__24021__$1 = (((((!((map__24021 == null))))?(((((map__24021.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24021.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24021):map__24021);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24021__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24021__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar attrs = datascript.query.intersect_keys(attrs_a,attrs_b);\nvar getters_b = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24017_SHARP_){\nreturn datascript.query.getter_fn(attrs_b,p1__24017_SHARP_);\n}),attrs);\nvar key_fn_b = datascript.query.tuple_key_fn(getters_b);\nvar hash = datascript.query.hash_attrs(key_fn_b,tuples_b);\nvar getters_a = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24018_SHARP_){\nreturn datascript.query.getter_fn(attrs_a,p1__24018_SHARP_);\n}),attrs);\nvar key_fn_a = datascript.query.tuple_key_fn(getters_a);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.filterv((function (p1__24019_SHARP_){\nreturn ((function (){var G__24024 = (key_fn_a.cljs$core$IFn$_invoke$arity$1 ? key_fn_a.cljs$core$IFn$_invoke$arity$1(p1__24019_SHARP_) : key_fn_a.call(null,p1__24019_SHARP_));\nreturn (hash.cljs$core$IFn$_invoke$arity$1 ? hash.cljs$core$IFn$_invoke$arity$1(G__24024) : hash.call(null,G__24024));\n})() == null);\n}),tuples_a));\n});\ndatascript.query.lookup_pattern_db = (function datascript$query$lookup_pattern_db(db,pattern){\nvar search_pattern = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__24025_SHARP_){\nif((p1__24025_SHARP_ instanceof cljs.core.Symbol)){\nreturn null;\n} else {\nreturn p1__24025_SHARP_;\n}\n}),pattern);\nvar datoms = datascript.db._search(db,search_pattern);\nvar attr__GT_prop = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__24026){\nvar vec__24027 = p__24026;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24027,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24027,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"e\",\"a\",\"v\",\"tx\"], null))));\nreturn (new datascript.query.Relation(attr__GT_prop,datoms,null,null,null));\n});\ndatascript.query.matches_pattern_QMARK_ = (function datascript$query$matches_pattern_QMARK_(pattern,tuple){\nvar tuple__$1 = tuple;\nvar pattern__$1 = pattern;\nwhile(true){\nif(cljs.core.truth_((function (){var and__4174__auto__ = tuple__$1;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn pattern__$1;\n} else {\nreturn and__4174__auto__;\n}\n})())){\nvar t = cljs.core.first(tuple__$1);\nvar p = cljs.core.first(pattern__$1);\nif((((p instanceof cljs.core.Symbol)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,p)))){\nvar G__24459 = cljs.core.next(tuple__$1);\nvar G__24460 = cljs.core.next(pattern__$1);\ntuple__$1 = G__24459;\npattern__$1 = G__24460;\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n});\ndatascript.query.lookup_pattern_coll = (function datascript$query$lookup_pattern_coll(coll,pattern){\nvar data = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24031_SHARP_){\nreturn datascript.query.matches_pattern_QMARK_(pattern,p1__24031_SHARP_);\n}),coll);\nvar attr__GT_idx = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__24032){\nvar vec__24033 = p__24032;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24033,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24033,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,cljs.core.range.cljs$core$IFn$_invoke$arity$0())));\nreturn (new datascript.query.Relation(attr__GT_idx,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.to_array,data),null,null,null));\n});\ndatascript.query.normalize_pattern_clause = (function datascript$query$normalize_pattern_clause(clause){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nreturn clause;\n} else {\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null)], null),clause);\n}\n});\ndatascript.query.lookup_pattern = (function datascript$query$lookup_pattern(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$ISearch$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source))){\nreturn datascript.query.lookup_pattern_db(source,pattern);\n} else {\nreturn datascript.query.lookup_pattern_coll(source,pattern);\n\n}\n});\ndatascript.query.collapse_rels = (function datascript$query$collapse_rels(rels,new_rel){\nvar rels__$1 = rels;\nvar new_rel__$1 = new_rel;\nvar acc = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(rels__$1);\nif((temp__5737__auto__ == null)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,new_rel__$1);\n} else {\nvar rel = temp__5737__auto__;\nif(cljs.core.truth_(cljs.core.not_empty(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(new_rel__$1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel))))){\nvar G__24487 = cljs.core.next(rels__$1);\nvar G__24488 = datascript.query.hash_join(rel,new_rel__$1);\nvar G__24489 = acc;\nrels__$1 = G__24487;\nnew_rel__$1 = G__24488;\nacc = G__24489;\ncontinue;\n} else {\nvar G__24490 = cljs.core.next(rels__$1);\nvar G__24491 = new_rel__$1;\nvar G__24492 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,rel);\nrels__$1 = G__24490;\nnew_rel__$1 = G__24491;\nacc = G__24492;\ncontinue;\n}\n}\nbreak;\n}\n});\ndatascript.query.rel_with_attr = (function datascript$query$rel_with_attr(context,sym){\nreturn cljs.core.some((function (p1__24037_SHARP_){\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__24037_SHARP_),sym)){\nreturn p1__24037_SHARP_;\n} else {\nreturn null;\n}\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\n});\ndatascript.query.context_resolve_val = (function datascript$query$context_resolve_val(context,sym){\nvar temp__5739__auto__ = datascript.query.rel_with_attr(context,sym);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar rel = temp__5739__auto__;\nvar temp__5739__auto____$1 = cljs.core.first(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel));\nif((temp__5739__auto____$1 == null)){\nreturn null;\n} else {\nvar tuple = temp__5739__auto____$1;\nreturn (tuple[(function (){var fexpr__24038 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nreturn (fexpr__24038.cljs$core$IFn$_invoke$arity$1 ? fexpr__24038.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__24038.call(null,sym));\n})()]);\n}\n}\n});\ndatascript.query.rel_contains_attrs_QMARK_ = (function datascript$query$rel_contains_attrs_QMARK_(rel,attrs){\nreturn cljs.core.some((function (p1__24040_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),p1__24040_SHARP_);\n}),attrs);\n});\ndatascript.query.rel_prod_by_attrs = (function datascript$query$rel_prod_by_attrs(context,attrs){\nvar rels = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24041_SHARP_){\nreturn datascript.query.rel_contains_attrs_QMARK_(p1__24041_SHARP_,attrs);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\nvar production = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,rels);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),(function (p1__24042_SHARP_){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(rels),p1__24042_SHARP_);\n})),production], null);\n});\ndatascript.query._call_fn = (function datascript$query$_call_fn(context,rel,f,args){\nvar sources = new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context);\nvar attrs = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nvar len = cljs.core.count(args);\nvar static_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar tuples_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar n__4666__auto___24519 = len;\nvar i_24520 = (0);\nwhile(true){\nif((i_24520 < n__4666__auto___24519)){\nvar arg_24521 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(args,i_24520);\nif((arg_24521 instanceof cljs.core.Symbol)){\nvar temp__5737__auto___24522 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sources,arg_24521);\nif((temp__5737__auto___24522 == null)){\n(tuples_args[i_24520] = cljs.core.get.cljs$core$IFn$_invoke$arity$2(attrs,arg_24521));\n} else {\nvar source_24523 = temp__5737__auto___24522;\n(static_args[i_24520] = source_24523);\n}\n} else {\n(static_args[i_24520] = arg_24521);\n}\n\nvar G__24524 = (i_24520 + (1));\ni_24520 = G__24524;\ncontinue;\n} else {\n}\nbreak;\n}\n\nif((f === cljs.core.vector)){\nreturn (function (tuple){\nvar args__$1 = me.tonsky.persistent_sorted_set.arrays.aclone(static_args);\nvar n__4666__auto___24525 = len;\nvar i_24526 = (0);\nwhile(true){\nif((i_24526 < n__4666__auto___24525)){\nvar temp__5739__auto___24527 = (tuples_args[i_24526]);\nif((temp__5739__auto___24527 == null)){\n} else {\nvar tuple_idx_24528 = temp__5739__auto___24527;\nvar v_24529 = (tuple[tuple_idx_24528]);\n(args__$1[i_24526] = v_24529);\n}\n\nvar G__24530 = (i_24526 + (1));\ni_24526 = G__24530;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args__$1);\n});\n} else {\nreturn (function (tuple){\nvar n__4666__auto___24531 = len;\nvar i_24532 = (0);\nwhile(true){\nif((i_24532 < n__4666__auto___24531)){\nvar temp__5739__auto___24533 = (tuples_args[i_24532]);\nif((temp__5739__auto___24533 == null)){\n} else {\nvar tuple_idx_24534 = temp__5739__auto___24533;\nvar v_24535 = (tuple[tuple_idx_24534]);\n(static_args[i_24532] = v_24535);\n}\n\nvar G__24536 = (i_24532 + (1));\ni_24532 = G__24536;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,static_args);\n});\n}\n});\ndatascript.query.resolve_sym = (function datascript$query$resolve_sym(sym){\nreturn null;\n});\ndatascript.query.filter_by_pred = (function datascript$query$filter_by_pred(context,clause){\nvar vec__24044 = clause;\nvar vec__24047 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24044,(0),null);\nvar seq__24048 = cljs.core.seq(vec__24047);\nvar first__24049 = cljs.core.first(seq__24048);\nvar seq__24048__$1 = cljs.core.next(seq__24048);\nvar f = first__24049;\nvar args = seq__24048__$1;\nvar pred = (function (){var or__4185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.query.built_ins,f);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nvar or__4185__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__4185__auto____$2)){\nreturn or__4185__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown predicate '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__24050 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24050,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24050,(1),null);\nvar new_rel = (cljs.core.truth_(pred)?(function (){var tuple_pred = datascript.query._call_fn(context__$1,production,pred,args);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),(function (p1__24043_SHARP_){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(tuple_pred,p1__24043_SHARP_);\n}));\n})():cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,new_rel);\n});\ndatascript.query.bind_by_fn = (function datascript$query$bind_by_fn(context,clause){\nvar vec__24054 = clause;\nvar vec__24057 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24054,(0),null);\nvar seq__24058 = cljs.core.seq(vec__24057);\nvar first__24059 = cljs.core.first(seq__24058);\nvar seq__24058__$1 = cljs.core.next(seq__24058);\nvar f = first__24059;\nvar args = seq__24058__$1;\nvar out = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24054,(1),null);\nvar binding = datascript.parser.parse_binding(out);\nvar fun = (function (){var or__4185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.query.built_ins,f);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nvar or__4185__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__4185__auto____$2)){\nreturn or__4185__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown function '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__24060 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24060,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24060,(1),null);\nvar new_rel = (cljs.core.truth_(fun)?(function (){var tuple_fn = datascript.query._call_fn(context__$1,production,fun,args);\nvar rels = (function (){var iter__4582__auto__ = (function datascript$query$bind_by_fn_$_iter__24063(s__24064){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24064__$1 = s__24064;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24064__$1);\nif(temp__5735__auto__){\nvar s__24064__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24064__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24064__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24066 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24065 = (0);\nwhile(true){\nif((i__24065 < size__4581__auto__)){\nvar tuple = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24065);\nvar val = (tuple_fn.cljs$core$IFn$_invoke$arity$1 ? tuple_fn.cljs$core$IFn$_invoke$arity$1(tuple) : tuple_fn.call(null,tuple));\nif((!((val == null)))){\ncljs.core.chunk_append(b__24066,datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)));\n\nvar G__24564 = (i__24065 + (1));\ni__24065 = G__24564;\ncontinue;\n} else {\nvar G__24565 = (i__24065 + (1));\ni__24065 = G__24565;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24066),datascript$query$bind_by_fn_$_iter__24063(cljs.core.chunk_rest(s__24064__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24066),null);\n}\n} else {\nvar tuple = cljs.core.first(s__24064__$2);\nvar val = (tuple_fn.cljs$core$IFn$_invoke$arity$1 ? tuple_fn.cljs$core$IFn$_invoke$arity$1(tuple) : tuple_fn.call(null,tuple));\nif((!((val == null)))){\nreturn cljs.core.cons(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)),datascript$query$bind_by_fn_$_iter__24063(cljs.core.rest(s__24064__$2)));\n} else {\nvar G__24567 = cljs.core.rest(s__24064__$2);\ns__24064__$1 = G__24567;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(production));\n})();\nif(cljs.core.empty_QMARK_(rels)){\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(production,datascript.query.empty_rel(binding));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\n}\n})():datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY),datascript.query.empty_rel(binding)));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,new_rel);\n});\ndatascript.query.rule_QMARK_ = (function datascript$query$rule_QMARK_(context,clause){\nreturn ((cljs.core.sequential_QMARK_(clause)) && (cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),((datascript.query.source_QMARK_(cljs.core.first(clause)))?cljs.core.second(clause):cljs.core.first(clause)))));\n});\ndatascript.query.rule_seqid = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\ndatascript.query.expand_rule = (function datascript$query$expand_rule(clause,context,used_args){\nvar vec__24068 = clause;\nvar seq__24069 = cljs.core.seq(vec__24068);\nvar first__24070 = cljs.core.first(seq__24069);\nvar seq__24069__$1 = cljs.core.next(seq__24069);\nvar rule = first__24070;\nvar call_args = seq__24069__$1;\nvar seqid = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(datascript.query.rule_seqid,cljs.core.inc);\nvar branches = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),rule);\nvar iter__4582__auto__ = (function datascript$query$expand_rule_$_iter__24071(s__24072){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24072__$1 = s__24072;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24072__$1);\nif(temp__5735__auto__){\nvar s__24072__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24072__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24072__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24074 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24073 = (0);\nwhile(true){\nif((i__24073 < size__4581__auto__)){\nvar branch = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24073);\nvar vec__24075 = branch;\nvar seq__24076 = cljs.core.seq(vec__24075);\nvar first__24077 = cljs.core.first(seq__24076);\nvar seq__24076__$1 = cljs.core.next(seq__24076);\nvar vec__24078 = first__24077;\nvar seq__24079 = cljs.core.seq(vec__24078);\nvar first__24080 = cljs.core.first(seq__24079);\nvar seq__24079__$1 = cljs.core.next(seq__24079);\nvar _ = first__24080;\nvar rule_args = seq__24079__$1;\nvar clauses = seq__24076__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\ncljs.core.chunk_append(b__24074,clojure.walk.postwalk(((function (i__24073,vec__24075,seq__24076,first__24077,seq__24076__$1,vec__24078,seq__24079,first__24080,seq__24079__$1,_,rule_args,clauses,replacements,branch,c__4580__auto__,size__4581__auto__,b__24074,s__24072__$2,temp__5735__auto__,vec__24068,seq__24069,first__24070,seq__24069__$1,rule,call_args,seqid,branches){\nreturn (function (p1__24067_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__24067_SHARP_)){\nvar x__20503__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__24067_SHARP_) : replacements.call(null,p1__24067_SHARP_));\nif((x__20503__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__24067_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__20503__auto__;\n}\n} else {\nreturn p1__24067_SHARP_;\n}\n});})(i__24073,vec__24075,seq__24076,first__24077,seq__24076__$1,vec__24078,seq__24079,first__24080,seq__24079__$1,_,rule_args,clauses,replacements,branch,c__4580__auto__,size__4581__auto__,b__24074,s__24072__$2,temp__5735__auto__,vec__24068,seq__24069,first__24070,seq__24069__$1,rule,call_args,seqid,branches))\n,clauses));\n\nvar G__24570 = (i__24073 + (1));\ni__24073 = G__24570;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24074),datascript$query$expand_rule_$_iter__24071(cljs.core.chunk_rest(s__24072__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24074),null);\n}\n} else {\nvar branch = cljs.core.first(s__24072__$2);\nvar vec__24081 = branch;\nvar seq__24082 = cljs.core.seq(vec__24081);\nvar first__24083 = cljs.core.first(seq__24082);\nvar seq__24082__$1 = cljs.core.next(seq__24082);\nvar vec__24084 = first__24083;\nvar seq__24085 = cljs.core.seq(vec__24084);\nvar first__24086 = cljs.core.first(seq__24085);\nvar seq__24085__$1 = cljs.core.next(seq__24085);\nvar _ = first__24086;\nvar rule_args = seq__24085__$1;\nvar clauses = seq__24082__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\nreturn cljs.core.cons(clojure.walk.postwalk(((function (vec__24081,seq__24082,first__24083,seq__24082__$1,vec__24084,seq__24085,first__24086,seq__24085__$1,_,rule_args,clauses,replacements,branch,s__24072__$2,temp__5735__auto__,vec__24068,seq__24069,first__24070,seq__24069__$1,rule,call_args,seqid,branches){\nreturn (function (p1__24067_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__24067_SHARP_)){\nvar x__20503__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__24067_SHARP_) : replacements.call(null,p1__24067_SHARP_));\nif((x__20503__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__24067_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__20503__auto__;\n}\n} else {\nreturn p1__24067_SHARP_;\n}\n});})(vec__24081,seq__24082,first__24083,seq__24082__$1,vec__24084,seq__24085,first__24086,seq__24085__$1,_,rule_args,clauses,replacements,branch,s__24072__$2,temp__5735__auto__,vec__24068,seq__24069,first__24070,seq__24069__$1,rule,call_args,seqid,branches))\n,clauses),datascript$query$expand_rule_$_iter__24071(cljs.core.rest(s__24072__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(branches);\n});\ndatascript.query.remove_pairs = (function datascript$query$remove_pairs(xs,ys){\nvar pairs = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__24087){\nvar vec__24088 = p__24087;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24088,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24088,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,xs,ys));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs)], null);\n});\ndatascript.query.rule_gen_guards = (function datascript$query$rule_gen_guards(rule_clause,used_args){\nvar vec__24091 = rule_clause;\nvar seq__24092 = cljs.core.seq(vec__24091);\nvar first__24093 = cljs.core.first(seq__24092);\nvar seq__24092__$1 = cljs.core.next(seq__24092);\nvar rule = first__24093;\nvar call_args = seq__24092__$1;\nvar prev_call_args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(used_args,rule);\nvar iter__4582__auto__ = (function datascript$query$rule_gen_guards_$_iter__24094(s__24095){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24095__$1 = s__24095;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24095__$1);\nif(temp__5735__auto__){\nvar s__24095__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24095__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24095__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24097 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24096 = (0);\nwhile(true){\nif((i__24096 < size__4581__auto__)){\nvar prev_args = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24096);\nvar vec__24099 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24099,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24099,(1),null);\ncljs.core.chunk_append(b__24097,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null));\n\nvar G__24592 = (i__24096 + (1));\ni__24096 = G__24592;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24097),datascript$query$rule_gen_guards_$_iter__24094(cljs.core.chunk_rest(s__24095__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24097),null);\n}\n} else {\nvar prev_args = cljs.core.first(s__24095__$2);\nvar vec__24102 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24102,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24102,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null),datascript$query$rule_gen_guards_$_iter__24094(cljs.core.rest(s__24095__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(prev_call_args);\n});\ndatascript.query.walk_collect = (function datascript$query$walk_collect(form,pred){\nvar res = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nclojure.walk.postwalk((function (p1__24105_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__24105_SHARP_) : pred.call(null,p1__24105_SHARP_)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(res,cljs.core.conj,p1__24105_SHARP_);\n} else {\n}\n\nreturn p1__24105_SHARP_;\n}),form);\n\nreturn cljs.core.deref(res);\n});\ndatascript.query.collect_vars = (function datascript$query$collect_vars(clause){\nreturn cljs.core.set(datascript.query.walk_collect(clause,datascript.query.free_var_QMARK_));\n});\ndatascript.query.split_guards = (function datascript$query$split_guards(clauses,guards){\nvar bound_vars = datascript.query.collect_vars(clauses);\nvar pred = (function (p__24106){\nvar vec__24107 = p__24106;\nvar vec__24110 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24107,(0),null);\nvar seq__24111 = cljs.core.seq(vec__24110);\nvar first__24112 = cljs.core.first(seq__24111);\nvar seq__24111__$1 = cljs.core.next(seq__24111);\nvar _ = first__24112;\nvar vars = seq__24111__$1;\nreturn cljs.core.every_QMARK_(bound_vars,vars);\n});\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,guards),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(pred,guards)], null);\n});\ndatascript.query.solve_rule = (function datascript$query$solve_rule(context,clause){\nvar final_attrs = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,clause);\nvar final_attrs_map = cljs.core.zipmap(final_attrs,cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar solve = (function (prefix_context,clauses){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query._resolve_clause,prefix_context,clauses);\n});\nvar empty_rels_QMARK_ = (function (context__$1){\nreturn cljs.core.some((function (p1__24113_SHARP_){\nreturn cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(p1__24113_SHARP_));\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context__$1));\n});\nvar stack = (new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),cljs.core.PersistentArrayMap.EMPTY], null),null,(1),null));\nvar rel = (new datascript.query.Relation(final_attrs_map,cljs.core.PersistentVector.EMPTY,null,null,null));\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(stack);\nif((temp__5737__auto__ == null)){\nreturn rel;\n} else {\nvar frame = temp__5737__auto__;\nvar vec__24133 = cljs.core.split_with(((function (stack,rel,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__24114_SHARP_){\nreturn (!(datascript.query.rule_QMARK_(context,p1__24114_SHARP_)));\n});})(stack,rel,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241).cljs$core$IFn$_invoke$arity$1(frame));\nvar clauses = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24133,(0),null);\nvar vec__24136 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24133,(1),null);\nvar seq__24137 = cljs.core.seq(vec__24136);\nvar first__24138 = cljs.core.first(seq__24137);\nvar seq__24137__$1 = cljs.core.next(seq__24137);\nvar rule_clause = first__24138;\nvar next_clauses = seq__24137__$1;\nif((rule_clause == null)){\nvar context__$1 = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),clauses);\nvar tuples = (datascript.query._collect.cljs$core$IFn$_invoke$arity$2 ? datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context__$1,final_attrs) : datascript.query._collect.call(null,context__$1,final_attrs));\nvar new_rel = (new datascript.query.Relation(final_attrs_map,tuples,null,null,null));\nvar G__24617 = cljs.core.next(stack);\nvar G__24618 = datascript.query.sum_rel(rel,new_rel);\nstack = G__24617;\nrel = G__24618;\ncontinue;\n} else {\nvar vec__24139 = rule_clause;\nvar seq__24140 = cljs.core.seq(vec__24139);\nvar first__24141 = cljs.core.first(seq__24140);\nvar seq__24140__$1 = cljs.core.next(seq__24140);\nvar rule = first__24141;\nvar call_args = seq__24140__$1;\nvar guards = datascript.query.rule_gen_guards(rule_clause,new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame));\nvar vec__24142 = datascript.query.split_guards(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028).cljs$core$IFn$_invoke$arity$1(frame),clauses),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(guards,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308).cljs$core$IFn$_invoke$arity$1(frame)));\nvar active_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24142,(0),null);\nvar pending_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24142,(1),null);\nif(cljs.core.truth_(cljs.core.some(((function (stack,rel,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__24115_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__24115_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null))], null));\n});})(stack,rel,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,active_gs))){\nvar G__24619 = cljs.core.next(stack);\nvar G__24620 = rel;\nstack = G__24619;\nrel = G__24620;\ncontinue;\n} else {\nvar prefix_clauses = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clauses,active_gs);\nvar prefix_context = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),prefix_clauses);\nif(cljs.core.truth_(empty_rels_QMARK_(prefix_context))){\nvar G__24621 = cljs.core.next(stack);\nvar G__24622 = rel;\nstack = G__24621;\nrel = G__24622;\ncontinue;\n} else {\nvar used_args = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.PersistentVector.EMPTY),call_args));\nvar branches = datascript.query.expand_rule(rule_clause,context,used_args);\nvar G__24623 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var iter__4582__auto__ = ((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function datascript$query$solve_rule_$_iter__24145(s__24146){\nreturn (new cljs.core.LazySeq(null,((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (){\nvar s__24146__$1 = s__24146;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24146__$1);\nif(temp__5735__auto__){\nvar s__24146__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24146__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24146__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24148 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24147 = (0);\nwhile(true){\nif((i__24147 < size__4581__auto__)){\nvar branch = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24147);\ncljs.core.chunk_append(b__24148,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null));\n\nvar G__24628 = (i__24147 + (1));\ni__24147 = G__24628;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24148),datascript$query$solve_rule_$_iter__24145(cljs.core.chunk_rest(s__24146__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24148),null);\n}\n} else {\nvar branch = cljs.core.first(s__24146__$2);\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null),datascript$query$solve_rule_$_iter__24145(cljs.core.rest(s__24146__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,null,null));\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__24139,seq__24140,first__24141,seq__24140__$1,rule,call_args,guards,vec__24142,active_gs,pending_gs,vec__24133,clauses,vec__24136,seq__24137,first__24138,seq__24137__$1,rule_clause,next_clauses,frame,temp__5737__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n;\nreturn iter__4582__auto__(branches);\n})(),cljs.core.next(stack));\nvar G__24624 = rel;\nstack = G__24623;\nrel = G__24624;\ncontinue;\n}\n}\n}\n}\nbreak;\n}\n});\ndatascript.query.resolve_pattern_lookup_refs = (function datascript$query$resolve_pattern_lookup_refs(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source))){\nvar vec__24150 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24150,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24150,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24150,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24150,(3),null);\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_((function (){var or__4185__auto__ = datascript.query.lookup_ref_QMARK_(e);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(e);\n}\n})())?datascript.db.entid_strict(source,e):e),a,(cljs.core.truth_((function (){var and__4174__auto__ = v;\nif(cljs.core.truth_(and__4174__auto__)){\nif(datascript.query.attr_QMARK_(a)){\nif(datascript.db.ref_QMARK_(source,a)){\nvar or__4185__auto__ = datascript.query.lookup_ref_QMARK_(v);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(v);\n}\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())?datascript.db.entid_strict(source,v):v),(cljs.core.truth_(datascript.query.lookup_ref_QMARK_(tx))?datascript.db.entid_strict(source,tx):tx)], null),(0),cljs.core.count(pattern));\n} else {\nreturn pattern;\n}\n});\ndatascript.query.dynamic_lookup_attrs = (function datascript$query$dynamic_lookup_attrs(source,pattern){\nvar vec__24153 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24153,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24153,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24153,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24153,(3),null);\nvar G__24156 = cljs.core.PersistentHashSet.EMPTY;\nvar G__24156__$1 = ((datascript.query.free_var_QMARK_(e))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__24156,e):G__24156);\nvar G__24156__$2 = ((datascript.query.free_var_QMARK_(tx))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__24156__$1,tx):G__24156__$1);\nif(((datascript.query.free_var_QMARK_(v)) && ((!(datascript.query.free_var_QMARK_(a)))) && (datascript.db.ref_QMARK_(source,a)))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__24156__$2,v);\n} else {\nreturn G__24156__$2;\n}\n});\ndatascript.query.limit_rel = (function datascript$query$limit_rel(rel,vars){\nvar temp__5739__auto__ = cljs.core.not_empty(cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),vars));\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar attrs_SINGLEQUOTE_ = temp__5739__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(rel,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),attrs_SINGLEQUOTE_);\n}\n});\ndatascript.query.limit_context = (function datascript$query$limit_context(context,vars){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (p1__24157_SHARP_){\nreturn datascript.query.limit_rel(p1__24157_SHARP_,vars);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)));\n});\ndatascript.query.check_bound = (function datascript$query$check_bound(context,vars,form){\nvar bound = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__24159_SHARP_){\nreturn cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__24159_SHARP_));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)], 0)));\nif(clojure.set.subset_QMARK_(vars,bound)){\nreturn null;\n} else {\nvar missing = clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(vars),bound);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([form], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing], null));\n}\n});\ndatascript.query._resolve_clause = (function datascript$query$_resolve_clause(var_args){\nvar G__24166 = arguments.length;\nswitch (G__24166) {\ncase 2:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2 = (function (context,clause){\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,clause,clause);\n}));\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3 = (function (context,clause,orig_clause){\nwhile(true){\nvar pred__24167 = datascript.query.looks_like_QMARK_;\nvar expr__24168 = clause;\nif(cljs.core.truth_((function (){var G__24170 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null)], null);\nvar G__24171 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24170,G__24171) : pred__24167.call(null,G__24170,G__24171));\n})())){\nreturn datascript.query.filter_by_pred(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__24172 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null);\nvar G__24173 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24172,G__24173) : pred__24167.call(null,G__24172,G__24173));\n})())){\nreturn datascript.query.bind_by_fn(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__24174 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.source_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24175 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24174,G__24175) : pred__24167.call(null,G__24174,G__24175));\n})())){\nvar vec__24176 = clause;\nvar seq__24177 = cljs.core.seq(vec__24176);\nvar first__24178 = cljs.core.first(seq__24177);\nvar seq__24177__$1 = cljs.core.next(seq__24177);\nvar source_sym = first__24178;\nvar rest = seq__24177__$1;\nvar _STAR_implicit_source_STAR__orig_val__24179 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__24180 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),source_sym);\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__24180);\n\ntry{return datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,rest,clause);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__24179);\n}} else {\nif(cljs.core.truth_((function (){var G__24181 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24182 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24181,G__24182) : pred__24167.call(null,G__24181,G__24182));\n})())){\nvar vec__24183 = clause;\nvar seq__24184 = cljs.core.seq(vec__24183);\nvar first__24185 = cljs.core.first(seq__24184);\nvar seq__24184__$1 = cljs.core.next(seq__24184);\nvar _ = first__24185;\nvar branches = seq__24184__$1;\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__24183,seq__24184,first__24185,seq__24184__$1,_,branches,pred__24167,expr__24168){\nreturn (function (p1__24160_SHARP_){\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(context,p1__24160_SHARP_) : datascript.query.resolve_clause.call(null,context,p1__24160_SHARP_));\n});})(context,clause,orig_clause,vec__24183,seq__24184,first__24185,seq__24184__$1,_,branches,pred__24167,expr__24168))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__24183,seq__24184,first__24185,seq__24184__$1,_,branches,contexts,pred__24167,expr__24168){\nreturn (function (p1__24161_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__24161_SHARP_));\n});})(context,clause,orig_clause,vec__24183,seq__24184,first__24185,seq__24184__$1,_,branches,contexts,pred__24167,expr__24168))\n,contexts);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(contexts),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels)], null));\n} else {\nif(cljs.core.truth_((function (){var G__24186 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24187 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24186,G__24187) : pred__24167.call(null,G__24186,G__24187));\n})())){\nvar vec__24188 = clause;\nvar seq__24189 = cljs.core.seq(vec__24188);\nvar first__24190 = cljs.core.first(seq__24189);\nvar seq__24189__$1 = cljs.core.next(seq__24189);\nvar _ = first__24190;\nvar first__24190__$1 = cljs.core.first(seq__24189__$1);\nvar seq__24189__$2 = cljs.core.next(seq__24189__$1);\nvar vec__24191 = first__24190__$1;\nvar seq__24192 = cljs.core.seq(vec__24191);\nvar first__24193 = cljs.core.first(seq__24192);\nvar seq__24192__$1 = cljs.core.next(seq__24192);\nvar req_vars = first__24193;\nvar vars = seq__24192__$1;\nvar branches = seq__24189__$2;\ndatascript.query.check_bound(context,req_vars,orig_clause);\n\nvar G__24656 = context;\nvar G__24657 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(req_vars,vars),branches);\nvar G__24658 = clause;\ncontext = G__24656;\nclause = G__24657;\norig_clause = G__24658;\ncontinue;\n} else {\nif(cljs.core.truth_((function (){var G__24194 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24195 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24194,G__24195) : pred__24167.call(null,G__24194,G__24195));\n})())){\nvar vec__24196 = clause;\nvar seq__24197 = cljs.core.seq(vec__24196);\nvar first__24198 = cljs.core.first(seq__24197);\nvar seq__24197__$1 = cljs.core.next(seq__24197);\nvar _ = first__24198;\nvar first__24198__$1 = cljs.core.first(seq__24197__$1);\nvar seq__24197__$2 = cljs.core.next(seq__24197__$1);\nvar vars = first__24198__$1;\nvar branches = seq__24197__$2;\nvar vars__$1 = cljs.core.set(vars);\nvar join_context = datascript.query.limit_context(context,vars__$1);\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__24196,seq__24197,first__24198,seq__24197__$1,_,first__24198__$1,seq__24197__$2,vars,branches,vars__$1,join_context,pred__24167,expr__24168){\nreturn (function (p1__24162_SHARP_){\nreturn datascript.query.limit_context((datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(join_context,p1__24162_SHARP_) : datascript.query.resolve_clause.call(null,join_context,p1__24162_SHARP_)),vars__$1);\n});})(context,clause,orig_clause,vec__24196,seq__24197,first__24198,seq__24197__$1,_,first__24198__$1,seq__24197__$2,vars,branches,vars__$1,join_context,pred__24167,expr__24168))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__24196,seq__24197,first__24198,seq__24197__$1,_,first__24198__$1,seq__24197__$2,vars,branches,vars__$1,join_context,contexts,pred__24167,expr__24168){\nreturn (function (p1__24163_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__24163_SHARP_));\n});})(context,clause,orig_clause,vec__24196,seq__24197,first__24198,seq__24197__$1,_,first__24198__$1,seq__24197__$2,vars,branches,vars__$1,join_context,contexts,pred__24167,expr__24168))\n,contexts);\nvar sum_rel = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,sum_rel);\n} else {\nif(cljs.core.truth_((function (){var G__24199 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24200 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24199,G__24200) : pred__24167.call(null,G__24199,G__24200));\n})())){\nvar vec__24202 = clause;\nvar seq__24203 = cljs.core.seq(vec__24202);\nvar first__24204 = cljs.core.first(seq__24203);\nvar seq__24203__$1 = cljs.core.next(seq__24203);\nvar _ = first__24204;\nvar clauses = seq__24203__$1;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n} else {\nif(cljs.core.truth_((function (){var G__24205 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24206 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24205,G__24206) : pred__24167.call(null,G__24205,G__24206));\n})())){\nvar vec__24207 = clause;\nvar seq__24208 = cljs.core.seq(vec__24207);\nvar first__24209 = cljs.core.first(seq__24208);\nvar seq__24208__$1 = cljs.core.next(seq__24208);\nvar _ = first__24209;\nvar clauses = seq__24208__$1;\nvar bound_vars = cljs.core.set(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (context,clause,orig_clause,vec__24207,seq__24208,first__24209,seq__24208__$1,_,clauses,pred__24167,expr__24168){\nreturn (function (p1__24164_SHARP_){\nreturn cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__24164_SHARP_));\n});})(context,clause,orig_clause,vec__24207,seq__24208,first__24209,seq__24208__$1,_,clauses,pred__24167,expr__24168))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)], 0)));\nvar negation_vars = datascript.query.collect_vars(clauses);\nvar ___$1 = ((cljs.core.empty_QMARK_(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(bound_vars,negation_vars)))?(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: none of \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([negation_vars], 0)),\" is bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([orig_clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),orig_clause], null))})():null);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar negation_context = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context_SINGLEQUOTE_,clauses);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__24210 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not-join\",\"not-join\",-645515756,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24211 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24210,G__24211) : pred__24167.call(null,G__24210,G__24211));\n})())){\nvar vec__24212 = clause;\nvar seq__24213 = cljs.core.seq(vec__24212);\nvar first__24214 = cljs.core.first(seq__24213);\nvar seq__24213__$1 = cljs.core.next(seq__24213);\nvar _ = first__24214;\nvar first__24214__$1 = cljs.core.first(seq__24213__$1);\nvar seq__24213__$2 = cljs.core.next(seq__24213__$1);\nvar vars = first__24214__$1;\nvar clauses = seq__24213__$2;\nvar ___$1 = datascript.query.check_bound(context,vars,orig_clause);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar join_context = datascript.query.limit_context(context_SINGLEQUOTE_,vars);\nvar negation_context = datascript.query.limit_context(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,join_context,clauses),vars);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__24215 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__24216 = expr__24168;\nreturn (pred__24167.cljs$core$IFn$_invoke$arity$2 ? pred__24167.cljs$core$IFn$_invoke$arity$2(G__24215,G__24216) : pred__24167.call(null,G__24215,G__24216));\n})())){\nvar source = datascript.query._STAR_implicit_source_STAR_;\nvar pattern = datascript.query.resolve_pattern_lookup_refs(source,clause);\nvar relation = datascript.query.lookup_pattern(source,pattern);\nvar _STAR_lookup_attrs_STAR__orig_val__24217 = datascript.query._STAR_lookup_attrs_STAR_;\nvar _STAR_lookup_attrs_STAR__temp_val__24218 = (((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source)))?datascript.query.dynamic_lookup_attrs(source,pattern):datascript.query._STAR_lookup_attrs_STAR_);\n(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__temp_val__24218);\n\ntry{return cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,relation);\n}finally {(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__orig_val__24217);\n}} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__24168)].join('')));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._resolve_clause.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.resolve_clause = (function datascript$query$resolve_clause(context,clause){\nif(datascript.query.rule_QMARK_(context,clause)){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nvar _STAR_implicit_source_STAR__orig_val__24220 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__24221 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),cljs.core.first(clause));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__24221);\n\ntry{var G__24222 = context;\nvar G__24223 = cljs.core.next(clause);\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(G__24222,G__24223) : datascript.query.resolve_clause.call(null,G__24222,G__24223));\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__24220);\n}} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,datascript.query.solve_rule(context,clause));\n}\n} else {\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2(context,clause);\n}\n});\ndatascript.query._q = (function datascript$query$_q(context,clauses){\nvar _STAR_implicit_source_STAR__orig_val__24224 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__24225 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__24225);\n\ntry{return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__24224);\n}});\ndatascript.query._collect = (function datascript$query$_collect(var_args){\nvar G__24228 = arguments.length;\nswitch (G__24228) {\ncase 2:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$2 = (function (context,symbols){\nvar rels = new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context);\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array(cljs.core.count(symbols))], null),rels,symbols);\n}));\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$3 = (function (acc,rels,symbols){\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(rels);\nif((temp__5737__auto__ == null)){\nreturn acc;\n} else {\nvar rel = temp__5737__auto__;\nvar keep_attrs = cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),symbols);\nif(cljs.core.empty_QMARK_(keep_attrs)){\nvar G__24692 = acc;\nvar G__24693 = cljs.core.next(rels);\nvar G__24694 = symbols;\nacc = G__24692;\nrels = G__24693;\nsymbols = G__24694;\ncontinue;\n} else {\nvar copy_map = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (acc,rels,symbols,keep_attrs,rel,temp__5737__auto__){\nreturn (function (p1__24226_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(keep_attrs,p1__24226_SHARP_);\n});})(acc,rels,symbols,keep_attrs,rel,temp__5737__auto__))\n,symbols));\nvar len = cljs.core.count(symbols);\nvar G__24695 = (function (){var iter__4582__auto__ = ((function (acc,rels,symbols,copy_map,len,keep_attrs,rel,temp__5737__auto__){\nreturn (function datascript$query$iter__24230(s__24231){\nreturn (new cljs.core.LazySeq(null,((function (acc,rels,symbols,copy_map,len,keep_attrs,rel,temp__5737__auto__){\nreturn (function (){\nvar s__24231__$1 = s__24231;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24231__$1);\nif(temp__5735__auto__){\nvar xs__6292__auto__ = temp__5735__auto__;\nvar t1 = cljs.core.first(xs__6292__auto__);\nvar iterys__4578__auto__ = ((function (s__24231__$1,acc,rels,symbols,t1,xs__6292__auto__,temp__5735__auto__,copy_map,len,keep_attrs,rel,temp__5737__auto__){\nreturn (function datascript$query$iter__24230_$_iter__24232(s__24233){\nreturn (new cljs.core.LazySeq(null,((function (s__24231__$1,acc,rels,symbols,t1,xs__6292__auto__,temp__5735__auto__,copy_map,len,keep_attrs,rel,temp__5737__auto__){\nreturn (function (){\nvar s__24233__$1 = s__24233;\nwhile(true){\nvar temp__5735__auto____$1 = cljs.core.seq(s__24233__$1);\nif(temp__5735__auto____$1){\nvar s__24233__$2 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__24233__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24233__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24235 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24234 = (0);\nwhile(true){\nif((i__24234 < size__4581__auto__)){\nvar t2 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24234);\ncljs.core.chunk_append(b__24235,(function (){var res = cljs.core.aclone(t1);\nvar n__4666__auto___24711 = len;\nvar i_24712 = (0);\nwhile(true){\nif((i_24712 < n__4666__auto___24711)){\nvar temp__5739__auto___24713 = (copy_map[i_24712]);\nif((temp__5739__auto___24713 == null)){\n} else {\nvar idx_24714 = temp__5739__auto___24713;\n(res[i_24712] = (t2[idx_24714]));\n}\n\nvar G__24715 = (i_24712 + (1));\ni_24712 = G__24715;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n})());\n\nvar G__24716 = (i__24234 + (1));\ni__24234 = G__24716;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24235),datascript$query$iter__24230_$_iter__24232(cljs.core.chunk_rest(s__24233__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24235),null);\n}\n} else {\nvar t2 = cljs.core.first(s__24233__$2);\nreturn cljs.core.cons((function (){var res = cljs.core.aclone(t1);\nvar n__4666__auto___24717 = len;\nvar i_24718 = (0);\nwhile(true){\nif((i_24718 < n__4666__auto___24717)){\nvar temp__5739__auto___24719 = (copy_map[i_24718]);\nif((temp__5739__auto___24719 == null)){\n} else {\nvar idx_24720 = temp__5739__auto___24719;\n(res[i_24718] = (t2[idx_24720]));\n}\n\nvar G__24721 = (i_24718 + (1));\ni_24718 = G__24721;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n})(),datascript$query$iter__24230_$_iter__24232(cljs.core.rest(s__24233__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(s__24231__$1,acc,rels,symbols,t1,xs__6292__auto__,temp__5735__auto__,copy_map,len,keep_attrs,rel,temp__5737__auto__))\n,null,null));\n});})(s__24231__$1,acc,rels,symbols,t1,xs__6292__auto__,temp__5735__auto__,copy_map,len,keep_attrs,rel,temp__5737__auto__))\n;\nvar fs__4579__auto__ = cljs.core.seq(iterys__4578__auto__(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel)));\nif(fs__4579__auto__){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4579__auto__,datascript$query$iter__24230(cljs.core.rest(s__24231__$1)));\n} else {\nvar G__24722 = cljs.core.rest(s__24231__$1);\ns__24231__$1 = G__24722;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(acc,rels,symbols,copy_map,len,keep_attrs,rel,temp__5737__auto__))\n,null,null));\n});})(acc,rels,symbols,copy_map,len,keep_attrs,rel,temp__5737__auto__))\n;\nreturn iter__4582__auto__(acc);\n})();\nvar G__24696 = cljs.core.next(rels);\nvar G__24697 = symbols;\nacc = G__24695;\nrels = G__24696;\nsymbols = G__24697;\ncontinue;\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._collect.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.collect = (function datascript$query$collect(context,symbols){\nreturn cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.vec,datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context,symbols)));\n});\n\n/**\n * @interface\n */\ndatascript.query.IContextResolve = function(){};\n\ndatascript.query._context_resolve = (function datascript$query$_context_resolve(var$,context){\nif((((!((var$ == null)))) && ((!((var$.datascript$query$IContextResolve$_context_resolve$arity$2 == null)))))){\nreturn var$.datascript$query$IContextResolve$_context_resolve$arity$2(var$,context);\n} else {\nvar x__4487__auto__ = (((var$ == null))?null:var$);\nvar m__4488__auto__ = (datascript.query._context_resolve[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__4488__auto__.call(null,var$,context));\n} else {\nvar m__4485__auto__ = (datascript.query._context_resolve[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__4485__auto__.call(null,var$,context));\n} else {\nthrow cljs.core.missing_protocol(\"IContextResolve.-context-resolve\",var$);\n}\n}\n}\n});\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn datascript.query.context_resolve_val(context,var$__$1.symbol);\n}));\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),var$__$1.symbol], null));\n}));\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nvar or__4185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.query.built_in_aggregates,var$__$1.symbol);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn datascript.query.resolve_sym(var$__$1.symbol);\n}\n}));\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nreturn var$__$1.value;\n}));\ndatascript.query._aggregate = (function datascript$query$_aggregate(find_elements,context,tuples){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((function (element,fixed_value,i){\nif(datascript.parser.aggregate_QMARK_(element)){\nvar f = datascript.query._context_resolve(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(element),context);\nvar args = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24237_SHARP_){\nreturn datascript.query._context_resolve(p1__24237_SHARP_,context);\n}),cljs.core.butlast(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(element)));\nvar vals = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24238_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__24238_SHARP_,i);\n}),tuples);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(args,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null)));\n} else {\nreturn fixed_value;\n}\n}),find_elements,cljs.core.first(tuples),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n});\ndatascript.query.idxs_of = (function datascript$query$idxs_of(pred,coll){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__24239_SHARP_,p2__24240_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__24239_SHARP_) : pred.call(null,p1__24239_SHARP_)))){\nreturn p2__24240_SHARP_;\n} else {\nreturn null;\n}\n}),coll,cljs.core.range.cljs$core$IFn$_invoke$arity$0()));\n});\ndatascript.query.aggregate = (function datascript$query$aggregate(find_elements,context,resultset){\nvar group_idxs = datascript.query.idxs_of(cljs.core.complement(datascript.parser.aggregate_QMARK_),find_elements);\nvar group_fn = (function (tuple){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24241_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(tuple,p1__24241_SHARP_);\n}),group_idxs);\n});\nvar grouped = cljs.core.group_by(group_fn,resultset);\nvar iter__4582__auto__ = (function datascript$query$aggregate_$_iter__24242(s__24243){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24243__$1 = s__24243;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24243__$1);\nif(temp__5735__auto__){\nvar s__24243__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24243__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24243__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24245 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24244 = (0);\nwhile(true){\nif((i__24244 < size__4581__auto__)){\nvar vec__24246 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24244);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24246,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24246,(1),null);\ncljs.core.chunk_append(b__24245,datascript.query._aggregate(find_elements,context,tuples));\n\nvar G__24741 = (i__24244 + (1));\ni__24244 = G__24741;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24245),datascript$query$aggregate_$_iter__24242(cljs.core.chunk_rest(s__24243__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24245),null);\n}\n} else {\nvar vec__24249 = cljs.core.first(s__24243__$2);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24249,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24249,(1),null);\nreturn cljs.core.cons(datascript.query._aggregate(find_elements,context,tuples),datascript$query$aggregate_$_iter__24242(cljs.core.rest(s__24243__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(grouped);\n});\n\n/**\n * @interface\n */\ndatascript.query.IPostProcess = function(){};\n\ndatascript.query._post_process = (function datascript$query$_post_process(find,tuples){\nif((((!((find == null)))) && ((!((find.datascript$query$IPostProcess$_post_process$arity$2 == null)))))){\nreturn find.datascript$query$IPostProcess$_post_process$arity$2(find,tuples);\n} else {\nvar x__4487__auto__ = (((find == null))?null:find);\nvar m__4488__auto__ = (datascript.query._post_process[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(find,tuples) : m__4488__auto__.call(null,find,tuples));\n} else {\nvar m__4485__auto__ = (datascript.query._post_process[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(find,tuples) : m__4485__auto__.call(null,find,tuples));\n} else {\nthrow cljs.core.missing_protocol(\"IPostProcess.-post-process\",find);\n}\n}\n}\n});\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$_post_process$arity$2 = (function (_,tuples){\nvar ___$1 = this;\nreturn tuples;\n}));\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$_post_process$arity$2 = (function (_,tuples){\nvar ___$1 = this;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.first),tuples);\n}));\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$_post_process$arity$2 = (function (_,tuples){\nvar ___$1 = this;\nreturn cljs.core.ffirst(tuples);\n}));\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$_post_process$arity$2 = (function (_,tuples){\nvar ___$1 = this;\nreturn cljs.core.first(tuples);\n}));\ndatascript.query.pull = (function datascript$query$pull(find_elements,context,resultset){\nvar resolved = (function (){var iter__4582__auto__ = (function datascript$query$pull_$_iter__24252(s__24253){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24253__$1 = s__24253;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24253__$1);\nif(temp__5735__auto__){\nvar s__24253__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24253__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24253__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24255 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24254 = (0);\nwhile(true){\nif((i__24254 < size__4581__auto__)){\nvar find = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24254);\ncljs.core.chunk_append(b__24255,((datascript.parser.pull_QMARK_(find))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context),datascript.pull_parser.parse_pull(datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context))], null):null));\n\nvar G__24760 = (i__24254 + (1));\ni__24254 = G__24760;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24255),datascript$query$pull_$_iter__24252(cljs.core.chunk_rest(s__24253__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24255),null);\n}\n} else {\nvar find = cljs.core.first(s__24253__$2);\nreturn cljs.core.cons(((datascript.parser.pull_QMARK_(find))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context),datascript.pull_parser.parse_pull(datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context))], null):null),datascript$query$pull_$_iter__24252(cljs.core.rest(s__24253__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(find_elements);\n})();\nvar iter__4582__auto__ = (function datascript$query$pull_$_iter__24256(s__24257){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__24257__$1 = s__24257;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__24257__$1);\nif(temp__5735__auto__){\nvar s__24257__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__24257__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__24257__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__24259 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__24258 = (0);\nwhile(true){\nif((i__24258 < size__4581__auto__)){\nvar tuple = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__24258);\ncljs.core.chunk_append(b__24259,cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (i__24258,tuple,c__4580__auto__,size__4581__auto__,b__24259,s__24257__$2,temp__5735__auto__,resolved){\nreturn (function (env,el){\nif(cljs.core.truth_(env)){\nvar vec__24260 = env;\nvar src = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24260,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24260,(1),null);\nreturn datascript.pull_api.pull_spec(src,spec,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [el], null),false);\n} else {\nreturn el;\n}\n});})(i__24258,tuple,c__4580__auto__,size__4581__auto__,b__24259,s__24257__$2,temp__5735__auto__,resolved))\n,resolved,tuple));\n\nvar G__24764 = (i__24258 + (1));\ni__24258 = G__24764;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24259),datascript$query$pull_$_iter__24256(cljs.core.chunk_rest(s__24257__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__24259),null);\n}\n} else {\nvar tuple = cljs.core.first(s__24257__$2);\nreturn cljs.core.cons(cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (tuple,s__24257__$2,temp__5735__auto__,resolved){\nreturn (function (env,el){\nif(cljs.core.truth_(env)){\nvar vec__24263 = env;\nvar src = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24263,(0),null);\nvar spec = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24263,(1),null);\nreturn datascript.pull_api.pull_spec(src,spec,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [el], null),false);\n} else {\nreturn el;\n}\n});})(tuple,s__24257__$2,temp__5735__auto__,resolved))\n,resolved,tuple),datascript$query$pull_$_iter__24256(cljs.core.rest(s__24257__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(resultset);\n});\ndatascript.query.query_cache = cljs.core.volatile_BANG_(datascript.lru.lru((100)));\ndatascript.query.memoized_parse_query = (function datascript$query$memoized_parse_query(q){\nvar temp__5737__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(datascript.query.query_cache),q,null);\nif((temp__5737__auto__ == null)){\nvar qp = datascript.parser.parse_query(q);\ndatascript.query.query_cache.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(datascript.query.query_cache.cljs$core$IDeref$_deref$arity$1(null),q,qp));\n\nreturn qp;\n} else {\nvar cached = temp__5737__auto__;\nreturn cached;\n}\n});\ndatascript.query.q = (function datascript$query$q(var_args){\nvar args__4795__auto__ = [];\nvar len__4789__auto___24770 = arguments.length;\nvar i__4790__auto___24775 = (0);\nwhile(true){\nif((i__4790__auto___24775 < len__4789__auto___24770)){\nargs__4795__auto__.push((arguments[i__4790__auto___24775]));\n\nvar G__24776 = (i__4790__auto___24775 + (1));\ni__4790__auto___24775 = G__24776;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\nreturn datascript.query.q.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\n});\n\n(datascript.query.q.cljs$core$IFn$_invoke$arity$variadic = (function (q,inputs){\nvar parsed_q = datascript.query.memoized_parse_query(q);\nvar find = new cljs.core.Keyword(null,\"qfind\",\"qfind\",1529332972).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar find_elements = datascript.parser.find_elements(find);\nvar find_vars = datascript.parser.find_vars(find);\nvar result_arity = cljs.core.count(find_elements);\nvar with$ = new cljs.core.Keyword(null,\"qwith\",\"qwith\",-45809392).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar all_vars = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(find_vars,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),with$));\nvar q__$1 = (function (){var G__24269 = q;\nif(cljs.core.sequential_QMARK_(q)){\nreturn datascript.parser.query__GT_map(G__24269);\n} else {\nreturn G__24269;\n}\n})();\nvar wheres = new cljs.core.Keyword(null,\"where\",\"where\",-2044795965).cljs$core$IFn$_invoke$arity$1(q__$1);\nvar context = datascript.query.resolve_ins((new datascript.query.Context(cljs.core.PersistentVector.EMPTY,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentArrayMap.EMPTY,null,null,null)),new cljs.core.Keyword(null,\"qin\",\"qin\",1372651151).cljs$core$IFn$_invoke$arity$1(parsed_q),inputs);\nvar resultset = datascript.query.collect(datascript.query._q(context,wheres),all_vars);\nvar G__24270 = resultset;\nvar G__24270__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"with\",\"with\",-1536296876).cljs$core$IFn$_invoke$arity$1(q__$1))?cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__24266_SHARP_){\nreturn cljs.core.vec(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(p1__24266_SHARP_,(0),result_arity));\n}),G__24270):G__24270);\nvar G__24270__$2 = (cljs.core.truth_(cljs.core.some(datascript.parser.aggregate_QMARK_,find_elements))?datascript.query.aggregate(find_elements,context,G__24270__$1):G__24270__$1);\nvar G__24270__$3 = (cljs.core.truth_(cljs.core.some(datascript.parser.pull_QMARK_,find_elements))?datascript.query.pull(find_elements,context,G__24270__$2):G__24270__$2);\nreturn datascript.query._post_process(find,G__24270__$3);\n\n}));\n\n(datascript.query.q.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(datascript.query.q.cljs$lang$applyTo = (function (seq24267){\nvar G__24268 = cljs.core.first(seq24267);\nvar seq24267__$1 = cljs.core.next(seq24267);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24268,seq24267__$1);\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","datascript/query.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",30,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$raise","~$datascript.db"],"~:excludes",["~#set",[]],"~:name","~$datascript.query","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$da","~$me.tonsky.persistent-sorted-set.arrays","~$set","~$clojure.set","~$dpp","~$datascript.pull-parser","~$dpa","~$datascript.pull-api","~$cljs.core","^X","~$goog","^Y","~$walk","~$clojure.walk","~$datascript.parser","^10","~$db","^G","^S","^S","~$datascript.lru","^12","^G","^G","^Q","^Q","^U","^U","^W","^W","~$str","~$clojure.string","^14","^14","~$de","~$datascript.impl.entity","~$dp","^10","~$cljs.reader","^18","^[","^[","~$edn","^18","^16","^16"],"~:seen",["^I",["~:require"]],"~:uses",["^ ","~$Constant","^10","~$BindIgnore","^10","~$FindTuple","^10","~$SrcVar","^10","~$FindColl","^10","~$BindTuple","^10","~$BindColl","^10","~$BindScalar","^10","~$PlainSymbol","^10","~$FindRel","^10","~$FindScalar","^10","~$RulesVar","^10","~$Variable","^10"],"~:require-macros",["^ ","^P","^Q","^X","^X","^10","^10","^11","^G","^G","^G","^Q","^Q","^17","^10","^18","^18","^19","^18"],"~:form",["~#list",["~$ns","^K",["^1L",["^1;",["^18","~:as","^19"],["^S","^1N","^R"],["^14","^1N","^13"],["^[","^1N","^Z"],["^G","^1N","^11","~:refer-macros",["^F"]],["^Q","^1N","^P"],["^12"],["^16","^1N","^15"],["^10","^1N","^17","~:refer",["^1C","^1>","^1D","^1B","^1=","^1A","^1F","^1G","^1?","^1E","^1H","^1@","^1I"]],["^W","^1N","^V"],["^U","^1N","^T"]]]]],"~:flags",["^ ","^1;",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^18","^S","^14","^[","^G","^Q","^12","^16","^10","^W","^U"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","datascript/query.cljc"],"~:compiled-at",1578419141932,"~:resource-name","datascript/query.cljc","~:warnings",[],"~:source","(ns ^:no-doc datascript.query\n  (:require\n   [#?(:cljs cljs.reader :clj clojure.edn) :as edn]\n   [clojure.set :as set]\n   [clojure.string :as str]\n   [clojure.walk :as walk]\n   [datascript.db :as db #?(:cljs :refer-macros :clj :refer) [raise]]\n   [me.tonsky.persistent-sorted-set.arrays :as da]\n   [datascript.lru]\n   [datascript.impl.entity :as de]\n   [datascript.parser :as dp #?@(:cljs [:refer [BindColl BindIgnore BindScalar BindTuple Constant\n                                                FindColl FindRel FindScalar FindTuple PlainSymbol\n                                                RulesVar SrcVar Variable]])]\n   [datascript.pull-api :as dpa]\n   [datascript.pull-parser :as dpp])\n  #?(:clj (:import [datascript.parser BindColl BindIgnore BindScalar BindTuple\n                    Constant FindColl FindRel FindScalar FindTuple PlainSymbol\n                    RulesVar SrcVar Variable])))\n\n;; ----------------------------------------------------------------------------\n\n(def ^:const lru-cache-size 100)\n\n(declare -collect -resolve-clause resolve-clause)\n\n;; Records\n\n(defrecord Context [rels sources rules])\n\n;; attrs:\n;;    {?e 0, ?v 1} or {?e2 \"a\", ?age \"v\"}\n;; tuples:\n;;    [ #js [1 \"Ivan\" 5 14] ... ]\n;; or [ (Datom. 2 \"Oleg\" 1 55) ... ]\n(defrecord Relation [attrs tuples])\n\n\n;; Utilities\n\n(defn single [coll]\n  (assert (nil? (next coll)) \"Expected single element\")\n  (first coll))\n\n(defn intersect-keys [attrs1 attrs2]\n  (set/intersection (set (keys attrs1))\n                    (set (keys attrs2))))\n\n(defn concatv [& xs]\n  (into [] cat xs))\n\n(defn zip\n  ([a b] (mapv vector a b))\n  ([a b & rest] (apply mapv vector a b rest)))\n\n(defn same-keys? [a b]\n  (and (= (count a) (count b))\n       (every? #(contains? b %) (keys a))\n       (every? #(contains? b %) (keys a))))\n\n(defn- looks-like? [pattern form]\n  (cond\n    (= '_ pattern)\n      true\n    (= '[*] pattern)\n      (sequential? form)\n    (symbol? pattern)\n      (= form pattern)\n    (sequential? pattern)\n      (if (= (last pattern) '*)\n        (and (sequential? form)\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector (butlast pattern) form)))\n        (and (sequential? form)\n             (= (count form) (count pattern))\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector pattern form))))\n    :else ;; (predicate? pattern)\n      (pattern form)))\n\n(defn source? [sym]\n  (and (symbol? sym)\n       (= \\$ (first (name sym)))))\n\n(defn free-var? [sym]\n  (and (symbol? sym)\n       (= \\? (first (name sym)))))\n\n(defn attr? [form]\n  (or (keyword? form) (string? form)))\n\n(defn lookup-ref? [form]\n  (looks-like? [attr? '_] form))\n\n;; Relation algebra\n\n(defn join-tuples [t1 #?(:cljs idxs1\n                         :clj  ^{:tag \"[[Ljava.lang.Object;\"} idxs1)\n                   t2 #?(:cljs idxs2\n                         :clj  ^{:tag \"[[Ljava.lang.Object;\"} idxs2)]\n  (let [l1  (alength idxs1)\n        l2  (alength idxs2)\n        res (da/make-array (+ l1 l2))]\n    (dotimes [i l1]\n      (aset res i (#?(:cljs da/aget :clj get) t1 (aget idxs1 i)))) ;; FIXME aget\n    (dotimes [i l2]\n      (aset res (+ l1 i) (#?(:cljs da/aget :clj get) t2 (aget idxs2 i)))) ;; FIXME aget\n    res))\n\n(defn sum-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b]\n    (cond\n      (= attrs-a attrs-b)\n      (Relation. attrs-a (into (vec tuples-a) tuples-b))\n\n      (not (same-keys? attrs-a attrs-b))\n      (raise \"Can’t sum relations with different attrs: \" attrs-a \" and \" attrs-b\n             {:error :query/where})\n\n      (every? number? (vals attrs-a)) ;; can’t conj into BTSetIter\n      (let [idxb->idxa (vec (for [[sym idx-b] attrs-b]\n                              [idx-b (attrs-a sym)]))\n            tlen    (->> (vals attrs-a) (reduce max) (inc)) \n            tuples' (persistent!\n                      (reduce\n                        (fn [acc tuple-b]\n                          (let [tuple' (da/make-array tlen)]\n                            (doseq [[idx-b idx-a] idxb->idxa]\n                              (aset tuple' idx-a (#?(:cljs da/aget :clj get) tuple-b idx-b)))\n                            (conj! acc tuple')))\n                        (transient (vec tuples-a))\n                        tuples-b))]\n        (Relation. attrs-a tuples'))\n\n      :else\n      (let [all-attrs (zipmap (keys (merge attrs-a attrs-b)) (range))]\n        (-> (Relation. all-attrs [])\n            (sum-rel a)\n            (sum-rel b))))))\n\n(defn prod-rel\n  ([] (Relation. {} [(da/make-array 0)]))\n  ([rel1 rel2]\n    (let [attrs1 (keys (:attrs rel1))\n          attrs2 (keys (:attrs rel2))\n          idxs1  (to-array (map (:attrs rel1) attrs1))\n          idxs2  (to-array (map (:attrs rel2) attrs2))]\n      (Relation.\n        (zipmap (concat attrs1 attrs2) (range))\n        (persistent!\n          (reduce\n            (fn [acc t1]\n              (reduce (fn [acc t2]\n                        (conj! acc (join-tuples t1 idxs1 t2 idxs2)))\n                      acc (:tuples rel2)))\n            (transient []) (:tuples rel1)))\n        ))))\n\n;; built-ins\n\n(defn- -differ? [& xs]\n  (let [l (count xs)]\n    (not= (take (/ l 2) xs) (drop (/ l 2) xs))))\n\n(defn- -get-else\n  [db e a else-val]\n  (when (nil? else-val)\n    (raise \"get-else: nil default value is not supported\" {:error :query/where}))\n  (if-some [datom (first (db/-search db [e a]))]\n    (:v datom)\n    else-val))\n\n(defn- -get-some\n  [db e & as]\n  (reduce\n   (fn [_ a]\n     (when-some [datom (first (db/-search db [e a]))]\n       (reduced [(:a datom) (:v datom)])))\n   nil\n   as))\n\n(defn- -missing?\n  [db e a]\n  (nil? (get (de/entity db e) a)))\n\n(defn- and-fn [& args]\n  (reduce (fn [a b]\n            (if b b (reduced b))) true args))\n            \n(defn- or-fn [& args]\n  (reduce (fn [a b]\n            (if b (reduced b) b)) nil args))\n\n(def built-ins {\n  '= =, '== ==, 'not= not=, '!= not=, '< <, '> >, '<= <=, '>= >=, '+ +, '- -,\n  '* *, '/ /, 'quot quot, 'rem rem, 'mod mod, 'inc inc, 'dec dec, 'max max, 'min min,\n  'zero? zero?, 'pos? pos?, 'neg? neg?, 'even? even?, 'odd? odd?, 'compare compare,\n  'rand rand, 'rand-int rand-int,\n  'true? true?, 'false? false?, 'nil? nil?, 'some? some?, 'not not, 'and and-fn, 'or or-fn,\n  'complement complement, 'identical? identical?,\n  'identity identity, 'meta meta, 'name name, 'namespace namespace, 'type type,\n  'vector vector, 'list list, 'set set, 'hash-map hash-map, 'array-map array-map,\n  'count count, 'range range, 'not-empty not-empty, 'empty? empty, 'contains? contains?,\n  'str str, 'pr-str pr-str, 'print-str print-str, 'println-str println-str, 'prn-str prn-str, 'subs subs,\n  're-find re-find, 're-matches re-matches, 're-seq re-seq, 're-pattern re-pattern,\n  '-differ? -differ?, 'get-else -get-else, 'get-some -get-some, 'missing? -missing?, 'ground identity,\n  'clojure.string/blank? str/blank?, 'clojure.string/includes? str/includes?,\n  'clojure.string/starts-with? str/starts-with?, 'clojure.string/ends-with? str/ends-with?\n})\n\n(def built-in-aggregates\n (letfn [(sum [coll] (reduce + 0 coll))\n         (avg [coll] (/ (sum coll) (count coll)))\n         (median\n           [coll]\n           (let [terms (sort coll)\n                 size (count coll)\n                 med (bit-shift-right size 1)]\n             (cond-> (nth terms med)\n               (even? size)\n               (-> (+ (nth terms (dec med)))\n                   (/ 2)))))\n         (variance\n           [coll]\n           (let [mean (avg coll)\n                 sum  (sum (for [x coll\n                                 :let [delta (- x mean)]]\n                             (* delta delta)))]\n             (/ sum (count coll))))\n         (stddev \n           [coll] \n           (#?(:cljs js/Math.sqrt :clj Math/sqrt) (variance coll)))]\n   {'avg      avg\n    'median   median\n    'variance variance\n    'stddev   stddev\n    'distinct set\n    'min      (fn\n                ([coll] (reduce (fn [acc x]\n                                  (if (neg? (compare x acc))\n                                    x acc))\n                                (first coll) (next coll)))\n                ([n coll]\n                  (vec\n                    (reduce (fn [acc x]\n                              (cond\n                                (< (count acc) n)\n                                  (sort compare (conj acc x))\n                                (neg? (compare x (last acc)))\n                                  (sort compare (conj (butlast acc) x))\n                                :else acc))\n                            [] coll))))\n    'max      (fn\n                ([coll] (reduce (fn [acc x]\n                                  (if (pos? (compare x acc))\n                                    x acc))\n                                (first coll) (next coll)))\n                ([n coll]\n                  (vec\n                    (reduce (fn [acc x]\n                              (cond\n                                (< (count acc) n)\n                                  (sort compare (conj acc x))\n                                (pos? (compare x (first acc)))\n                                  (sort compare (conj (next acc) x))\n                                :else acc))\n                            [] coll))))\n    'sum      sum\n    'rand     (fn\n                ([coll] (rand-nth coll))\n                ([n coll] (vec (repeatedly n #(rand-nth coll)))))\n    'sample   (fn [n coll]\n                (vec (take n (shuffle coll))))\n    'count    count\n    'count-distinct (fn [coll] (count (distinct coll)))}))\n\n\n;;\n\n(defn parse-rules [rules]\n  (let [rules (if (string? rules) (edn/read-string rules) rules)] ;; for datascript.js interop\n    (group-by ffirst rules)))\n\n(defn empty-rel [binding]\n  (let [vars (->> (dp/collect-vars-distinct binding)\n               (map :symbol))]\n    (Relation. (zipmap vars (range)) [])))\n\n(defprotocol IBinding\n  (in->rel [binding value]))\n\n(extend-protocol IBinding\n  BindIgnore\n  (in->rel [_ _]\n    (prod-rel))\n  \n  BindScalar\n  (in->rel [binding value]\n    (Relation. {(get-in binding [:variable :symbol]) 0} [(into-array [value])]))\n  \n  BindColl\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to collection \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (empty? coll)\n        (empty-rel binding)\n      :else\n        (->> coll\n          (map #(in->rel (:binding binding) %))\n          (reduce sum-rel))))\n  \n  BindTuple\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (< (count coll) (count (:bindings binding)))\n        (raise \"Not enough elements in a collection \" coll \" to bind tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      :else\n        (reduce prod-rel\n          (map #(in->rel %1 %2) (:bindings binding) coll)))))\n\n(defn resolve-in [context [binding value]]\n  (cond\n    (and (instance? BindScalar binding)\n         (instance? SrcVar (:variable binding)))\n      (update context :sources assoc (get-in binding [:variable :symbol]) value)\n    (and (instance? BindScalar binding)\n         (instance? RulesVar (:variable binding)))\n      (assoc context :rules (parse-rules value))\n    :else\n      (update context :rels conj (in->rel binding value))))\n\n(defn resolve-ins [context bindings values]\n  (reduce resolve-in context (zipmap bindings values)))\n\n;;\n\n(def ^{:dynamic true\n       :doc \"List of symbols in current pattern that might potentiall be resolved to refs\"}\n  *lookup-attrs* nil)\n\n(def ^{:dynamic true\n       :doc \"Default pattern source. Lookup refs, patterns, rules will be resolved with it\"}\n  *implicit-source* nil)\n\n(defn getter-fn [attrs attr]\n  (let [idx (attrs attr)]\n    (if (contains? *lookup-attrs* attr)\n      (fn [tuple]\n        (let [eid (#?(:cljs da/aget :clj get) tuple idx)]\n          (cond\n            (number? eid)     eid ;; quick path to avoid fn call\n            (sequential? eid) (db/entid *implicit-source* eid)\n            (da/array? eid)   (db/entid *implicit-source* eid)\n            :else             eid)))\n      (fn [tuple]\n        (#?(:cljs da/aget :clj get) tuple idx)))))\n\n(defn tuple-key-fn [getters]\n  (if (== (count getters) 1)\n    (first getters)\n    (let [getters (to-array getters)]\n      (fn [tuple]\n        (list* #?(:cljs (.map getters #(% tuple))\n                  :clj  (to-array (map #(% tuple) getters))))))))\n\n(defn hash-attrs [key-fn tuples]\n  (loop [tuples     tuples\n         hash-table (transient {})]\n    (if-some [tuple (first tuples)]\n      (let [key (key-fn tuple)]\n        (recur (next tuples)\n               (assoc! hash-table key (conj (get hash-table key '()) tuple))))\n      (persistent! hash-table))))\n\n(defn hash-join [rel1 rel2]\n  (let [tuples1       (:tuples rel1)\n        tuples2       (:tuples rel2)\n        attrs1        (:attrs rel1)\n        attrs2        (:attrs rel2)\n        common-attrs  (vec (intersect-keys (:attrs rel1) (:attrs rel2)))\n        common-gtrs1  (map #(getter-fn attrs1 %) common-attrs)\n        common-gtrs2  (map #(getter-fn attrs2 %) common-attrs)\n        keep-attrs1   (keys attrs1)\n        keep-attrs2   (vec (set/difference (set (keys attrs2)) (set (keys attrs1))))\n        keep-idxs1    (to-array (map attrs1 keep-attrs1))\n        keep-idxs2    (to-array (map attrs2 keep-attrs2))\n        key-fn1       (tuple-key-fn common-gtrs1)\n        hash          (hash-attrs key-fn1 tuples1)\n        key-fn2       (tuple-key-fn common-gtrs2)\n        new-tuples    (->>\n                        (reduce (fn [acc tuple2]\n                                  (let [key (key-fn2 tuple2)]\n                                    (if-some [tuples1 (get hash key)]\n                                      (reduce (fn [acc tuple1]\n                                                (conj! acc (join-tuples tuple1 keep-idxs1 tuple2 keep-idxs2)))\n                                              acc tuples1)\n                                      acc)))\n                          (transient []) tuples2)\n                        (persistent!))]\n    (Relation. (zipmap (concat keep-attrs1 keep-attrs2) (range))\n               new-tuples)))\n\n(defn subtract-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b\n        attrs     (intersect-keys attrs-a attrs-b)\n        getters-b (map #(getter-fn attrs-b %) attrs)\n        key-fn-b  (tuple-key-fn getters-b)\n        hash      (hash-attrs key-fn-b tuples-b)\n        getters-a (map #(getter-fn attrs-a %) attrs)\n        key-fn-a  (tuple-key-fn getters-a)]\n    (assoc a\n      :tuples (filterv #(nil? (hash (key-fn-a %))) tuples-a))))\n\n(defn lookup-pattern-db [db pattern]\n  ;; TODO optimize with bound attrs min/max values here\n  (let [search-pattern (mapv #(if (symbol? %) nil %) pattern)\n        datoms         (db/-search db search-pattern)\n        attr->prop     (->> (map vector pattern [\"e\" \"a\" \"v\" \"tx\"])\n                            (filter (fn [[s _]] (free-var? s)))\n                            (into {}))]\n    (Relation. attr->prop datoms)))\n\n(defn matches-pattern? [pattern tuple]\n  (loop [tuple   tuple\n         pattern pattern]\n    (if (and tuple pattern)\n      (let [t (first tuple)\n            p (first pattern)]\n        (if (or (symbol? p) (= t p))\n          (recur (next tuple) (next pattern))\n          false))\n      true)))\n\n(defn lookup-pattern-coll [coll pattern]\n  (let [data       (filter #(matches-pattern? pattern %) coll)\n        attr->idx  (->> (map vector pattern (range))\n                        (filter (fn [[s _]] (free-var? s)))\n                        (into {}))]\n    (Relation. attr->idx (mapv to-array data)))) ;; FIXME to-array\n\n(defn normalize-pattern-clause [clause]\n  (if (source? (first clause))\n    clause\n    (concat ['$] clause)))\n\n(defn lookup-pattern [source pattern]\n  (cond\n    (satisfies? db/ISearch source)\n      (lookup-pattern-db source pattern)\n    :else\n      (lookup-pattern-coll source pattern)))\n\n(defn collapse-rels [rels new-rel]\n  (loop [rels    rels\n         new-rel new-rel\n         acc     []]\n    (if-some [rel (first rels)]\n      (if (not-empty (intersect-keys (:attrs new-rel) (:attrs rel)))\n        (recur (next rels) (hash-join rel new-rel) acc)\n        (recur (next rels) new-rel (conj acc rel)))\n      (conj acc new-rel))))\n\n(defn- rel-with-attr [context sym]\n  (some #(when (contains? (:attrs %) sym) %) (:rels context)))\n\n(defn- context-resolve-val [context sym]\n  (when-some [rel (rel-with-attr context sym)]\n    (when-some [tuple (first (:tuples rel))]\n      (#?(:cljs da/aget :clj get) tuple ((:attrs rel) sym)))))\n\n(defn- rel-contains-attrs? [rel attrs]\n  (some #(contains? (:attrs rel) %) attrs))\n\n(defn- rel-prod-by-attrs [context attrs]\n  (let [rels       (filter #(rel-contains-attrs? % attrs) (:rels context))\n        production (reduce prod-rel rels)]\n    [(update context :rels #(remove (set rels) %)) production]))\n\n(defn -call-fn [context rel f args]\n  (let [sources     (:sources context)\n        attrs       (:attrs rel)\n        len         (count args)\n        static-args (da/make-array len)\n        tuples-args (da/make-array len)]\n    (dotimes [i len]\n      (let [arg (nth args i)]\n        (if (symbol? arg) \n          (if-some [source (get sources arg)]\n            (da/aset static-args i source)\n            (da/aset tuples-args i (get attrs arg)))\n          (da/aset static-args i arg))))\n    ;; CLJS `apply` + `vector` will hold onto mutable array of arguments directly\n    ;; https://github.com/tonsky/datascript/issues/262\n    (if #?(:clj  false\n           :cljs (identical? f vector))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (let [args (da/aclone static-args)]\n          (dotimes [i len]\n            (when-some [tuple-idx (aget tuples-args i)]\n              (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n                (da/aset args i v))))\n          (apply f args)))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (dotimes [i len]\n          (when-some [tuple-idx (aget tuples-args i)]\n            (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n              (da/aset static-args i v))))\n        (apply f static-args)))))\n\n(defn- resolve-sym [sym]\n  #?(:cljs nil\n     :clj (when (namespace sym)\n            (when-some [v (resolve sym)] @v))))\n\n(defn filter-by-pred [context clause]\n  (let [[[f & args]] clause\n        pred         (or (get built-ins f)\n                         (context-resolve-val context f)\n                         (resolve-sym f)\n                         (when (nil? (rel-with-attr context f))\n                           (raise \"Unknown predicate '\" f \" in \" clause\n                                  {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel      (if pred\n                       (let [tuple-pred (-call-fn context production pred args)]\n                         (update production :tuples #(filter tuple-pred %)))\n                       (assoc production :tuples []))]\n    (update context :rels conj new-rel)))\n\n(defn bind-by-fn [context clause]\n  (let [[[f & args] out] clause\n        binding  (dp/parse-binding out)\n        fun      (or (get built-ins f)\n                     (context-resolve-val context f)\n                     (resolve-sym f)\n                     (when (nil? (rel-with-attr context f))\n                       (raise \"Unknown function '\" f \" in \" clause\n                              {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel  (if fun\n                   (let [tuple-fn (-call-fn context production fun args)\n                        rels     (for [tuple (:tuples production)\n                                       :let  [val (tuple-fn tuple)]\n                                       :when (not (nil? val))]\n                                   (prod-rel (Relation. (:attrs production) [tuple])\n                                             (in->rel binding val)))]\n                     (if (empty? rels)\n                       (prod-rel production (empty-rel binding))\n                       (reduce sum-rel rels)))\n                   (prod-rel (assoc production :tuples []) (empty-rel binding)))]\n    (update context :rels collapse-rels new-rel)))\n\n;;; RULES\n\n(defn rule? [context clause]\n  (and (sequential? clause)\n       (contains? (:rules context)\n                  (if (source? (first clause))\n                    (second clause)\n                    (first clause)))))\n\n(def rule-seqid (atom 0))\n\n(defn expand-rule [clause context used-args]\n  (let [[rule & call-args] clause\n        seqid              (swap! rule-seqid inc)\n        branches           (get (:rules context) rule)]\n    (for [branch branches\n          :let [[[_ & rule-args] & clauses] branch\n                replacements (zipmap rule-args call-args)]]\n      (walk/postwalk\n       #(if (free-var? %)\n          (db/some-of\n            (replacements %)\n            (symbol (str (name %) \"__auto__\" seqid)))\n          %)\n        clauses))))\n\n(defn remove-pairs [xs ys]\n  (let [pairs (->> (map vector xs ys)\n                   (remove (fn [[x y]] (= x y))))]\n    [(map first pairs)\n     (map second pairs)]))\n\n(defn rule-gen-guards [rule-clause used-args]\n  (let [[rule & call-args] rule-clause\n        prev-call-args     (get used-args rule)]\n    (for [prev-args prev-call-args\n          :let [[call-args prev-args] (remove-pairs call-args prev-args)]]\n      [(concat ['-differ?] call-args prev-args)])))\n\n(defn walk-collect [form pred]\n  (let [res (atom [])]\n    (walk/postwalk #(do (when (pred %) (swap! res conj %)) %) form)\n    @res))\n\n(defn collect-vars [clause]\n  (set (walk-collect clause free-var?)))\n\n(defn split-guards [clauses guards]\n  (let [bound-vars (collect-vars clauses)\n        pred       (fn [[[_ & vars]]] (every? bound-vars vars))]\n    [(filter pred guards)\n     (remove pred guards)]))\n\n(defn solve-rule [context clause]\n  (let [final-attrs     (filter free-var? clause)\n        final-attrs-map (zipmap final-attrs (range))\n;;         clause-cache    (atom {}) ;; TODO\n        solve           (fn [prefix-context clauses]\n                          (reduce -resolve-clause prefix-context clauses))\n        empty-rels?     (fn [context]\n                          (some #(empty? (:tuples %)) (:rels context)))]\n    (loop [stack (list {:prefix-clauses []\n                        :prefix-context context\n                        :clauses        [clause]\n                        :used-args      {}\n                        :pending-guards {}})\n           rel   (Relation. final-attrs-map [])]\n      (if-some [frame (first stack)]\n        (let [[clauses [rule-clause & next-clauses]] (split-with #(not (rule? context %)) (:clauses frame))]\n          (if (nil? rule-clause)\n\n            ;; no rules -> expand, collect, sum\n            (let [context (solve (:prefix-context frame) clauses)\n                  tuples  (-collect context final-attrs)\n                  new-rel (Relation. final-attrs-map tuples)]\n              (recur (next stack) (sum-rel rel new-rel)))\n\n            ;; has rule -> add guards -> check if dead -> expand rule -> push to stack, recur\n            (let [[rule & call-args]     rule-clause\n                  guards                 (rule-gen-guards rule-clause (:used-args frame))\n                  [active-gs pending-gs] (split-guards (concat (:prefix-clauses frame) clauses)\n                                                       (concat guards (:pending-guards frame)))]\n              (if (some #(= % '[(-differ?)]) active-gs) ;; trivial always false case like [(not= [?a ?b] [?a ?b])]\n\n                ;; this branch has no data, just drop it from stack\n                (recur (next stack) rel)\n\n                (let [prefix-clauses (concat clauses active-gs)\n                      prefix-context (solve (:prefix-context frame) prefix-clauses)]\n                  (if (empty-rels? prefix-context)\n\n                    ;; this branch has no data, just drop it from stack\n                    (recur (next stack) rel)\n\n                    ;; need to expand rule to branches\n                    (let [used-args  (assoc (:used-args frame) rule\n                                       (conj (get (:used-args frame) rule []) call-args))\n                          branches   (expand-rule rule-clause context used-args)]\n                      (recur (concat\n                               (for [branch branches]\n                                 {:prefix-clauses prefix-clauses\n                                  :prefix-context prefix-context\n                                  :clauses        (concatv branch next-clauses)\n                                  :used-args      used-args\n                                  :pending-guards pending-gs})\n                               (next stack))\n                             rel))))))))\n        rel))))\n\n(defn resolve-pattern-lookup-refs [source pattern]\n  (if (satisfies? db/IDB source)\n    (let [[e a v tx] pattern]\n      (->\n        [(if (or (lookup-ref? e) (attr? e)) (db/entid-strict source e) e)\n         a\n         (if (and v (attr? a) (db/ref? source a) (or (lookup-ref? v) (attr? v))) (db/entid-strict source v) v)\n         (if (lookup-ref? tx) (db/entid-strict source tx) tx)]\n        (subvec 0 (count pattern))))\n    pattern))\n\n(defn dynamic-lookup-attrs [source pattern]\n  (let [[e a v tx] pattern]\n    (cond-> #{}\n      (free-var? e) (conj e)\n      (free-var? tx) (conj tx)\n      (and\n        (free-var? v)\n        (not (free-var? a))\n        (db/ref? source a)) (conj v))))\n\n(defn limit-rel [rel vars]\n  (when-some [attrs' (not-empty (select-keys (:attrs rel) vars))]\n    (assoc rel :attrs attrs')))\n\n(defn limit-context [context vars]\n  (assoc context\n    :rels (->> (:rels context)\n               (keep #(limit-rel % vars)))))\n\n(defn check-bound [context vars form]\n  (let [bound (into #{} (mapcat #(keys (:attrs %)) (:rels context)))]\n    (when-not (set/subset? vars bound)\n      (let [missing (set/difference (set vars) bound)]\n        (raise \"Insufficient bindings: \" missing \" not bound in \" form\n               {:error :query/where\n                :form  form\n                :vars  missing})))))\n\n(defn -resolve-clause\n  ([context clause]\n    (-resolve-clause context clause clause))\n  ([context clause orig-clause]\n   (condp looks-like? clause\n     [[symbol? '*]] ;; predicate [(pred ?a ?b ?c)]\n     (filter-by-pred context clause)\n     \n     [[symbol? '*] '_] ;; function [(fn ?a ?b) ?res]\n     (bind-by-fn context clause)\n     \n     [source? '*] ;; source + anything\n     (let [[source-sym & rest] clause]\n       (binding [*implicit-source* (get (:sources context) source-sym)]\n         (-resolve-clause context rest clause)))\n     \n     '[or *] ;; (or ...)\n     (let [[_ & branches] clause\n           contexts (map #(resolve-clause context %) branches)\n           rels     (map #(reduce hash-join (:rels %)) contexts)]\n       (assoc (first contexts) :rels [(reduce sum-rel rels)]))\n     \n     '[or-join [[*] *] *] ;; (or-join [[req-vars] vars] ...)\n     (let [[_ [req-vars & vars] & branches] clause]\n       (check-bound context req-vars orig-clause)\n       (recur context (list* 'or-join (concat req-vars vars) branches) clause))\n     \n     '[or-join [*] *] ;; (or-join [vars] ...)\n     ;; TODO required vars\n     (let [[_ vars & branches] clause\n           vars         (set vars)\n           join-context (limit-context context vars)\n           contexts     (map #(-> join-context (resolve-clause %) (limit-context vars)) branches)\n           rels         (map #(reduce hash-join (:rels %)) contexts)\n           sum-rel      (reduce sum-rel rels)]\n       (update context :rels collapse-rels sum-rel))\n     \n     '[and *] ;; (and ...)\n     (let [[_ & clauses] clause]\n       (reduce resolve-clause context clauses))\n     \n     '[not *] ;; (not ...)\n     (let [[_ & clauses] clause\n           bound-vars       (set (mapcat #(keys (:attrs %)) (:rels context)))\n           negation-vars    (collect-vars clauses)\n           _                (when (empty? (set/intersection bound-vars negation-vars))\n                              (raise \"Insufficient bindings: none of \" negation-vars \" is bound in \" orig-clause\n                                {:error :query/where\n                                 :form  orig-clause}))\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           negation-context (reduce resolve-clause context' clauses)\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[not-join [*] *] ;; (not-join [vars] ...)\n     (let [[_ vars & clauses] clause\n           _                (check-bound context vars orig-clause)\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           join-context     (limit-context context' vars)\n           negation-context (-> (reduce resolve-clause join-context clauses)\n                                (limit-context vars))\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[*] ;; pattern\n     (let [source   *implicit-source*\n           pattern  (resolve-pattern-lookup-refs source clause)\n           relation (lookup-pattern source pattern)]\n       (binding [*lookup-attrs* (if (satisfies? db/IDB source)\n                                  (dynamic-lookup-attrs source pattern)\n                                  *lookup-attrs*)]\n         (update context :rels collapse-rels relation))))))\n\n(defn resolve-clause [context clause]\n  (if (rule? context clause)\n    (if (source? (first clause))\n      (binding [*implicit-source* (get (:sources context) (first clause))]\n        (resolve-clause context (next clause)))\n      (update context :rels collapse-rels (solve-rule context clause)))\n    (-resolve-clause context clause)))\n\n(defn -q [context clauses]\n  (binding [*implicit-source* (get (:sources context) '$)]\n    (reduce resolve-clause context clauses)))\n\n(defn -collect\n  ([context symbols]\n    (let [rels (:rels context)]\n      (-collect [(da/make-array (count symbols))] rels symbols)))\n  ([acc rels symbols]\n    (if-some [rel (first rels)]\n      (let [keep-attrs (select-keys (:attrs rel) symbols)]\n        (if (empty? keep-attrs)\n          (recur acc (next rels) symbols)\n          (let [copy-map (to-array (map #(get keep-attrs %) symbols))\n                len      (count symbols)]\n            (recur (for [#?(:cljs t1\n                            :clj ^{:tag \"[[Ljava.lang.Object;\"} t1) acc\n                         t2 (:tuples rel)]\n                     (let [res (aclone t1)]\n                       (dotimes [i len]\n                         (when-some [idx (aget copy-map i)]\n                           (aset res i (#?(:cljs da/aget :clj get) t2 idx))))\n                       res))\n                   (next rels)\n                   symbols))))\n      acc)))\n\n(defn collect [context symbols]\n  (->> (-collect context symbols)\n       (map vec)\n       set))\n\n(defprotocol IContextResolve\n  (-context-resolve [var context]))\n\n(extend-protocol IContextResolve\n  Variable\n  (-context-resolve [var context]\n    (context-resolve-val context (.-symbol var)))\n  SrcVar\n  (-context-resolve [var context]\n    (get-in context [:sources (.-symbol var)]))\n  PlainSymbol\n  (-context-resolve [var _]\n    (or (get built-in-aggregates (.-symbol var))\n        (resolve-sym (.-symbol var))))\n  Constant\n  (-context-resolve [var _]\n    (.-value var)))\n\n(defn -aggregate [find-elements context tuples]\n  (mapv (fn [element fixed-value i]\n          (if (dp/aggregate? element)\n            (let [f    (-context-resolve (:fn element) context)\n                  args (map #(-context-resolve % context) (butlast (:args element)))\n                  vals (map #(nth % i) tuples)]\n              (apply f (concat args [vals])))\n            fixed-value))\n    find-elements\n    (first tuples)\n    (range)))\n\n(defn- idxs-of [pred coll]\n  (->> (map #(when (pred %1) %2) coll (range))\n       (remove nil?)))\n\n(defn aggregate [find-elements context resultset]\n  (let [group-idxs (idxs-of (complement dp/aggregate?) find-elements)\n        group-fn   (fn [tuple]\n                     (map #(nth tuple %) group-idxs))\n        grouped    (group-by group-fn resultset)]\n    (for [[_ tuples] grouped]\n      (-aggregate find-elements context tuples))))\n\n(defprotocol IPostProcess\n  (-post-process [find tuples]))\n\n(extend-protocol IPostProcess\n  FindRel\n  (-post-process [_ tuples] tuples)\n  FindColl\n  (-post-process [_ tuples] (into [] (map first) tuples))\n  FindScalar\n  (-post-process [_ tuples] (ffirst tuples))\n  FindTuple\n  (-post-process [_ tuples] (first tuples)))\n\n(defn- pull [find-elements context resultset]\n  (let [resolved (for [find find-elements]\n                   (when (dp/pull? find)\n                     [(-context-resolve (:source find) context)\n                      (dpp/parse-pull\n                        (-context-resolve (:pattern find) context))]))]\n    (for [tuple resultset]\n      (mapv (fn [env el]\n              (if env\n                (let [[src spec] env]\n                  (dpa/pull-spec src spec [el] false))\n                el))\n            resolved\n            tuple))))\n\n(def ^:private query-cache (volatile! (datascript.lru/lru lru-cache-size)))\n\n(defn memoized-parse-query [q]\n  (if-some [cached (get @query-cache q nil)]\n    cached\n    (let [qp (dp/parse-query q)]\n      (vswap! query-cache assoc q qp)\n      qp)))\n\n(defn q [q & inputs]\n  (let [parsed-q      (memoized-parse-query q)\n        find          (:qfind parsed-q)\n        find-elements (dp/find-elements find)\n        find-vars     (dp/find-vars find)\n        result-arity  (count find-elements)\n        with          (:qwith parsed-q)\n        ;; TODO utilize parser\n        all-vars      (concat find-vars (map :symbol with))\n        q             (cond-> q\n                        (sequential? q) dp/query->map)\n        wheres        (:where q)\n        context       (-> (Context. [] {} {})\n                        (resolve-ins (:qin parsed-q) inputs))\n        resultset     (-> context\n                        (-q wheres)\n                        (collect all-vars))]\n    (cond->> resultset\n      (:with q)\n        (mapv #(vec (subvec % 0 result-arity)))\n      (some dp/aggregate? find-elements)\n        (aggregate find-elements context)\n      (some dp/pull? find-elements)\n        (pull find-elements context)\n      true\n        (-post-process find))))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAqBA,AAAA,AAAaA;AAEb,AAAA;AAAA;AAAA,AAIA,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAW2E;;AAAX,AAAA,AAAA5E,AAAA;AAAA,AAAA,AAAAA,AAAAC,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAAAC,AAAWwE;;AAAX,AAAA,AAAA1E,AAAA;AAAA,AAAA,AAAAG,AAAAF;AAAAE,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAAE;;;AAAA;AAAAC;;;AAAA;AAAAC;;;;AAAA,AAAAC,AAAAC,AAAAR,AAAAC;;;;;AAAA,AAAA,AAAA,AAAA,AAAAQ,AAAAC,AAAAC,AAAW8D;;AAAX,AAAA,AAAAhE,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAAE,AAAA,AAAAC,AAAAF,AAAA,AAAA;AAAAG,AAAA,AAAAD,AAAAF,AAAA,AAAA;AAAA,AAAA,AAAAL,AAAAA,AAAAG,AAAAG,AAAAE,AAAAR,AAAAG,AAAAG,AAAAE;AAAAP,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAU,AAAAC,AAAAC,AAAWoD;;AAAX,AAAA,AAAAtD,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAE;;AAAA,AAAA,AAAAC,AAAAJ,AAAAE,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAI,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAtB,AAAA,AAAA,AAAAsB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAArB,AAAA,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApB,AAAA,AAAAE;;;AAAA,AAAA,AAAA,AAAA,AAAAmB,AAAW8C;;AAAX,AAAA,AAAA9C,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAnB,AAAA,AAAAqB,AAAArB,AAAA,AAAAsB;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAW0C;;AAAX,AAAA,AAAA1C,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAWwC;;AAAX,AAAA,AAAAxC,AAAA;AAAA,AAAA,AAAA7B,AAAAC,AAAAC,AAAA0B,AAAAxB,AAAA0B,AAAWuC;;;AAAX,AAAA,AAAA,AAAA,AAAAtC,AAAWsC;;AAAX,AAAA,AAAAtC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA5B;;;AAAA,AAAA,AAAA,AAAA,AAAA6B,AAAWoC;;AAAX,AAAA,AAAApC,AAAA;AAAA,AAAA,AAAAC,AAAAJ;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;AAAAA;;AAAA,AAAAA,AAAA,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAD;;AAAA,AAAA,AAAAD,AAAAF;;AAAA,AAAA,AAAAH,AAAAI;;AAAAA;;;;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAAC,AAAW8B;;AAAX,AAAA,AAAA/B,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAF,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAW2B;;AAAX,AAAA,AAAA5B,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAL,AAAAb,AAAAc;;AAAA,AAAA1C,AAAAC,AAAAC,AAAA0B,AAAA,AAAAmB,AAAA,AAAAH,AAAAxC,AAAAsC,AAAA,AAAW2B;;;;AAAX,AAAA,AAAA,AAAA,AAAArB,AAAAC,AAAA1B,AAAW8C;;AAAX,AAAA,AAAArB,AAAA;AAAA,AAAA,AAAAE,AAAAC;AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAAI,AAAA;AAAAC,AAAAF;AAAA,AAAA,AAAAF,AAAAA,AAAAG,AAAAC,AAAAJ,AAAAG,AAAAC;;AAAA,AAAA/B,AAAAtB,AAAAC,AAAA0B,AAAAxB,AAAA,AAAWiE;;AAAX,AAAA,AAAAd,AAAA;AAAAC,AAAAJ;AAAA,AAAA,AAAAF,AAAAA,AAAAK,AAAAC,AAAAN,AAAAK,AAAAC;;AAAA,AAAAxD,AAAAuB,AAAArB,AAAA0B,AAAAxB,AAAA,AAAWiE;;AAAX,AAAA,AAAAZ,AAAA;AAAAC,AAAAN;AAAA,AAAA,AAAAF,AAAAA,AAAAO,AAAAC,AAAAR,AAAAO,AAAAC;;AAAA,AAAA1D,AAAAC,AAAAsB,AAAAK,AAAAxB,AAAA,AAAWiE;;AAAX,AAAArE,AAAAC,AAAAC,AAAA0B,AAAA,AAAA+B,AAAAvD,AAAA6C,AAAA1B,AAAA,AAAW8C;;;;;;AAAX,AAAA,AAAA,AAAA,AAAAT,AAAWS;;AAAX,AAAA,AAAAT,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAxC,AAAA,AAAA,AAAAyC,AAAA,AAAA9D,AAAA,AAAA,AAAA8D,AAAA,AAAA7D,AAAA,AAAA,AAAA6D,AAAA,AAAA5D,AAAA,AAAAE;;;AAAA,AAAA,AAAA,AAAA,AAAA2D,AAAAxC,AAAW8C;;AAAX,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAA/D,AAAAC,AAAAC,AAAAqB,AAAAnB,AAAA0B,AAAWuC;;;AAAX,AAAA,AAAA,AAAA,AAAAL,AAAAC,AAAWI;;AAAX,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAAD;AAAA,AAAAD,AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;;AAAA,AAAAzD,AAAA4D,AAAAJ,AAAAC;;;;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAF,AAAA,AAAAC,AAAAE;AAAA,AAAA,AAAAC,AAAAD,AAAA;;;AAAA;;;AAAA,AAAWO,AAAS/E,AAAKC,AAAQC;AAAjC,AAAA,AAAAmE,AAAA,AAAA,AAAA,AAAoBrE,AAAKC,AAAQC;;;AAAjC;;;AAAA,AAAAwE,AAAWM;AAAX,AAAA,AAAAL,AAAA,AAAAC,AAAA,AAAAC,AAAAH,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAAJ;AAAA,AAAA5B,AAAA,AAAA8B;;AAAAA;;;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAK,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA3B,AAAA4B,AAAA;;;AAAAN,AAOA,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA5E,AAAAC,AAAWuG;;AAAX,AAAA,AAAAxG,AAAA;AAAA,AAAA,AAAAA,AAAAC,AAAA;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAsF,AAAApF,AAAWoG;;AAAX,AAAA,AAAAtG,AAAA;AAAA,AAAA,AAAAuF,AAAAD;AAAAC,AAAA,AAAA,AAAAA,AAAAnF,AAAA,AAAAmF,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAAC;;;AAAA;AAAAC;;;;AAAA,AAAAjF,AAAAC,AAAA6E,AAAApF;;;;;AAAA,AAAA,AAAA,AAAA,AAAAQ,AAAAC,AAAAC,AAAW0F;;AAAX,AAAA,AAAA5F,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC,AAAA4E;AAAA,AAAA,AAAAC,AAAAD;AAAAzE,AAAA,AAAAC,AAAAyE,AAAA,AAAA;AAAAxE,AAAA,AAAAD,AAAAyE,AAAA,AAAA;AAAA,AAAA,AAAAhF,AAAAA,AAAAG,AAAAG,AAAAE,AAAAR,AAAAG,AAAAG,AAAAE;AAAAP,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAU,AAAAC,AAAAC,AAAWgF;;AAAX,AAAA,AAAAlF,AAAA;AAAA,AAAA,AAAAG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAE;;AAAA,AAAA,AAAAC,AAAAJ,AAAAE,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAI,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA6D,AAAA,AAAA,AAAA7D,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA8D,AAAA,AAAAhF;;;AAAA,AAAA,AAAA,AAAA,AAAAmF,AAAWU;;AAAX,AAAA,AAAAV,AAAA;AAAA,AAAA,AAAA/D,AAAA,AAAA+D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAnF,AAAA,AAAAqB,AAAArB,AAAA,AAAAsB;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAWsE;;AAAX,AAAA,AAAAtE,AAAA;AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAWoE;;AAAX,AAAA,AAAApE,AAAA;AAAA,AAAA,AAAAsD,AAAAC,AAAAxD,AAAAxB,AAAA0B,AAAWmE;;;AAAX,AAAA,AAAA,AAAA,AAAAlE,AAAWkE;;AAAX,AAAA,AAAAlE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA5B;;;AAAA,AAAA,AAAA,AAAA,AAAA6B,AAAWgE;;AAAX,AAAA,AAAAhE,AAAA;AAAA,AAAA,AAAAC,AAAAJ;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;AAAAA;;AAAA,AAAAA,AAAA,AAAAsD,AAAA,AAAApD;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAAD;;AAAA,AAAA,AAAAoD,AAAAvD;;AAAA,AAAA,AAAAH,AAAAI;;AAAAA;;;;AAAA,AAAA,AAAA,AAAA,AAAAuD,AAAAC,AAAWO;;AAAX,AAAA,AAAAR,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAC,AAAA,AAAAlD,AAAA,AAAAiD,AAAA,AAAAC,AAAA,AAAAlD,AAAA,AAAAiD,AAAA,AAAAC,AAAA,AAAAlD,AAAA,AAAAiD,AAAA,AAAAC;;;AAAA,AAAA,AAAA,AAAA,AAAAjD,AAAAC,AAAWuD;;AAAX,AAAA,AAAAxD,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAAL,AAAAb,AAAAc;;AAAA,AAAAyC,AAAAC,AAAAxD,AAAA,AAAAmB,AAAA,AAAAH,AAAAxC,AAAAsC,AAAA,AAAWuD;;;;AAAX,AAAA,AAAA,AAAA,AAAAjD,AAAAC,AAAAsC,AAAWU;;AAAX,AAAA,AAAAjD,AAAA;AAAA,AAAA,AAAA2C,AAAAxC;AAAAyC,AAAA3C;AAAA,AAAA,AAAA,AAAA4C,AAAA;AAAAC,AAAAF;AAAA,AAAA,AAAAD,AAAAA,AAAAE,AAAAC,AAAAH,AAAAE,AAAAC;;AAAA,AAAAP,AAAAH,AAAAxD,AAAAxB,AAAA,AAAW6F;;AAAX,AAAA,AAAAF,AAAA;AAAAC,AAAAJ;AAAA,AAAA,AAAAD,AAAAA,AAAAI,AAAAC,AAAAL,AAAAI,AAAAC;;AAAA,AAAAb,AAAAI,AAAA3D,AAAAxB,AAAA,AAAW6F;;AAAX,AAAAd,AAAAC,AAAAxD,AAAA,AAAA+B,AAAAvD,AAAA6C,AAAAsC,AAAA,AAAWU;;;;;AAAX,AAAA,AAAA,AAAA,AAAArC,AAAWqC;;AAAX,AAAA,AAAArC,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAxC,AAAA,AAAA,AAAAyC,AAAA,AAAAqB,AAAA,AAAA,AAAArB,AAAA,AAAAsB,AAAA,AAAAhF;;;AAAA,AAAA,AAAA,AAAA,AAAA2D,AAAAwB,AAAWU;;AAAX,AAAA,AAAAlC,AAAA;AAAA,AAAA,AAAAoB,AAAAC,AAAAG,AAAAnF,AAAA0B,AAAWmE;;;AAAX,AAAA,AAAA,AAAA,AAAAjC,AAAAC,AAAWgC;;AAAX,AAAA,AAAAjC,AAAA;AAAA,AAAA,AAAA,AAAAE,AAAAD;AAAA,AAAAD,AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;;AAAA,AAAAzD,AAAA4D,AAAAJ,AAAAC;;;;AAAA,AAAA,AAAAgC,AAAA;AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAAA,AAAA;;AAAA,AAAA,AAAAA,AAAA,AAAA3B;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA,AAAA,AAAA0B,AAAA,AAAA3B,AAAAE;AAAA,AAAA,AAAAC,AAAAD,AAAA;;;AAAA;;;AAAA,AAAW4B,AAAUjB,AAAMC;AAA3B,AAAA,AAAAa,AAAA,AAAA,AAAA,AAAqBd,AAAMC;;;AAA3B;;;AAAA,AAAAc,AAAWG;AAAX,AAAA,AAAA1B,AAAA,AAAAwB,AAAA,AAAAtB,AAAAqB,AAAA,AAAA;AAAA,AAAA,AAAA,AAAApB,AAAAoB;AAAA,AAAApD,AAAA,AAAAqD;;AAAAA;;;AAAA,AAAA,AAAAF,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnD,AAAA4B,AAAA;;;AAAAsB,AAKA,AAAA,AAAMK,AAAQC;AAAd,AACE;AACA,AAACC,AAAMD;;AAET,AAAA,AAAME,AAAgBC,AAAOC;AAA7B,AACE,AAACC,AAAiB,AAACC,AAAI,AAACC,AAAKJ,AACX,AAACG,AAAI,AAACC,AAAKH;;AAE/B,AAAA,AAAA,AAAAI,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAWG;AAAjB,AACE,AAAA,AAACC,AAAQC,AAAIF;;;AADf,AAAA,AAAA,AAAMH;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA1D,AAAAyD;;;AAAA,AAGA,AAAA,AAAA,AAAAP,AAAMa;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAZ,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAY,AAAA,AAAA,AAAAX;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAY,AAAA,AAAAV,AAAA,AAAAS,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE;;;;;AAAA,AAAA,AAAA,AAAMF,AACFQ,AAAEC;AADN,AACS,AAACC,AAAKC,AAAOH,AAAEC;;;AADxB,AAAA,AAAA,AAAA,AAAMT,AAEFQ,AAAEC,AAAIG;AAFV,AAEgB,AAACC,AAAMC,AAAKH,AAAOH,AAAEC,AAAEG;;;AAFvC;AAAA,AAAA,AAAA,AAAAT,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAxB,AAAAuB;AAAAA,AAAA,AAAAE,AAAAF;AAAAG,AAAA,AAAA1B,AAAAuB;AAAAA,AAAA,AAAAE,AAAAF;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAE,AAAAH;;;AAAA,AAAA,AAAA,AAAMH;;AAAN,AAIA,AAAA,AAAMe,AAAYP,AAAEC;AAApB,AACE,AAAK,AAAC7F,AAAE,AAACR,AAAMoG,AAAG,AAACpG,AAAMqG,AACpB,AAAA,AAAAO,AAACC;AAAD,AAAS,AAAAD,AAACjG,AAAU0F;AAAK,AAACvB,AAAKsB,AAC/B,AAAA,AAAAU,AAACD;AAAD,AAAS,AAAAC,AAACnG,AAAU0F;AAAK,AAACvB,AAAKsB;;AAEtC,AAAA,AAAOW,AAAaC,AAAQC;AAA5B,AACE,AACE,AAAA,AAAA,AAACzG,AAAKwG;AADR;;AAAA,AAGE,AAAA,AAAA,AAACxG,AAAOwG;AACN,AAACE,AAAYD;;AAJjB,AAKE,AAAAE,AAASH;AACP,AAACxG,AAAEyG,AAAKD;;AANZ,AAOE,AAACE,AAAYF;AACX,AAAI,AAAA,AAAA,AAACxG,AAAE,AAAC4G,AAAKJ;AACX,AAAK,AAACE,AAAYD,AACb,AAACJ,AAAO,AAAAQ;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAxI,AAAAyI,AAAA,AAAA,AAAMC;AAAN,AAAA1I,AAAAyI,AAAA,AAAA,AAAiBE;AAAjB,AAA2B,AAACT,AAAAA,AAAAA,AAAYQ,AAAAA,AAAWC,AAAAA;AACnD,AAACC,AAAIlB,AAAO,AAACmB,AAAQV,AAASC;;AAC3C,AAAK,AAACC,AAAYD,AACb,AAACzG,AAAE,AAACR,AAAMiH,AAAM,AAACjH,AAAMgH,AACvB,AAACH,AAAO,AAAAc;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAA9I,AAAA+I,AAAA,AAAA,AAAML;AAAN,AAAA1I,AAAA+I,AAAA,AAAA,AAAiBJ;AAAjB,AAA2B,AAACT,AAAAA,AAAAA,AAAYQ,AAAAA,AAAWC,AAAAA;AACnD,AAACC,AAAIlB,AAAOS,AAAQC;;;AAfvC,AAiBI,AAACD,AAAAA,AAAAA,AAAQC,AAAAA;;;;;;;AAEf,AAAA,AAAMY,AAASC;AAAf,AACE,AAAK,AAAAX,AAASW,AACT,AAAA,AAACtH,AAAK,AAACgE,AAAM,AAACuD,AAAKD;;AAE1B,AAAA,AAAME,AAAWF;AAAjB,AACE,AAAK,AAAAX,AAASW,AACT,AAAA,AAACtH,AAAK,AAACgE,AAAM,AAACuD,AAAKD;;AAE1B,AAAA,AAAMG,AAAOhB;AAAb,AACE,AAAI,AAAAlJ,AAAUkJ,AAAM,AAASA;;AAE/B,AAAA,AAAMiB,AAAajB;AAAnB,AACE,AAAA,AAAA,AAAA,AAACF,AAAakB,AAAUhB;;AAI1B,AAAA,AAAMkB,AAAaC,AAAYC,AAEZC,AAAYC;AAF/B,AAIE,AAAMC,AAAI,AAASH;AACbI,AAAI,AAASF;AACbG,AAAI,AAACC,AAAc,AAAGH,AAAGC;AAF/B,AAGE,AAAAG,AAAYJ;AAAZ,AAAA,AAAA,AAAUK;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAMH,AAAIG,AAAE,AAA4BT,AAAG,AAAMC,AAAMQ;;AADzD,AAAA,AAAA,AAAUA;;;;AAAV;;;;AAEA,AAAAD,AAAYH;AAAZ,AAAA,AAAA,AAAUI;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAMH,AAAI,AAAGF,AAAGK,AAAG,AAA4BP,AAAG,AAAMC,AAAMM;;AADhE,AAAA,AAAA,AAAUA;;;;AAAV;;;;AAEAH;;AAEJ,AAAA,AAAMI,AAAS1C,AAAEC;AAAjB,AACE,AAAA0C,AAAyC3C;AAAzC2C,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAOM;AAAP,AAAAF,AAAAJ,AAAA,AAAuBO;AAAvBF,AACyC/C;AADzC+C,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAA,AAAAD,AAAAC,AAAA,AACOG;AADP,AAAAJ,AAAAC,AAAA,AACuBI;AADvB,AAEE,AACE,AAAChJ,AAAE6I,AAAQE;AACX,AAAAtF,AAAA,AAAA,AAAA,AAAWoF,AAAQ,AAACvI,AAAK,AAAC2I,AAAIH,AAAUE;;AAF1C,AAIE,AAAK,AAAC7C,AAAW0C,AAAQE;AACzB,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAoDN,AAAgBE;;AALtE,AAQE,AAAC1C,AAAO+C,AAAQ,AAACC,AAAKR;AACtB,AAAMS,AAAW,AAACL,AAAI,AAAAM,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAArI,AAAAmI;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAC,AAAAH;AAAA,AAAAI,AA+zEuB,AAAA6B,AAAAjC;AA/zEvBK,AAAA,AAAArK,AAAAoK;AAAAE,AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAH;AAAA,AAAAI,AAAA,AAAAtI,AAAAiI,AAAAI;AAAA,AAAA3L,AAAA4L,AAAA,AAAA,AAAO3C;AAAP,AAAAjJ,AAAA4L,AAAA,AAAA,AAAWS;AAAX,AAAA,AAAA,AAAAR,AAAAJ,AAAA,AACGY,AAAM,AAAC7B,AAAAA,AAAAA,AAAQvB,AAAAA;;AADlB,AAAA,AAAA0C,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAd;;AAAA,AAAAW,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAAS,AAAA,AAAAvG,AAAAwF;AAAA,AAAAnL,AAAAkM,AAAA,AAAA,AAAOjD;AAAP,AAAAjJ,AAAAkM,AAAA,AAAA,AAAWG;AAAX,AAAA,AAAAF,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAjB,AACGkB,AAAM,AAAC7B,AAAAA,AAAAA,AAAQvB,AAAAA;;;AADlB;;;;AAAA,AAAA;;AAAA,AAAA,AAAAiC,AAAkBR;;AAElC4B,AAAa,AAACtB,AAAKR,AAAS,AAAC+B,AAAOC,AAAK,AAAA;AACzCC,AAAQ,AAACC,AACC,AAAC/M,AACC,AAAKgN,AAAIC;AAAT,AACE,AAAMC,AAAO,AAAC/C,AAAcwC;AAA5B,AACE,AAAAQ,AAAA,AAAA9J,AAAsBiI;AAAtB8B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAjN,AAAAkN,AAAA,AAAA,AAASb;AAAT,AAAArM,AAAAkN,AAAA,AAAA,AAAeI;AAAf,AAAA,AACE,AAAMT,AAAOS,AAAM,AAA4BV,AAAQP;;AADzD;AAAA,AAAAS;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAA5B,AAAA,AAAArI,AAAA8J;AAAA,AAAA,AAAAzB;AAAA,AAAA,AAAAyB,AAAAzB;AAAA,AAAA,AAAA,AAAAC,AAAAwB;AAAA,AAAAK,AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAA,AAAAb,AAAAa;AAAAK;AAAA,AAAAhM,AAAAgM;AAAA;;;;;;;AAAA,AAAAE,AAAA,AAAA1H,AAAAmH;AAAA,AAAA9M,AAAAqN,AAAA,AAAA,AAAShB;AAAT,AAAArM,AAAAqN,AAAA,AAAA,AAAeC;AAAf,AAAA,AACE,AAAMT,AAAOS,AAAM,AAA4BV,AAAQP;;AADzD;AAAA,AAAA,AAAAjF,AAAA0F;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAEA,AAACS,AAAMZ,AAAIE;AACf,AAACW,AAAU,AAAC5C,AAAIH,AAChBE;AAXlB,AAYE,AAAAvF,AAAA,AAAA,AAAA,AAAWoF,AAAQiC;;AArBvB,AAwBE,AAAMgB,AAAU,AAACC,AAAO,AAACzH,AAAK,AAAC0H,AAAMnD,AAAQE,AAAU,AAACkD;AAAxD,AACM,AAAAxI,AAAA,AAAA,AAAA,AAAA,AAAWqI,AACX,AAAAI,AACA,AAAAE;AADAD,AAASvG;AAAT,AAAA,AAAAsG,AAAAC,AAAAD,AAAAC,AAAC7D,AAAAA,AAAAA;;AACD+D,AAASxG;AAAT,AAAA,AAAAuG,AAAAC,AAAAD,AAAAC,AAAC/D,AAAAA,AAAAA;;;;;;AAEb,AAAA,AAAA,AAAA/D,AAAMgI;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AACM,AAAA9I,AAAA,AAAA,AAAA,AAAA,AAAA,AAAe,AAAA,AAAC0E;;;AADtB,AAAA,AAAA,AAAMoE,AAEFE,AAAKC;AAFT,AAGI,AAAMxI,AAAO,AAACI,AAAK,AAAA,AAAQmI;AACrBtI,AAAO,AAACG,AAAK,AAAA,AAAQoI;AACrB7E,AAAO,AAAC8E,AAAS,AAACC,AAAI,AAAA,AAAQH,AAAMvI;AACpC6D,AAAO,AAAC4E,AAAS,AAACC,AAAI,AAAA,AAAQF,AAAMvI;AAH1C,AAIE,AAAAV,AACE,AAACsI,AAAO,AAAClN,AAAOqF,AAAOC,AAAQ,AAAC8H,AAChC,AAAClB,AACC,AAAC/M,AACC,AAAKgN,AAAIpD;AAAT,AACE,AAAC5J,AAAO,AAAKgN,AAAIlD;AAAT,AACE,AAAC8D,AAAMZ,AAAI,AAACrD,AAAYC,AAAGC,AAAMC,AAAGC;AACtCiD,AAAI,AAAA,AAAS0B;AAP7B,AAAA,AAAA,AAQM,AAAA,AAACb,AAAc,AAAA,AAASY;;;AAfpC,AAAA,AAAA,AAAMF;;AAAN,AAoBA,AAAA,AAAA,AAAAhI,AAAOsI;AAAP,AAAA,AAAArI,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAqI,AAAAlI;;;AAAA,AAAA,AAAA,AAAA,AAAOkI,AAAY7H;AAAnB,AACE,AAAM+H,AAAE,AAACvN,AAAMwF;AAAf,AACE,AAACgI,AAAK,AAACC,AAAK,AAAA,AAAGF,AAAK/H,AAAI,AAACkI,AAAK,AAAA,AAAGH,AAAK/H;;;AAF1C,AAAA,AAAA,AAAO6H;;AAAP;AAAA,AAAA,AAAA,AAAAC,AAAOD;AAAP,AAAA,AAAA9H,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA1D,AAAAyL;;;AAAA,AAIA,AAAA,AAAOK,AACJC,AAAGC,AAAEzH,AAAE0H;AADV,AAEE,AAAM,AAAA,AAAMA;AAAZ,AACE,AAAA,AAAApE,AAAA,AAAA,AAAA,AAAA;;AADF;;AAEA,AAAAqE,AAAgB,AAACvJ,AAAM,AAAA,AAACyJ,AAAWL,AAAIC,AAAEzH;AAAzC,AAAA,AAAA,AAAA2H,AAAA;AAEED;;AAFF,AAAAC,AAAUC;AAAV,AACE,AAAA,AAAIA;;;AAGR,AAAA,AAAA,AAAAjJ,AAAOmJ;AAAP,AAAA,AAAAlJ,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAkJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA/I;;;AAAA,AAAA,AAAA,AAAA,AAAO+I,AACJN,AAAGC,AAAIS;AADV,AAEE,AAAC9P,AACA,AAAK+P,AAAEnI;AAAP,AACE,AAAAoI,AAAkB,AAAChK,AAAM,AAAA,AAACyJ,AAAWL,AAAIC,AAAEzH;AAA3C,AAAA,AAAA,AAAAoI,AAAA;AAAA;;AAAA,AAAAA,AAAYR;AAAZ,AACE,AAAA,AAACS,AAAS,AAAA,AAAIT,AAAO,AAAA,AAAIA;;AAH9B,AAKCM;;;AAPH,AAAA,AAAA,AAAOJ;;AAAP;AAAA,AAAA,AAAA,AAAAC,AAAOD;AAAP,AAAA,AAAAE,AAAA,AAAA5J,AAAA2J;AAAAA,AAAA,AAAAlI,AAAAkI;AAAAE,AAAA,AAAA7J,AAAA2J;AAAAA,AAAA,AAAAlI,AAAAkI;AAAA,AAAA,AAAAhI,AAAA;AAAA,AAAA,AAAAA,AAAAiI,AAAAC,AAAAF;;;AAAA,AASA,AAAA,AAAOO,AACJd,AAAGC,AAAEzH;AADR,AAEE,AAAA,AAAM,AAAC+C,AAAI,AAACwF,AAAUf,AAAGC,AAAGzH;;AAE9B,AAAA,AAAA,AAAArB,AAAO6J;AAAP,AAAA,AAAA5J,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA4J,AAAAzJ;;;AAAA,AAAA,AAAA,AAAA,AAAOyJ,AAAUE;AAAjB,AACE,AAACtQ,AAAO,AAAK4H,AAAEC;AAAP,AACE,AAAIA;AAAEA;;AAAE,AAACoI,AAAQpI;;AAD3B,AACqCyI;;;AAFvC,AAAA,AAAA,AAAOF;;AAAP;AAAA,AAAA,AAAA,AAAAC,AAAOD;AAAP,AAAA,AAAArJ,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA1D,AAAAgN;;;AAAA,AAIA,AAAA,AAAA,AAAA9J,AAAOgK;AAAP,AAAA,AAAA/J,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA+J,AAAA5J;;;AAAA,AAAA,AAAA,AAAA,AAAO4J,AAASD;AAAhB,AACE,AAACtQ,AAAO,AAAK4H,AAAEC;AAAP,AACE,AAAIA;AAAE,AAACoI,AAAQpI;;AAAGA;;AAD5B,AACoCyI;;;AAFtC,AAAA,AAAA,AAAOC;;AAAP;AAAA,AAAA,AAAA,AAAAC,AAAOD;AAAP,AAAA,AAAAxJ,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAA1D,AAAAmN;;;AAAA,AAIA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAKC,AACAC,AAAOC,AAAUC,AAAUA,AAASC,AAAMC,AAAOC,AAAQC,AAAOC,AAAMC,AACtEC,AAAeC,AAAWC,AAAUC,AAAUC,AAAUC,AAAU5E,AAAU6E,AACxEC,AAAaC,AAAYC,AAAaC,AAAaC,AAAeC,AACnEC,AAAgBC,AACfC,AAAeC,AAAcC,AAAaC,AAAYC,AAAUnC,AAAYG,AACvEiC,AAAwBC,AAC1BC,AAAgBC,AAAYpJ,AAAiBqJ,AAAiBC,AAChE9K,AAAc+K,AAAWzM,AAAeqE,AAAqBqI,AAC9DvR,AAAcwR,AAAkBzQ,AAAmB0Q,AAAkB9Q,AACvE+Q,AAAaC,AAAmBC,AAAwBC,AAAsBC,AAAeC,AACzFC,AAAqBC,AAAoBC,AAAoBC,AAC5D9E,AAAoBM,AAAqBO,AAAqBQ,AAAmBwC,AACpEkB,AAAsCC,AAChCC,AAA6CC;AAG5E,AAAKC,AACJ,AAAA,AAAcjO;AAAd,AAAoB,AAAA,AAAC/F,AAAOkR,AAAInL;;AAAhC,AACcA;AADd,AACoB,AAAG,AAACkO,AAAIlO,AAAM,AAACvE,AAAMuE;;AADzC,AAGWA;AAHX,AAIU,AAAMmO,AAAM,AAACC,AAAKpO;AACZqO,AAAK,AAAC5S,AAAMuE;AACZsO,AAAI,AAAA,AAAiBD;AAF3B,AAGE,AAAAE,AAAQ,AAACC,AAAIL,AAAMG;AAAnB,AAAA,AACE,AAACvC,AAAMsC;AACH,AAAAE,AAAG,AAACC,AAAIL,AAAM,AAAA,AAAKG,AACnB,AAAA;;AAHNC;;;AAPZ,AAYWvO;AAZX,AAaU,AAAMyO,AAAK,AAACC,AAAI1O;AACVkO,AAAK,AAACA,AAAI,AAAA1I,AAAA,AAAAmJ;AAAA,AAAA,AAAAjJ,AAAA,AAAA;AAAA,AAAA,AAAAiJ,AAAAA;;AAAA,AAAA,AAAAhJ,AAAA,AAAArI,AAAAqR;AAAA,AAAA,AAAAhJ;AAAA,AAAA,AAAAgJ,AAAAhJ;AAAA,AAAA,AAAA,AAAAC,AAAA+I;AAAA,AAAA9I,AAstEwB,AAAA6B,AAAAiH;AAttExB7I,AAAA,AAAArK,AAAAoK;AAAA+I,AAAA,AAAA5I,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA+I,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA/I;AAAA,AAAA,AAAAlI,AAAAiI,AAAAgJ,AAAME;AAAN,AAAA,AACYC,AAAM,AAAGD,AAAEN;AADvB,AAAA,AAAA,AAAAtI,AAAAyI,AAEE,AAAGI,AAAMA;;AAFX,AAAA,AAAAH,AAAA;;;;AAAA;;;;;AAAA,AAAAzI,AAAA,AAAAC,AAAAuI,AAAA,AAAAE,AAAA,AAAAvI,AAAAoI;;AAAA,AAAAvI,AAAA,AAAAC,AAAAuI,AAAA;;;AAAA,AAAA,AAAA3O,AAAA0O,AAAMI;AAAN,AAAA,AACYC,AAAM,AAAGD,AAAEN;AADvB,AAAA,AAAAhI,AAAA,AAAAqI,AAAA,AAAApI,AAAAiI,AAEE,AAAGK,AAAMA;;;AAFX;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxJ,AAAQxF;;AADxB,AAIE,AAAGkO,AAAI,AAACzS,AAAMuE;;AAjB1B,AAmBWA;AAnBX,AAoBU,AAAUiP,AAA6B,AAACC,AAASlP;;AApB3D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAsBamP,AACAD,AAGA,AA8BAhB,AAMAzS;;AAnCIuE;AADJ,AACU,AAAC/F,AAAO,AAAKgN,AAAI8H;AAAT,AACE,AAAI,AAAA,AAAM,AAAC9C,AAAQ8C,AAAE9H;AACnB8H;;AAAE9H;;AACN,AAAChH,AAAMD,AAAM,AAAC0B,AAAK1B;;AACjCqP,AAAErP;AALN,AAMI,AAACkF,AACC,AAACjL,AAAO,AAAKgN,AAAI8H;AAAT,AACE,AACE,AAAG,AAACtT,AAAMwL,AAAKoI;AACb,AAACC,AAAKrD,AAAQ,AAACsD,AAAKtI,AAAI8H;;AAF5B,AAGE,AAAA,AAAM,AAAC9C,AAAQ8C,AAAE,AAAClM,AAAKoE;AACrB,AAACqI,AAAKrD,AAAQ,AAACsD,AAAK,AAACpM,AAAQ8D,AAAK8H;;AAJtC,AAKQ9H;;;;AANlB,AAOWjH;;AATbqP,AAAErP;;;AAAFqP;;AAAAA,AAAErP;;;;;;;;AAUN;;AACIA;AADJ,AACU,AAAC/F,AAAO,AAAKgN,AAAI8H;AAAT,AACE,AAAI,AAAA,AAAM,AAAC9C,AAAQ8C,AAAE9H;AACnB8H;;AAAE9H;;AACN,AAAChH,AAAMD,AAAM,AAAC0B,AAAK1B;;AACjCqP,AAAErP;AALN,AAMI,AAACkF,AACC,AAACjL,AAAO,AAAKgN,AAAI8H;AAAT,AACE,AACE,AAAG,AAACtT,AAAMwL,AAAKoI;AACb,AAACC,AAAKrD,AAAQ,AAACsD,AAAKtI,AAAI8H;;AAF5B,AAGE,AAAA,AAAM,AAAC9C,AAAQ8C,AAAE,AAAC9O,AAAMgH;AACtB,AAACqI,AAAKrD,AAAQ,AAACsD,AAAK,AAAC7N,AAAKuF,AAAK8H;;AAJnC,AAKQ9H;;;;AANlB,AAOWjH;;AATbqP,AAAErP;;;AAAFqP;;AAAAA,AAAErP;;;;;;;;AAiBA,AAAKA;AAAL,AAAW,AAACvE,AAAM,AAACkU,AAAS3P;AA1ClC0O,AAGAU,AACA9O,AAgCA;;AACIN;AADJ,AACU,AAACwP,AAASxP;;AAChBqP,AAAErP;AAFN,AAEY,AAACkF,AAAI,AAAA,AAACuK,AAAWJ;AAAZ,AAAe,AAACG,AAASxP;;;AAAtCqP,AAAErP;;;AAAFqP;;AAAAA,AAAErP;;;;;;;;AACN,AAAKqP,AAAErP;AAAP,AACE,AAACkF,AAAI,AAACgE,AAAKmG,AAAE,AAACK,AAAQ1P;;;AAOtC,AAAA,AAAM4P,AAAajW;AAAnB,AACE,AAAMA,AAAM,AAAI,AAASA,AAAO,AAACkW,AAAgBlW,AAAOA;AAAxD,AACE,AAACmW,AAASC,AAAOpW;;AAErB,AAAA,AAAMqW,AAAWC;AAAjB,AACE,AAAMC,AAAU,AAACC,AAAyBF,AAC7B,AAAA,AAACpH;AADd,AAEE,AAAAnJ,AAAA,AAAA,AAAA,AAAA,AAAW,AAACsI,AAAOkI,AAAK,AAAChI;;AAE7B,AAAA;AAAA;;;AAAA,AAAawI;;AAAb,AAAA,AACGJ,AAASL,AAAQU;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYV,AAAAA;AADZ,AACYA,AAAAA,AAAQU;;AADpB,AAAAP,AAAA,AAAA,AAAA,AAAA,AACYH,AAAAA;AADZI,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYJ,AAAAA,AAAQU,AAAAA;;AADpB,AAAAH,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYP,AAAAA,AAAQU,AAAAA;;AADpB,AAAA,AAAAF,AAAA,AACYR;;;;;;AADZ,AAGA,AAAA,AAAA,AAAA,AAAA,AAAAxL,AACEmM;;AADF,AAAA,AAAA,AACEA,AACA,AAAU5G,AAAEA;AAAZ,AAAA,AAAA,AAAUA;AAAV,AACE,AAAC6G;;;AAHL,AAAA,AAAA,AAAA,AAAApM,AAKEqM;;AALF,AAAA,AAAA,AAKEA,AACA,AAAUb,AAAQU;AAAlB,AAAA,AAAA,AAAUV;AAAV,AACE,AAAAvQ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAY,AAAA,AAAA,AAAA,AAACqR,AAAOd,AAAiC,AAAA,AAACe,AAAYL;;;AAPtE,AAAA,AAAA,AAAA,AAAAlM,AASEwM;;AATF,AAAA,AAAA,AASEA,AACA,AAAUhB,AAAQjQ;AAAlB,AAAA,AAAA,AAAUiQ;AAAV,AACE,AACE,AAAK,AAACiB,AAAYlR;AAChB,AAAA,AAAAmF,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA4BpF,AAAuB,AAACmR,AAAUlB,AACxBjQ,AAAe,AAACmR,AAAUlB;;AAHpE,AAIE,AAACmB,AAAOpR;AACN,AAACgQ,AAAUC;;AALf,AAQM,AAAA,AAAAoB,AAACxI,AACD,AAAChC,AAAOtC;AADR,AAAM,AAAA8M,AAACf,AAAQ,AAAUL;AADtBjQ;;;;;;AAlBb,AAAA,AAAA,AAAA,AAAAyE,AAsBE6M;;AAtBF,AAAA,AAAA,AAsBEA,AACA,AAAUrB,AAAQjQ;AAAlB,AAAA,AAAA,AAAUiQ;AAAV,AACE,AACE,AAAK,AAACiB,AAAYlR;AAChB,AAAA,AAAAmF,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA4BpF,AAAkB,AAACmR,AAAUlB,AACnBjQ,AAAe,AAACmR,AAAUlB;;AAHpE,AAIE,AAAG,AAACxU,AAAMuE,AAAM,AAACvE,AAAM,AAAWwU;AAChC,AAAA,AAAA9K,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA8CpF,AAAuB,AAACmR,AAAUlB,AAC1CjQ,AAAe,AAACmR,AAAUlB;;AANpE,AAQI,AAACpJ,AAAO2B,AACN,AAAA,AAAA+I,AAAAC,AAACtO;AAAD,AAAM,AAAAqO,AAAAC,AAAClB;AAAe,AAAWL,AAASjQ;;;;;AAEpD,AAAA,AAAAyR,AAAME,AAAYC;AAAlB,AAAA,AAAAF,AAAAD;AAAA,AAAAnX,AAAAoX,AAAA,AAAA,AAA2BzB;AAA3B,AAAA3V,AAAAoX,AAAA,AAAA,AAAmCf;AAAnC,AACE,AACE,AAAK,AAAWG,AAAWb,AACtB,AAAW4B,AAAO,AAAW5B;AAChC,AAAA,AAAC6B,AAAOF,AAAiBG,AAAM,AAAA,AAAA,AAAA,AAAChB,AAAOd,AAA6BU;;AAHxE,AAIE,AAAK,AAAWG,AAAWb,AACtB,AAAW+B,AAAS,AAAW/B;AAClC,AAAA,AAAC7S,AAAMwU,AAAe,AAAChC,AAAYe;;AANvC,AAQI,AAAA,AAACsB,AAAOL,AAAcM,AAAK,AAAC5B,AAAQL,AAAQU;;;;;AAElD,AAAA,AAAMwB,AAAaP,AAAQQ,AAASC;AAApC,AACE,AAACpY,AAAO0X,AAAWC,AAAQ,AAAC5J,AAAOoK,AAASC;;AAI9C;;;AAAA,AAEEC;AAEF;;;AAAA,AAEEC;AAEF,AAAA,AAAMC,AAAW5T,AAAM6T;AAAvB,AACE,AAAMC,AAAI,AAAC9T,AAAAA,AAAAA,AAAM6T,AAAAA;AAAjB,AACE,AAAI,AAACrW,AAAUkW,AAAeG;AAC5B,AAAKE;AAAL,AACE,AAAMC,AAAI,AAA4BD,AAAMD;AAA5C,AACE,AACE,AAASE;AAASA;;AADpB,AAEE,AAACjQ,AAAYiQ;AAAK,AAACC,AAASN,AAAkBK;;AAFhD,AAGE,AAACE,AAAUF;AAAO,AAACC,AAASN,AAAkBK;;AAHhD,AAIoBA;;;;;;;AACxB,AAAKD;AAAL,AACE,AAA4BA,AAAMD;;;;AAE1C,AAAA,AAAMK,AAAcC;AAApB,AACE,AAAI,AAAA,AAAI,AAACvX,AAAMuX;AACb,AAAC/S,AAAM+S;;AACP,AAAMA,AAAQ,AAACpK,AAASoK;AAAxB,AACE,AAAKL;AAAL,AACE,AAACM,AAAe,AAAA,AAAAC,AAAMF;AAAN,AAAe,AAAAE,AAAAA,AAAAA,AAAGP,AAAAA;;;;;AAG1C,AAAA,AAAMQ,AAAYC,AAAOvU;AAAzB,AACE,AAAOA,AAAWA;AACXwU,AAAW,AAAA,AAACvL;;AADnB,AAEE,AAAA0B,AAAgB,AAACvJ,AAAMpB;AAAvB,AAAA,AAAA,AAAA2K,AAAA;AAIE,AAACxC,AAAYqM;;AAJf,AAAA7J,AAAUmJ;AAAV,AACE,AAAMW,AAAI,AAACF,AAAAA,AAAAA,AAAOT,AAAAA;AAAlB,AACE,AAAO,AAACjR,AAAK7C;AACN,AAAC0U,AAAOF,AAAWC,AAAI,AAAC/D,AAAK,AAAA,AAAA,AAAC3V,AAAIyZ,AAAWC,AAASX;;;;;;;;AAGrE,AAAA,AAAMa,AAAW9K,AAAKC;AAAtB,AACE,AAAM8K,AAAc,AAAA,AAAS/K;AACvBgL,AAAc,AAAA,AAAS/K;AACvBxI,AAAc,AAAA,AAAQuI;AACtBtI,AAAc,AAAA,AAAQuI;AACtBgL,AAAc,AAACzO,AAAI,AAAChF,AAAe,AAAA,AAAQwI,AAAM,AAAA,AAAQC;AACzDiL,AAAc,AAAA,AAAAC,AAAChL;AAAD,AAAM,AAAAgL,AAACrB,AAAUrS;AAAUwT;AACzCG,AAAc,AAAA,AAAAC,AAAClL;AAAD,AAAM,AAAAkL,AAACvB,AAAUpS;AAAUuT;AACzCK,AAAc,AAACzT,AAAKJ;AACpB8T,AAAc,AAAC/O,AAAI,AAACgP,AAAe,AAAC5T,AAAI,AAACC,AAAKH,AAAS,AAACE,AAAI,AAACC,AAAKJ;AAClEgU,AAAc,AAACvL,AAAS,AAACC,AAAI1I,AAAO6T;AACpCI,AAAc,AAACxL,AAAS,AAACC,AAAIzI,AAAO6T;AACpCI,AAAc,AAACtB,AAAaa;AAC5BU,AAAc,AAACnB,AAAWkB,AAAQZ;AAClCc,AAAc,AAACxB,AAAae;AAC5BU,AACgB,AAACva,AAAO,AAAKgN,AAAIwN,AAQjB,AAACzN;AARO,AACE,AAAMsM,AAAI,AAACiB,AAAAA,AAAAA,AAAQE,AAAAA;AAAnB,AACE,AAAAjL,AAAkB,AAAC5E,AAAI0P,AAAKhB;AAA5B,AAAA,AAAA,AAAA9J,AAAA;AAIEvC;;AAJF,AAAAuC,AAAUiK;AAAV,AACE,AAACxZ,AAAO,AAAKgN,AAAIyN;AAAT,AACE,AAAC7M,AAAMZ,AAAI,AAACrD,AAAY8Q,AAAOP,AAAWM,AAAOL;AACnDnN,AAAIwM;;AAExB,AAAA,AAAC3L,AAAc4L;AAtBvC,AAwBE,AAAAhU,AAAA,AAAA,AAAA,AAAW,AAACsI,AAAO,AAAClN,AAAOkZ,AAAYC,AAAa,AAAC/L,AAC1CsM;;AAEf,AAAA,AAAMG,AAAc9S,AAAEC;AAAtB,AACE,AAAA8S,AAAyC/S;AAAzC+S,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnQ,AAAA,AAAAmQ,AAAA,AAAA,AAAA,AAAA,AAAAlQ,AAAAC,AAAAiQ,AAAAA;AAAA,AAAAhQ,AAAAgQ,AAAA,AAAO9P;AAAP,AAAAF,AAAAgQ,AAAA,AAAuB7P;AAAvB8P,AACyC/S;AADzC+S,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApQ,AAAA,AAAAoQ,AAAA,AAAA,AAAA,AAAA,AAAAnQ,AAAAC,AAAAkQ,AAAAA;AAAA,AAAAjQ,AAAAiQ,AAAA,AACO7P;AADP,AAAAJ,AAAAiQ,AAAA,AACuB5P;AACjBrG,AAAU,AAACsB,AAAe4E,AAAQE;AAClC8P,AAAU,AAAA,AAAAC,AAAClM;AAAD,AAAM,AAAAkM,AAACvC,AAAUxN;AAAWpG;AACtCoW,AAAU,AAACjC,AAAa+B;AACxBR,AAAU,AAACnB,AAAW6B,AAAS/P;AAC/BgQ,AAAU,AAAA,AAAAC,AAACrM;AAAD,AAAM,AAAAqM,AAAC1C,AAAU1N;AAAWlG;AACtCuW,AAAU,AAACpC,AAAakC;AAP9B,AAQE,AAAA,AAAC7X,AAAMyE,AACG,AAAA,AAAAuT,AAACC;AAAD,AAAU,AAAM,AAAAC,AAAM,AAAAF,AAAAA,AAACD,AAAAA,AAAAA;AAAP,AAAA,AAAAG,AAAAA,AAAChB,AAAAA,AAAAA;AAAP;AAA2BvP;;AAEnD,AAAA,AAAMwQ,AAAmBlM,AAAG5G;AAA5B,AAEE,AAAM+S,AAAe,AAAA,AAAAC,AAACC;AAAD,AAAO,AAAI,AAAAD,AAAA7S;AAAJ;;AAAA6S;;AAAuBhT;AAC7CkT,AAAe,AAACjM,AAAWL,AAAGmM;AAC9BI,AACoB,AAACC,AAAO,AAAAC,AACR,AAAA,AAACvZ;AADO,AAAA,AAAAwZ,AAAAD;AAAA,AAAAxb,AAAAyb,AAAA,AAAA,AAAMC;AAAN,AAAA1b,AAAAyb,AAAA,AAAA,AAAQ/L;AAAR,AAAY,AAACvG,AAAUuS;AAD/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAC9S,AAAIlB,AAAOS;AAFtC,AAKE,AAAA/C,AAAA,AAAA,AAAA,AAAWkW,AAAWD;;AAE1B,AAAA,AAAMM,AAAkBxT,AAAQkQ;AAAhC,AACE,AAAOA,AAAQA;AACRlQ,AAAQA;;AADf,AAEE,AAAI,AAAAyT,AAAKvD;AAAL,AAAA,AAAAuD;AAAWzT;;AAAXyT;;;AACF,AAAMC,AAAE,AAAClW,AAAM0S;AACTyD,AAAE,AAACnW,AAAMwC;AADf,AAEE,AAAI,AAAI,AAAAG,AAASwT,AAAG,AAACna,AAAEka,AAAEC;AACvB,AAAO,AAAC1U,AAAKiR;AAAO,AAACjR,AAAKe;;;;;AAD5B;;;AAHJ;;;;;AAQJ,AAAA,AAAM4T,AAAqBrW,AAAKyC;AAAhC,AACE,AAAM6T,AAAW,AAAA,AAAAC,AAACV;AAAD,AAAS,AAAAU,AAACN,AAAiBxT;AAAWzC;AACjDwW,AACgB,AAACX,AAAO,AAAAY,AACR,AAAA,AAACla;AADO,AAAA,AAAAma,AAAAD;AAAA,AAAAnc,AAAAoc,AAAA,AAAA,AAAMV;AAAN,AAAA1b,AAAAoc,AAAA,AAAA,AAAQ1M;AAAR,AAAY,AAACvG,AAAUuS;AAD/B,AAAC9S,AAAIlB,AAAOS,AAAQ,AAACyF;AAD3C,AAIE,AAAAxI,AAAA,AAAA,AAAA,AAAW8W,AAAU,AAACd,AAAK9M,AAAS0N;;AAExC,AAAA,AAAMK,AAA0BC;AAAhC,AACE,AAAI,AAACtT,AAAQ,AAACrD,AAAM2W;AAClBA;;AACA,AAAA,AAAA,AAAA,AAAC9b,AAAY8b;;;AAEjB,AAAA,AAAMC,AAAgBC,AAAOrU;AAA7B,AACE,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAgC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAsS,AAAA,AAAA,AAAAA,AAAYC,AAAAA,AAAWF,AAAAA,AAAAA,AAAAA,AAAAA;AACrB,AAACvB,AAAkBuB,AAAOrU;;AAF9B,AAII,AAAC4T,AAAoBS,AAAOrU;;;;AAElC,AAAA,AAAMwU,AAAexd,AAAKyd;AAA1B,AACE,AAAOzd,AAAQA;AACRyd,AAAQA;AADf,AAEOjQ;;AAFP,AAGE,AAAAuC,AAAc,AAACvJ,AAAMxG;AAArB,AAAA,AAAA,AAAA+P,AAAA;AAIE,AAAC+F,AAAKtI,AAAIiQ;;AAJZ,AAAA1N,AAAU2N;AAAV,AACE,AAAI,AAAC3a,AAAU,AAAC0D,AAAe,AAAA,AAAQgX,AAAS,AAAA,AAAQC;AACtD,AAAO,AAACzV,AAAKjI;AAAM,AAAC+Z,AAAU2D,AAAID;AAASjQ;;;;;;AAC3C,AAAO,AAACvF,AAAKjI;AAAMyd;AAAQ,AAAC3H,AAAKtI,AAAIkQ;;;;;;;;;;AAG7C,AAAA,AAAOC,AAAexF,AAAQrO;AAA9B,AACE,AAAA,AAAA8T,AAACC;AAAD,AAAO,AAAM,AAAClb,AAAU,AAAA,AAAAib,AAAW9T;AAA5B,AAAA8T;;AAAA;;AAAoC,AAAA,AAAOzF;;AAEpD,AAAA,AAAO2F,AAAqB3F,AAAQrO;AAApC,AACE,AAAA0G,AAAgB,AAACmN,AAAcxF,AAAQrO;AAAvC,AAAA,AAAA,AAAA0G,AAAA;AAAA;;AAAA,AAAAA,AAAYkN;AAAZ,AACE,AAAAlN,AAAkB,AAAChK,AAAM,AAAA,AAASkX;AAAlC,AAAA,AAAA,AAAAlN,AAAA;AAAA;;AAAA,AAAAA,AAAY0I;AAAZ,AACE,AAA4BA,AAAM,AAAA6E,AAAC,AAAA,AAAQL;AAAT,AAAA,AAAAK,AAAAA,AAAAA,AAAcjU,AAAAA;;;;;AAEtD,AAAA,AAAOkU,AAAqBN,AAAIvY;AAAhC,AACE,AAAA,AAAA8Y,AAACJ;AAAD,AAAO,AAAAI,AAACtb,AAAU,AAAA,AAAQ+a;AAAQvY;;AAEpC,AAAA,AAAO+Y,AAAmB/F,AAAQhT;AAAlC,AACE,AAAMnF,AAAW,AAAA,AAAAme,AAAC/B;AAAD,AAAS,AAAA+B,AAACH,AAAsB7Y;AAAO,AAAA,AAAOgT;AACzDiG,AAAW,AAAChR,AAAO2B,AAAS/O;AADlC,AAAA,AAEG,AAAA,AAAA,AAAAqe,AAACC,AAAOnG;AAAR,AAAuB,AAAAkG,AAACE,AAAO,AAAC1X,AAAI7G;AAAUoe;;AAEnD,AAAA,AAAMI,AAAUrG,AAAQuF,AAAIe,AAAE3N;AAA9B,AACE,AAAM7Q,AAAY,AAAA,AAAUkY;AACtBhT,AAAY,AAAA,AAAQuY;AACpBgB,AAAY,AAAC1c,AAAM8O;AACnB6N,AAAY,AAAChU,AAAc+T;AAC3BE,AAAY,AAACjU,AAAc+T;AAJjC,AAKE,AAAA9T,AAAY8T;AAAZ,AAAA,AAAA,AAAU7T;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAMgU,AAAI,AAAC9J,AAAIjE,AAAKjG;AAApB,AACE,AAAI,AAAA1B,AAAS0V;AACX,AAAA9O,AAAiB,AAAC5E,AAAIlL,AAAQ4e;AAA9B,AAAA,AAAA,AAAA9O,AAAA;AAEE,AAAS6O,AAAY/T,AAAE,AAACM,AAAIhG,AAAM0Z;;AAFpC,AAAA9O,AAAUsN;AAAV,AACE,AAASsB,AAAY9T,AAAEwS;;;AAEzB,AAASsB,AAAY9T,AAAEgU;;;AAN7B,AAAA,AAAA,AAAUhU;;;;AAAV;;;;AASA,AACa,AAAY4T,AAAElW;AACzB,AAAK2Q;AAAL,AAEE,AAAMpI,AAAK,AAACgO,AAAUH;AAAtB,AACE,AAAA/T,AAAY8T;AAAZ,AAAA,AAAA,AAAU7T;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAA2F,AAAsB,AAAMoO,AAAY/T;AAAxC,AAAA,AAAA,AAAA2F,AAAA;AAAA;AAAA,AAAAA,AAAYuO;AAAZ,AACE,AAAMC,AAAE,AAA4B9F,AAAM6F;AAA1C,AACE,AAASjO,AAAKjG,AAAEmU;;;AAHtB,AAAA,AAAA,AAAUnU;;;;AAAV;;;;AAIA,AAACI,AAAMwT,AAAE3N;;;AACb,AAAKoI;AAAL,AAEE,AAAAtO,AAAY8T;AAAZ,AAAA,AAAA,AAAU7T;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAA2F,AAAsB,AAAMoO,AAAY/T;AAAxC,AAAA,AAAA,AAAA2F,AAAA;AAAA;AAAA,AAAAA,AAAYuO;AAAZ,AACE,AAAMC,AAAE,AAA4B9F,AAAM6F;AAA1C,AACE,AAASJ,AAAY9T,AAAEmU;;;AAH7B,AAAA,AAAA,AAAUnU;;;;AAAV;;;;AAIA,AAACI,AAAMwT,AAAEE;;;;AAEjB,AAAA,AAAOM,AAAanV;AAApB,AAAA;;AAKA,AAAA,AAAMoV,AAAgB/G,AAAQgF;AAA9B,AACE,AAAAgC,AAAmBhC;AAAnBiC,AAAA,AAAAve,AAAAse,AAAA,AAAA;AAAAE,AAAA,AAAAxb,AAAAub;AAAAE,AAAA,AAAA9Y,AAAA6Y;AAAAA,AAAA,AAAApX,AAAAoX;AAAAC,AAAQb;AAARY,AAAYvO;AACN0O,AAAa,AAAAC,AAAI,AAACtU,AAAI+F,AAAUuN;AAAnB,AAAA,AAAAgB;AAAAA;;AAAA,AAAAA,AACI,AAAC3B,AAAoB3F,AAAQsG;AADjC,AAAA,AAAAgB;AAAAA;;AAAA,AAAAA,AAEI,AAACR,AAAYR;AAFjB,AAAA,AAAAgB;AAAAA;;AAGI,AAAM,AAAA,AAAM,AAAC9B,AAAcxF,AAAQsG;AAAnC,AACE,AAAA,AAAA/S,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA6B8S,AAAStB,AACHA,AAAasB;;AAFlD;;;;;;AAJvBc,AAO2B,AAACrB,AAAkB/F,AAAQ,AAACiE,AAAOsD,AAAQ5O;AAPtE,AAAAjQ,AAAA0e,AAAA,AAAA,AAOOpH;AAPP,AAAAtX,AAAA0e,AAAA,AAAA,AAOenB;AACTX,AAAa,AAAI+B,AACF,AAAMG,AAAW,AAACnB,AAASrG,AAAQiG,AAAWoB,AAAK1O;AAAnD,AACE,AAAA,AAAA,AAAA8O,AAACtB,AAAOF;AAAR,AAA4B,AAAAwB,AAACxD,AAAOuD;;AACtC,AAAA,AAAA,AAAChc,AAAMya;AAX5B,AAYE,AAAA,AAAC5F,AAAOL,AAAcM,AAAKgF;;AAE/B,AAAA,AAAMoC,AAAY1H,AAAQgF;AAA1B,AACE,AAAA2C,AAAuB3C;AAAvB4C,AAAA,AAAAlf,AAAAif,AAAA,AAAA;AAAAE,AAAA,AAAAnc,AAAAkc;AAAAE,AAAA,AAAAzZ,AAAAwZ;AAAAA,AAAA,AAAA/X,AAAA+X;AAAAC,AAAQxB;AAARuB,AAAYlP;AAAZ,AAAAjQ,AAAAif,AAAA,AAAA,AAAkBK;AACZ3J,AAAS,AAAC4J,AAAiBD;AAC3BE,AAAS,AAAAZ,AAAI,AAACtU,AAAI+F,AAAUuN;AAAnB,AAAA,AAAAgB;AAAAA;;AAAA,AAAAA,AACI,AAAC3B,AAAoB3F,AAAQsG;AADjC,AAAA,AAAAgB;AAAAA;;AAAA,AAAAA,AAEI,AAACR,AAAYR;AAFjB,AAAA,AAAAgB;AAAAA;;AAGI,AAAM,AAAA,AAAM,AAAC9B,AAAcxF,AAAQsG;AAAnC,AACE,AAAA,AAAA/S,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA4B8S,AAAStB,AACFA,AAAasB;;AAFlD;;;;;;AALnByB,AAQ2B,AAAChC,AAAkB/F,AAAQ,AAACiE,AAAOsD,AAAQ5O;AARtE,AAAAjQ,AAAAqf,AAAA,AAAA,AAQO/H;AARP,AAAAtX,AAAAqf,AAAA,AAAA,AAQe9B;AACTX,AAAS,AAAI4C,AACF,AAAMC,AAAS,AAAC9B,AAASrG,AAAQiG,AAAWiC,AAAIvP;AAC3C9Q,AAAS,AAAA+L,AAAA,AAAAwU;AAAA,AAAA,AAAAtU,AAAA,AAAA;AAAA,AAAA,AAAAsU,AAAAA;;AAAA,AAAA,AAAArU,AAAA,AAAArI,AAAA0c;AAAA,AAAA,AAAArU;AAAA,AAAA,AAAAqU,AAAArU;AAAA,AAAA,AAAA,AAAAC,AAAAoU;AAAA,AAAAnU,AAi5DkB,AAAA6B,AAAAsS;AAj5DlBlU,AAAA,AAAArK,AAAAoK;AAAAoU,AAAA,AAAAjU,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAoU,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAApU;AAAA,AAAA,AAAAlI,AAAAiI,AAAAqU,AAAMvH;AAAN,AAAA,AACayH,AAAI,AAACL,AAAAA,AAAAA,AAASpH,AAAAA;AAD3B,AAAA,AAEY,AAAK,AAAA,AAAMyH;AAFvB,AAAA,AAAAjU,AAAA8T,AAGE,AAACI,AAAS,AAAA3a,AAAA,AAAA,AAAA,AAAA,AAAW,AAAA,AAAQmY,AAAalF,AAChC,AAACrC,AAAQL,AAAQmK;;AAJ7B,AAAA,AAAAF,AAAA;;;;AAAA,AAAA,AAAAA,AAAA;;;;;AAAA;;;;;AAAA,AAAA9T,AAAA,AAAAC,AAAA4T,AAAA,AAAAE,AAAA,AAAA5T,AAAAyT;;AAAA,AAAA5T,AAAA,AAAAC,AAAA4T,AAAA;;;AAAA,AAAA,AAAAha,AAAA+Z,AAAMrH;AAAN,AAAA,AACayH,AAAI,AAACL,AAAAA,AAAAA,AAASpH,AAAAA;AAD3B,AAAA,AAEY,AAAK,AAAA,AAAMyH;AAFvB,AAAA3T,AAAA,AAAA0T,AAAA,AAAAzT,AAAAsT,AAGE,AAACK,AAAS,AAAA3a,AAAA,AAAA,AAAA,AAAA,AAAW,AAAA,AAAQmY,AAAalF,AAChC,AAACrC,AAAQL,AAAQmK;;AAJ7B,AAAA,AAAA1T,AAAAsT;;;;;;AAAA;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxU,AAAY,AAAA,AAASqS;;AADnC,AAME,AAAI,AAACzG,AAAO3X;AACV,AAAC4gB,AAASxC,AAAW,AAAC7H,AAAUC;;AAChC,AAACpJ,AAAOtC,AAAQ9K;;AACpB,AAAC4gB,AAAS,AAAA,AAAA,AAACjd,AAAMya,AAAuB,AAAC7H,AAAUC;AAnBpE,AAoBE,AAAA,AAACgC,AAAOL,AAAcqF,AAAcC;;AAIxC,AAAA,AAAMoD,AAAO1I,AAAQgF;AAArB,AACE,AAAK,AAACjU,AAAYiU,AACb,AAACxa,AAAU,AAAA,AAAQwV,AACR,AAAI,AAACtO,AAAQ,AAACrD,AAAM2W,AAClB,AAAC2D,AAAO3D,AACR,AAAC3W,AAAM2W;;AAE3B,AAAK4D,AAAW,AAAA,AAACC;AAEjB,AAAA,AAAMC,AAAa9D,AAAOhF,AAAQ+I;AAAlC,AACE,AAAAC,AAAyBhE;AAAzBiE,AAAA,AAAAvd,AAAAsd;AAAAE,AAAA,AAAA7a,AAAA4a;AAAAA,AAAA,AAAAnZ,AAAAmZ;AAAAC,AAAOC;AAAPF,AAAcG;AACRC,AAAmB,AAACC,AAAMV,AAAW/O;AACrC0P,AAAmB,AAACvW,AAAI,AAAA,AAAQgN,AAASmJ;AAF/C,AAGE,AAAAvV,AAAA,AAAA4V;AAAA,AAAA,AAAA1V,AAAA,AAAA;AAAA,AAAA,AAAA0V,AAAAA;;AAAA,AAAA,AAAAzV,AAAA,AAAArI,AAAA8d;AAAA,AAAA,AAAAzV;AAAA,AAAA,AAAAyV,AAAAzV;AAAA,AAAA,AAAA,AAAAC,AAAAwV;AAAA,AAAAvV,AAu3D+C,AAAA6B,AAAA0T;AAv3D/CtV,AAAA,AAAArK,AAAAoK;AAAAwV,AAAA,AAAArV,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAwV,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAxV;AAAA,AAAA,AAAAlI,AAAAiI,AAAAyV,AAAMc;AAAN,AAAA,AAAAb,AACwCa;AADxCZ,AAAA,AAAAle,AAAAie;AAAAE,AAAA,AAAAxb,AAAAub;AAAAA,AAAA,AAAA9Z,AAAA8Z;AAAAE,AAAAD;AAAAE,AAAA,AAAAre,AAAAoe;AAAAE,AAAA,AAAA3b,AAAA0b;AAAAA,AAAA,AAAAja,AAAAia;AAAAC,AACc5R;AADd2R,AACkBU;AADlBb,AAC+Bc;AACnBC,AAAa,AAACvU,AAAOqU,AAAUrB;AAF3C,AAAA,AAAA,AAAA7U,AAAAkV,AAGE,AAAA,AAACoB;AAADD;AAAA,AACE,AAAI,AAAAA,AAAC/Y;AACH,AAAAiZ,AACE,AAAAF,AAAAA,AAACD,AAAAA,AAAAA;AADH,AAAA,AAAA,AAAAG,AAAA;AAEE,AAACC,AAAO,AAAA,AAAK,AAAAH,AAAChZ,AAAmByX;;AAFnCyB;;;AADFF;;;AAKAF;;AATJ,AAAA,AAAAhB,AAAA;;;;AAAA;;;;;AAAA,AAAAlV,AAAA,AAAAC,AAAAgV,AAAA,AAAAQ,AAAA,AAAAtV,AAAA6U;;AAAA,AAAAhV,AAAA,AAAAC,AAAAgV,AAAA;;;AAAA,AAAA,AAAApb,AAAAmb,AAAMgB;AAAN,AAAA,AAAAN,AACwCM;AADxCL,AAAA,AAAAze,AAAAwe;AAAAE,AAAA,AAAA/b,AAAA8b;AAAAA,AAAA,AAAAra,AAAAqa;AAAAE,AAAAD;AAAAE,AAAA,AAAA5e,AAAA2e;AAAAE,AAAA,AAAAlc,AAAAic;AAAAA,AAAA,AAAAxa,AAAAwa;AAAAC,AACcnS;AADdkS,AACkBG;AADlBN,AAC+BO;AACnBC,AAAa,AAACvU,AAAOqU,AAAUrB;AAF3C,AAAA,AAAAvU,AAGE,AAAA,AAACgW;AAADD;AAAA,AACE,AAAI,AAAAA,AAAC/Y;AACH,AAAAiZ,AACE,AAAAF,AAAAA,AAACD,AAAAA,AAAAA;AADH,AAAA,AAAA,AAAAG,AAAA;AAEE,AAACC,AAAO,AAAA,AAAK,AAAAH,AAAChZ,AAAmByX;;AAFnCyB;;;AADFF;;;AAJJ,AAAAX,AAAA,AAAAnV,AAAA0U,AASIkB;;;AATJ;;;;AAAA,AAAA;;AAAA,AAAA,AAAA9W,AAAa2V;;AAWjB,AAAA,AAAMyB,AAAc3b,AAAG4b;AAAvB,AACE,AAAMC,AACW,AAAC9E,AAAO,AAAA+E;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAziB,AAAA0iB,AAAA,AAAA,AAAMjO;AAAN,AAAAzU,AAAA0iB,AAAA,AAAA,AAAQC;AAAR,AAAY,AAAChhB,AAAE8S,AAAEkO;AADzB,AAAC/Z,AAAIlB,AAAOf,AAAG4b;AAAhC,AAAA,AAEG,AAAChU,AAAI5I,AAAM6c,AACX,AAACjU,AAAI0R,AAAOuC;;AAEjB,AAAA,AAAMI,AAAiBC,AAAYxC;AAAnC,AACE,AAAAyC,AAAyBD;AAAzBE,AAAA,AAAA/f,AAAA8f;AAAAE,AAAA,AAAArd,AAAAod;AAAAA,AAAA,AAAA3b,AAAA2b;AAAAC,AAAOvC;AAAPsC,AAAcrC;AACRuC,AAAmB,AAAC3Y,AAAI+V,AAAUI;AADxC,AAEE,AAAAvV,AAAA,AAAAgY;AAAA,AAAA,AAAA9X,AAAA,AAAA;AAAA,AAAA,AAAA8X,AAAAA;;AAAA,AAAA,AAAA7X,AAAA,AAAArI,AAAAkgB;AAAA,AAAA,AAAA7X;AAAA,AAAA,AAAA6X,AAAA7X;AAAA,AAAA,AAAA,AAAAC,AAAA4X;AAAA,AAAA3X,AAm2D+C,AAAA6B,AAAA8V;AAn2D/C1X,AAAA,AAAArK,AAAAoK;AAAA4X,AAAA,AAAAzX,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA4X,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA5X;AAAA,AAAA,AAAAlI,AAAAiI,AAAA6X,AAAMI;AAAN,AAAA,AAAAH,AACkC,AAACf,AAAa5B,AAAU8C;AAD1D,AAAAxjB,AAAAqjB,AAAA,AAAA,AACa3C;AADb,AAAA1gB,AAAAqjB,AAAA,AAAA,AACuBG;AADvB,AAAA,AAAA,AAAA3X,AAAAsX,AAAA,AAEG,AAAA,AAAA,AAAA,AAACM,AAAmB/C,AAAU8C;;AAFjC,AAAA,AAAAJ,AAAA;;;;AAAA;;;;;AAAA,AAAAtX,AAAA,AAAAC,AAAAoX,AAAA,AAAAG,AAAA,AAAArX,AAAAiX;;AAAA,AAAApX,AAAA,AAAAC,AAAAoX,AAAA;;;AAAA,AAAA,AAAAxd,AAAAud,AAAMM;AAAN,AAAA,AAAAD,AACkC,AAACjB,AAAa5B,AAAU8C;AAD1D,AAAAxjB,AAAAujB,AAAA,AAAA,AACa7C;AADb,AAAA1gB,AAAAujB,AAAA,AAAA,AACuBC;AADvB,AAAA,AAAArX,AAAA,AAAA,AAAAmX,AAAA,AAAAlX,AAAA8W,AAEG,AAAA,AAAA,AAAA,AAACO,AAAmB/C,AAAU8C;;;AAFjC;;;;AAAA,AAAA;;AAAA,AAAA,AAAAtY,AAAgB+X;;AAIpB,AAAA,AAAMS,AAActb,AAAKuW;AAAzB,AACE,AAAM9U,AAAI,AAAA,AAACsW;AAAX,AACE,AAAA,AAAAyD,AAACzB;AAAD,AAAgB,AAAI,AAAM,AAAAyB,AAAAA,AAACjF,AAAAA,AAAAA;AAAP,AAAe,AAAAiF,AAACC,AAAMha,AAAI+N;;AAA1B;;AAAJgM;AAA0Cxb;;AAD5D,AAAAub,AAEG9Z;;AAEL,AAAA,AAAMia,AAAcxH;AAApB,AACE,AAACtW,AAAI,AAAC0d,AAAapH,AAAOnT;;AAE5B,AAAA,AAAM4a,AAAc/B,AAAQgC;AAA5B,AACE,AAAMC,AAAW,AAACH,AAAa9B;AACzBrD,AAAW,AAAAuF;AAAA,AAAA,AAAAC,AAAAD;AAAAE,AAAA,AAAApkB,AAAAmkB,AAAA,AAAA;AAAAE,AAAA,AAAArhB,AAAAohB;AAAAE,AAAA,AAAA3e,AAAA0e;AAAAA,AAAA,AAAAjd,AAAAid;AAAAC,AAAO5U;AAAP2U,AAAWzO;AAAX,AAAmB,AAAC5N,AAAOic,AAAWrO;;AADvD,AAAA,AAEG,AAAC2F,AAAOoD,AAAKqF,AACb,AAACtG,AAAOiB,AAAKqF;;AAElB,AAAA,AAAMO,AAAYjN,AAAQgF;AAA1B,AACE,AAAMkI,AAAgB,AAACjJ,AAAOpS,AAAUmT;AAClCmI,AAAgB,AAAC/W,AAAO8W,AAAY,AAAC5W;AAErC8W,AAAgB,AAAKC,AAAe3C;AAApB,AACE,AAACriB,AAAOilB,AAAgBD,AAAe3C;;AACzD6C,AAAgB,AAAKvN;AAAL,AACE,AAAA,AAAAwN,AAAC9H;AAAD,AAAO,AAAClG,AAAO,AAAA,AAAAgO;AAAa,AAAA,AAAOxN;;AAN3D,AAOE,AAAOyN,AAAM,AAAArhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACuB4T,AACCgF;AAG9BO,AAAM,AAAAzX,AAAA,AAAA,AAAA,AAAA,AAAWqf;;AALxB,AAME,AAAAvV,AAAgB,AAACvJ,AAAMof;AAAvB,AAAA,AAAA,AAAA7V,AAAA;AAwCE2N;;AAxCF,AAAA3N,AAAU8V;AAAV,AACE,AAAAC,AAA6C,AAAA,AAACM;AAADD;AAAA,AAAa,AAAK,AAAAA,AAACtF,AAAM1I;;AAAY,AAAA,AAAU0N;AAA5F,AAAAhlB,AAAAilB,AAAA,AAAA,AAAOjD;AAAPkD,AAAA,AAAAllB,AAAAilB,AAAA,AAAA;AAAAE,AAAA,AAAAniB,AAAAkiB;AAAAE,AAAA,AAAAzf,AAAAwf;AAAAA,AAAA,AAAA/d,AAAA+d;AAAAC,AAAgBvC;AAAhBsC,AAA8BE;AAA9B,AACE,AAAI,AAAA,AAAMxC;AAGR,AAAMvL,AAAQ,AAACoN,AAAM,AAAA,AAAiBM,AAAOhD;AACvCzd,AAAQ,AAACihB,AAAAA,AAAAA,AAASlO,AAAAA,AAAQkN,AAAAA;AAC1B5H,AAAQ,AAAAxX,AAAA,AAAA,AAAA,AAAWqf,AAAgBlgB;AAFzC,AAGE,AAAO,AAAC6C,AAAK2d;AAAO,AAAC9a,AAAQ4S,AAAID;;;;;AAGnC,AAAA6I,AAA6B5C;AAA7B6C,AAAA,AAAA1iB,AAAAyiB;AAAAE,AAAA,AAAAhgB,AAAA+f;AAAAA,AAAA,AAAAte,AAAAse;AAAAC,AAAOlF;AAAPiF,AAAchF;AACRsD,AAAuB,AAACpB,AAAgBC,AAAY,AAAA,AAAYmC;AADtEY,AAE6B,AAAC7B,AAAa,AAACvjB,AAAO,AAAA,AAAiBwkB,AAAOhD,AAChC,AAACxhB,AAAOwjB,AAAO,AAAA,AAAiBgB;AAH3E,AAAAhlB,AAAA4lB,AAAA,AAAA,AAEOC;AAFP,AAAA7lB,AAAA4lB,AAAA,AAAA,AAEiBE;AAFjB,AAIE,AAAI,AAAA,AAAC9I;AAAD+I;AAAA,AAAO,AAAAA,AAAA,AAAA,AAACpkB;;AAAmBkkB;AAG7B,AAAO,AAACze,AAAK2d;AAAOlI;;;;;AAEpB,AAAMmJ,AAAe,AAACxlB,AAAOwhB,AAAQ6D;AAC/BlB,AAAe,AAACD,AAAM,AAAA,AAAiBM,AAAOgB;AADpD,AAEE,AAAI,AAACnB,AAAYF;AAGf,AAAO,AAACvd,AAAK2d;AAAOlI;;;;;AAGpB,AAAMwD,AAAW,AAACvd,AAAM,AAAA,AAAYkiB,AAAOvE,AACxB,AAACxL,AAAK,AAAA,AAAC3V,AAAI,AAAA,AAAY0lB,AAAOvE,AAASC;AACpDG,AAAW,AAACT,AAAYyC,AAAYvL,AAAQ+I;AAFlD,AAGE,AAAO,AAAC7f,AACC,AAAA0K,AAAA;AAAA+a;AAAA,AAAA,AAAA7a,AAAA,AAAA;;AAAA,AAAA,AAAA6a,AAAAA;;AAAA,AAAA,AAAA5a,AAAA,AAAArI,AAAAijB;AAAA,AAAA,AAAA5a;AAAA,AAAA,AAAA4a,AAAA5a;AAAA,AAAA,AAAA,AAAAC,AAAA2a;AAAA,AAAA1a,AAmyDoB,AAAA6B,AAAA6Y;AAnyDpBza,AAAA,AAAArK,AAAAoK;AAAA2a,AAAA,AAAAxa,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA2a,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA3a;AAAA,AAAA,AAAAlI,AAAAiI,AAAA4a,AAAMrE;AAAN,AAAA,AAAA,AAAAjW,AAAAqa,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmBF,AACArB,AACA,AAAC0B,AAAQvE,AAAOuD,AAChBhF,AACAyF;;AALnB,AAAA,AAAAK,AAAA;;;;AAAA;;;;;AAAA,AAAAra,AAAA,AAAAC,AAAAma,AAAA,AAAAE,AAAA,AAAAna,AAAAga;;AAAA,AAAAna,AAAA,AAAAC,AAAAma,AAAA;;;AAAA,AAAA,AAAAvgB,AAAAsgB,AAAMnE;AAAN,AAAA,AAAA3V,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAia,AAAA,AAAAha,AAAA6Z,AACmBD,AACArB,AACA,AAAC0B,AAAQvE,AAAOuD,AAChBhF,AACAyF;;;AALnB;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA5a,AAAa2V;AAMb,AAACzZ,AAAK2d;AACRlI;;;;;;;;;;;AAG7B,AAAA,AAAMyJ,AAA6B9J,AAAOrU;AAA1C,AACE,AAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAgC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAsS,AAAA,AAAA,AAAAA,AAAY8J,AAAAA,AAAO/J,AAAAA,AAAAA,AAAAA,AAAAA;AACrB,AAAAgK,AAAiBre;AAAjB,AAAAnI,AAAAwmB,AAAA,AAAA,AAAOxX;AAAP,AAAAhP,AAAAwmB,AAAA,AAAA,AAASjf;AAAT,AAAAvH,AAAAwmB,AAAA,AAAA,AAAWrI;AAAX,AAAAne,AAAAwmB,AAAA,AAAA,AAAaC;AAAb,AAEK,AAAI,AAAA7H,AAAI,AAACvV,AAAY2F,AAItB,AAAA,AAAC4X;AAJI,AAAA,AAAAhI;AAAAA;;AAAoB,AAACxV,AAAM4F;;AAAI,AAAC0X,AAAgBlK,AAAOxN,AAAGA,AAC9DzH,AACA,AAAI,AAAAqU,AAAKuC;AAAL,AAAA,AAAAvC;AAAA,AAAO,AAACxS,AAAM7B;AAAd,AAAiB,AAACof,AAAQnK,AAAOjV;AAAG,AAAAqX,AAAI,AAACvV,AAAY8U;AAAjB,AAAA,AAAAS;AAAAA;;AAAoB,AAACxV,AAAM+U;;;AAA/D;;;AAAA;;;AAAAvC;;AAAoE,AAAC8K,AAAgBlK,AAAO2B,AAAGA,AACnG,AAAI,AAAC9U,AAAYod,AAAI,AAACC,AAAgBlK,AAAOiK,AAAIA,AAClD,AAAU,AAACtlB,AAAMgH;;AACrBA;;;AAEJ,AAAA,AAAM0e,AAAsBrK,AAAOrU;AAAnC,AACE,AAAA2e,AAAiB3e;AAAjB,AAAAnI,AAAA8mB,AAAA,AAAA,AAAO9X;AAAP,AAAAhP,AAAA8mB,AAAA,AAAA,AAASvf;AAAT,AAAAvH,AAAA8mB,AAAA,AAAA,AAAW3I;AAAX,AAAAne,AAAA8mB,AAAA,AAAA,AAAaL;AAAb,AACE,AAAAM,AAAA;AAAAA,AAAA,AAAAA,AACE,AAAC5d,AAAU6F,AAAG,AAAA+X,AAAC9R,AAAKjG;AADtB+X,AAAA,AAAAA,AAEE,AAAC5d,AAAUsd,AAAI,AAAAM,AAAC9R,AAAKwR;AAFvB,AAAA,AAGE,AACE,AAACtd,AAAUgV,AACX,AAAK,AAAChV,AAAU5B,AAChB,AAACof,AAAQnK,AAAOjV;AAAI,AAAAwf,AAAC9R,AAAKkJ;;AAN9B4I;;;AAQJ,AAAA,AAAMC,AAAWnK,AAAIjH;AAArB,AACE,AAAAjG,AAAmB,AAACzN,AAAU,AAACglB,AAAY,AAAA,AAAQrK,AAAKjH;AAAxD,AAAA,AAAA,AAAAjG,AAAA;AAAA;;AAAA,AAAAA,AAAYsX;AAAZ,AACE,AAAA,AAACnkB,AAAM+Z,AAAWoK;;;AAEtB,AAAA,AAAME,AAAe7P,AAAQ1B;AAA7B,AACE,AAAA,AAAC9S,AAAMwU,AAEM,AAAA,AAAA8P,AAACC;AAAD,AAAO,AAAAD,AAACJ,AAAYpR;AADpB,AAAA,AAAO0B;;AAGtB,AAAA,AAAMgQ,AAAahQ,AAAQ1B,AAAKxN;AAAhC,AACE,AAAMmf,AAAM,AAAA,AAACtlB,AAAS,AAAA,AAAAulB,AAACC;AAAD,AAAS,AAACxhB,AAAK,AAAA,AAAAuhB;AAAY,AAAA,AAAOlQ;AAAxD,AACE,AAAU,AAACoQ,AAAY9R,AAAK2R;AAA5B;;AAAA,AACE,AAAMI,AAAQ,AAAC/N,AAAe,AAAC5T,AAAI4P,AAAM2R;AAAzC,AACE,AAAA,AAAA1c,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAiC6c,AAAyBvf,AAE3CA,AACAuf;;;AAEvB,AAAA,AAAA,AAAAzhB,AAAM0e;AAAN,AAAA,AAAAgD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAhD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAzW,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMyW,AACFtN,AAAQgF;AADZ,AAEI,AAACuL,AAAgBvQ,AAAQgF,AAAOA;;;AAFpC,AAAA,AAAA,AAAMsI,AAGFtN,AAAQgF,AAAOwL;;AAHnB,AAIG,AAAAC,AAAO7f;AAAP8f,AAAmB1L;AAAnB,AAAA,AAAA,AAAA2L,AAAA,AAAA,AAAA,AAAA,AACIpJ;AADJqJ,AAAAF;AAAA,AAAA,AAAAD,AAAAA,AAAAE,AAAAC,AAAAH,AAAAE,AAAAC;;AAEE,AAAC7J,AAAe/G,AAAQgF;;AAF1B,AAAA,AAAA6L,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIItJ;AAJJuJ,AAAAJ;AAAA,AAAA,AAAAD,AAAAA,AAAAI,AAAAC,AAAAL,AAAAI,AAAAC;;AAKE,AAACpJ,AAAW1H,AAAQgF;;AALtB,AAAA,AAAA+L,AAAA,AAAA,AAAA,AAOGrf;AAPHsf,AAAAN;AAAA,AAAA,AAAAD,AAAAA,AAAAM,AAAAC,AAAAP,AAAAM,AAAAC;;AAQE,AAAAe,AAA0B/M;AAA1BgN,AAAA,AAAAtmB,AAAAqmB;AAAAE,AAAA,AAAA5jB,AAAA2jB;AAAAA,AAAA,AAAAliB,AAAAkiB;AAAAC,AAAOC;AAAPF,AAAoB3hB;AAApB,AACE,AAAA8hB,AAAUxR;AAAVyR,AAA4B,AAACpf,AAAI,AAAA,AAAUgN,AAASkS;AAApD,AAAA,AAAAE,AAAUzR;;AAAV,AAAA,AACE,AAAC4P,AAAgBvQ,AAAQ3P,AAAK2U;AADhC,AAAA,AAAAmN,AAAUxR;;AATd,AAAA,AAAAsQ,AAAA,AAAA;AAAAC,AAAAR;AAAA,AAAA,AAAAD,AAAAA,AAAAQ,AAAAC,AAAAT,AAAAQ,AAAAC;;AAaE,AAAAmB,AAAqBrN;AAArBsN,AAAA,AAAA5mB,AAAA2mB;AAAAE,AAAA,AAAAlkB,AAAAikB;AAAAA,AAAA,AAAAxiB,AAAAwiB;AAAAC,AAAOna;AAAPka,AAAW/I;AACLiJ,AAAS,AAAA,AAACvb;AAADwb;AAAA,AAAM,AAAAA,AAAAA,AAACC,AAAAA,AAAAA,AAAe1S,AAAAA;;AAAWuJ;AAC1C1hB,AAAS,AAAA,AAACoP;AAAD0b;AAAA,AAAM,AAAC1d,AAAO2M,AAAU,AAAA,AAAA+Q;;AAAWH;AAFlD,AAGE,AAAA,AAAA,AAAChnB,AAAM,AAAC6C,AAAMmkB,AAAiB,AAACvd,AAAOtC,AAAQ9K;;AAhBnD,AAAA,AAAAspB,AAAA,AAAA;AAAAC,AAAAV;AAAA,AAAA,AAAAD,AAAAA,AAAAU,AAAAC,AAAAX,AAAAU,AAAAC;;AAmBE,AAAAwB,AAAuC5N;AAAvC6N,AAAA,AAAAnnB,AAAAknB;AAAAE,AAAA,AAAAzkB,AAAAwkB;AAAAA,AAAA,AAAA/iB,AAAA+iB;AAAAC,AAAO1a;AAAP0a,AAAA,AAAAzkB,AAAAwkB;AAAAA,AAAA,AAAA/iB,AAAA+iB;AAAAE,AAAAD;AAAAE,AAAA,AAAAtnB,AAAAqnB;AAAAE,AAAA,AAAA5kB,AAAA2kB;AAAAA,AAAA,AAAAljB,AAAAkjB;AAAAC,AAAUC;AAAVF,AAAqB1U;AAArBuU,AAA6BtJ;AAA7B,AACE,AAACyG,AAAYhQ,AAAQkT,AAAS1C;;AAC9B,AAAOxQ;AAAQ,AAAA,AAAA,AAACmT,AAAe,AAACjqB,AAAOgqB,AAAS5U,AAAMiL;AAAUvE;;;;;;AArBpE,AAAA,AAAAqM,AAAA,AAAA;AAAAC,AAAAZ;AAAA,AAAA,AAAAD,AAAAA,AAAAY,AAAAC,AAAAb,AAAAY,AAAAC;;AAyBE,AAAA8B,AAA0BpO;AAA1BqO,AAAA,AAAA3nB,AAAA0nB;AAAAE,AAAA,AAAAjlB,AAAAglB;AAAAA,AAAA,AAAAvjB,AAAAujB;AAAAC,AAAOlb;AAAPkb,AAAA,AAAAjlB,AAAAglB;AAAAA,AAAA,AAAAvjB,AAAAujB;AAAAC,AAAShV;AAAT+U,AAAgB9J;AACVjL,AAAa,AAAC5P,AAAI4P;AAClBiV,AAAa,AAAC1D,AAAc7P,AAAQ1B;AACpCkU,AAAa,AAAA,AAACvb;AAADuc;AAAA,AAAUD,AAAAA,AAAa,AAAAC,AAAAA,AAACd,AAAAA,AAAAA,AAAkB,AAAC7C,AAAcvR;;AAAOiL;AAC7E1hB,AAAa,AAAA,AAACoP;AAADwc;AAAA,AAAM,AAACxe,AAAO2M,AAAU,AAAA,AAAA6R;;AAAWjB;AAChDkB,AAAa,AAACze,AAAOtC,AAAQ9K;AALnC,AAME,AAAA,AAACwY,AAAOL,AAAcqF,AAAcqO;;AA/BxC,AAAA,AAAAnC,AAAA,AAAA;AAAAC,AAAAd;AAAA,AAAA,AAAAD,AAAAA,AAAAc,AAAAC,AAAAf,AAAAc,AAAAC;;AAkCE,AAAAmC,AAAoB3O;AAApB4O,AAAA,AAAAloB,AAAAioB;AAAAE,AAAA,AAAAxlB,AAAAulB;AAAAA,AAAA,AAAA9jB,AAAA8jB;AAAAC,AAAOzb;AAAPwb,AAAWlJ;AAAX,AACE,AAACriB,AAAOqqB,AAAe1S,AAAQ0K;;AAnCnC,AAAA,AAAA+G,AAAA,AAAA;AAAAC,AAAAhB;AAAA,AAAA,AAAAD,AAAAA,AAAAgB,AAAAC,AAAAjB,AAAAgB,AAAAC;;AAsCE,AAAAoC,AAAoB9O;AAApB+O,AAAA,AAAAroB,AAAAooB;AAAAE,AAAA,AAAA3lB,AAAA0lB;AAAAA,AAAA,AAAAjkB,AAAAikB;AAAAC,AAAO5b;AAAP2b,AAAWrJ;AACLiC,AAAiB,AAACje,AAAI,AAAA,AAACyhB;AAAD8D;AAAA,AAAS,AAACtlB,AAAK,AAAA,AAAAslB;;AAAY,AAAA,AAAOjU;AACxDkU,AAAiB,AAAC1H,AAAa9B;AAC/BtS,AAAiB,AAAA,AAAA,AAAM,AAACoH,AAAO,AAAC/Q,AAAiBke,AAAWuH,AACzC,AAAA,AAAA3gB,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAyC0gB,AAA8B1D,AAE7DA;AAC7B2D,AAAiB,AAAA,AAAA,AAAC3oB,AAAMwU,AAAe,AAAC/K,AAAO2M,AAAU,AAAA,AAAO5B;AAChEoU,AAAiB,AAAC/rB,AAAOqqB,AAAeyB,AAASzJ;AACjD2J,AAAiB,AAACtR,AACC,AAAC5U,AAAO,AAAA,AAAOgmB,AACf,AAAClf,AAAO2M,AAAU,AAAA,AAAOwS;AAXlD,AAYE,AAAA,AAAA,AAAC5oB,AAAM2oB,AAAgBE;;AAlD3B,AAAA,AAAA1C,AAAA,AAAA;AAAAC,AAAAlB;AAAA,AAAA,AAAAD,AAAAA,AAAAkB,AAAAC,AAAAnB,AAAAkB,AAAAC;;AAqDE,AAAA0C,AAAyBtP;AAAzBuP,AAAA,AAAA7oB,AAAA4oB;AAAAE,AAAA,AAAAnmB,AAAAkmB;AAAAA,AAAA,AAAAzkB,AAAAykB;AAAAC,AAAOpc;AAAPoc,AAAA,AAAAnmB,AAAAkmB;AAAAA,AAAA,AAAAzkB,AAAAykB;AAAAC,AAASlW;AAATiW,AAAgB7J;AACVtS,AAAiB,AAAC4X,AAAYhQ,AAAQ1B,AAAKkS;AAC3C2D,AAAiB,AAAA,AAAA,AAAC3oB,AAAMwU,AAAe,AAAC/K,AAAO2M,AAAU,AAAA,AAAO5B;AAChEuT,AAAiB,AAAC1D,AAAcsE,AAAS7V;AACzC8V,AAAqB,AAAC/rB,AAAOqqB,AAAea,AAAa7I,AACpC,AAACmF,AAAcvR;AACpC+V,AAAiB,AAACtR,AACC,AAAC5U,AAAO,AAAA,AAAOgmB,AACf,AAAClf,AAAO2M,AAAU,AAAA,AAAOwS;AARlD,AASE,AAAA,AAAA,AAAC5oB,AAAM2oB,AAAgBE;;AA9D3B,AAAA,AAAAxC,AAAA,AAAA;AAAAC,AAAApB;AAAA,AAAA,AAAAD,AAAAA,AAAAoB,AAAAC,AAAArB,AAAAoB,AAAAC;;AAiEE,AAAM5M,AAASvE;AACT9P,AAAS,AAACme,AAA4B9J,AAAOF;AAC7CyP,AAAS,AAACxP,AAAeC,AAAOrU;AAFtC,AAGE,AAAA6jB,AAAUhU;AAAViU,AAAyB,AAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA9hB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAsS,AAAA,AAAA,AAAAA,AAAY8J,AAAAA,AAAO/J,AAAAA,AAAAA,AAAAA,AAAAA,AACrB,AAACqK,AAAqBrK,AAAOrU,AAC7B6P;AAF3B,AAAA,AAAAiU,AAAUjU;;AAAV,AAAA,AAGE,AAAA,AAACL,AAAOL,AAAcqF,AAAcoP;AAHtC,AAAA,AAAAC,AAAUhU;;AApEd,AAAA,AAAA7J,AAAA,AAAA,AAAA6Z;;;;;;;;;;;;;;;AAJH,AAAA,AAAA,AAAMpD;;AAAN,AA6EA,AAAA,AAAMoF,AAAgB1S,AAAQgF;AAA9B,AACE,AAAI,AAAC0D,AAAM1I,AAAQgF;AACjB,AAAI,AAACtT,AAAQ,AAACrD,AAAM2W;AAClB,AAAA4P,AAAUjU;AAAVkU,AAA4B,AAAC7hB,AAAI,AAAA,AAAUgN,AAAS,AAAC3R,AAAM2W;AAA3D,AAAA,AAAA6P,AAAUlU;;AAAV,AAAA,AACE,AAAAmU,AAAgB9U;AAAhB+U,AAAwB,AAACjlB,AAAKkV;AAA9B,AAAA,AAAA8P,AAAAC,AAAAD,AAAAC,AAACrC,AAAAA,AAAAA;AADH,AAAA,AAAAkC,AAAUjU;;AAEV,AAAA,AAACN,AAAOL,AAAcqF,AAAc,AAAC4H,AAAWjN,AAAQgF;;;AAC1D,AAACgQ,AAAgBhV,AAAQgF;;;AAE7B,AAAA,AAAMiQ,AAAIjV,AAAQ0K;AAAlB,AACE,AAAAwK,AAAUvU;AAAVwU,AAA4B,AAAA,AAAA,AAACniB,AAAI,AAAA,AAAUgN;AAA3C,AAAA,AAAAmV,AAAUxU;;AAAV,AAAA,AACE,AAACtY,AAAOqqB,AAAe1S,AAAQ0K;AADjC,AAAA,AAAAwK,AAAUvU;;AAGZ,AAAA,AAAA,AAAA/R,AAAMsf;AAAN,AAAA,AAAAkH,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAlH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAArX,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMqX,AACFlO,AAAQqV;AADZ,AAEI,AAAMxtB,AAAK,AAAA,AAAOmY;AAAlB,AACE,AAAA,AAACsV,AAAU,AAAC9iB,AAAc,AAAC3I,AAAMwrB,AAAWxtB,AAAKwtB;;;AAHvD,AAAA,AAAA,AAAMnH,AAIF7Y,AAAIxN,AAAKwtB;;AAJb,AAKI,AAAAzd,AAAc,AAACvJ,AAAMxG;AAArB,AAAA,AAAA,AAAA+P,AAAA;AAgBEvC;;AAhBF,AAAAuC,AAAU2N;AAAV,AACE,AAAMgQ,AAAW,AAAC3F,AAAY,AAAA,AAAQrK,AAAK8P;AAA3C,AACE,AAAI,AAAC7V,AAAO+V;AACV,AAAOlgB;AAAI,AAACvF,AAAKjI;AAAMwtB;;;;;;AACvB,AAAMG,AAAS,AAACxe,AAAS,AAAA,AAACC;AAADwe;AAAA,AAAM,AAAAA,AAACziB,AAAIuiB;;AAAcF;AAC5C9O,AAAS,AAAC1c,AAAMwrB;AADtB,AAEE,AAAO,AAAAzhB,AAAA;AAAA8hB;AAAA,AAAA,AAAA5hB,AAAA,AAAA;;AAAA,AAAA,AAAA4hB,AAAAA;;AAAA,AAAA,AAAA3hB,AAAA,AAAArI,AAAAgqB;AAAA,AAAA,AAAA3hB;AAAA,AAAA,AAAA4hB,AAAA5hB;AAAA,AAAA,AAAA,AAAA1F,AAAAsnB,AAAe1jB;AAAf,AAAA,AAAA2jB,AAAA;AAAAC;AAAA,AAAA,AAAA/hB,AAAA,AAAA;;AAAA,AAAA,AAAA+hB,AAAAA;;AAAA,AAAA,AAAA9hB,AAAA,AAAArI,AAAAmqB;AAAA,AAAA,AAAA9hB;AAAA,AAAA,AAAA8hB,AAAA9hB;AAAA,AAAA,AAAA,AAAAC,AAAA6hB;AAAA,AAAA5hB,AA8oDgC,AAAA6B,AAAA+f;AA9oDhC3hB,AAAA,AAAArK,AAAAoK;AAAA6hB,AAAA,AAAA1hB,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA6hB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA7hB;AAAA,AAAA,AAAAlI,AAAAiI,AAAA8hB,AAEM5jB;AAFN,AAAA,AAAA,AAAAoC,AAAAuhB,AAGE,AAAMvjB,AAAI,AAAC4jB,AAAOlkB;AAAlB,AACE,AAAAQ,AAAY8T;AAAZ,AAAA,AAAA,AAAU7T;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAA2F,AAAgB,AAAMmd,AAAS9iB;AAA/B,AAAA,AAAA,AAAA2F,AAAA;AAAA;AAAA,AAAAA,AAAYyI;AAAZ,AACE,AAAMvO,AAAIG,AAAE,AAA4BP,AAAG2O;;;AAF/C,AAAA,AAAA,AAAUpO;;;;AAAV;;;;AAGAH;;;AAPJ,AAAA,AAAAwjB,AAAA;;;;AAAA;;;;;AAAA,AAAAvhB,AAAA,AAAAC,AAAAqhB,AAAA,AAAAE,AAAA,AAAArhB,AAAAkhB;;AAAA,AAAArhB,AAAA,AAAAC,AAAAqhB,AAAA;;;AAAA,AAAA,AAAAznB,AAAAwnB,AAEM1jB;AAFN,AAAA,AAAA0C,AAGE,AAAMtC,AAAI,AAAC4jB,AAAOlkB;AAAlB,AACE,AAAAQ,AAAY8T;AAAZ,AAAA,AAAA,AAAU7T;;AAAV,AAAA,AAAA,AAAAD,AAAUC;AAAV,AACE,AAAA2F,AAAgB,AAAMmd,AAAS9iB;AAA/B,AAAA,AAAA,AAAA2F,AAAA;AAAA;AAAA,AAAAA,AAAYyI;AAAZ,AACE,AAAMvO,AAAIG,AAAE,AAA4BP,AAAG2O;;;AAF/C,AAAA,AAAA,AAAUpO;;;;AAAV;;;;AAGAH;AAPJ,AAAAyjB,AAAA,AAAAlhB,AAAA+gB;;;AAAA;;;;;AAAA,AAAA;;;AAAAI,AAAA,AAAAvqB,AAAA,AAAAkqB,AAES,AAAA,AAASrQ;AAFlB,AAAA,AAAA0Q;AAAA,AAAA/sB,AAAA+sB,AAAA,AAAAC,AAAA,AAAAphB,AAAA4gB;;AAAA,AAAA,AAAA5gB,AAAA4gB;;;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA9hB,AACiDyB;;AAOjD,AAACvF,AAAKjI;AACNwtB;;;;;;;;;;;AApBnB,AAAA,AAAA,AAAMnH;;AAAN,AAuBA,AAAA,AAAMkI,AAASpW,AAAQqV;AAAvB,AACE,AAAK,AAACgB,AAASrW,AAAQqV,AAClB,AAACpe,AAAI3D,AACL5E;;AAEP,AAAA;AAAA;;;AAAA,AAAa6nB;;AAAb,AAAA,AACGD,AAAkBE,AAAIxW;AADzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBwW,AAAAA;AADrB,AACqBA,AAAAA,AAAIxW;;AADzB,AAAAxB,AAAA,AAAA,AAAA,AAAA,AACqBgY,AAAAA;AADrB/X,AAAA,AAAA6X,AAAA,AAAA3X,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqB+X,AAAAA,AAAIxW,AAAAA;;AADzB,AAAApB,AAAA,AAAA0X,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1X,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqB4X,AAAAA,AAAIxW,AAAAA;;AADzB,AAAA,AAAAnB,AAAA,AACqB2X;;;;;;AADrB,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA3jB,AACE4jB;;AADF,AAAA,AAAA,AACEA,AACA,AAAmBD,AAAIxW;AAAvB,AAAA,AAAA,AAAmBwW;AAAnB,AACE,AAAC7Q,AAAoB3F,AAAQ,AAAUwW;;;AAH3C,AAAA,AAAA,AAAA,AAAA3jB,AAIEoN;;AAJF,AAAA,AAAA,AAIEA,AACA,AAAmBuW,AAAIxW;AAAvB,AAAA,AAAA,AAAmBwW;AAAnB,AACE,AAAA,AAAA,AAACrX,AAAOa,AAAkB,AAAUwW;;;AANxC,AAAA,AAAA,AAAA,AAAA3jB,AAOE6jB;;AAPF,AAAA,AAAA,AAOEA,AACA,AAAmBF,AAAIpe;AAAvB,AAAA,AAAA,AAAmBoe;AAAnB,AACE,AAAAlP,AAAI,AAACtU,AAAIqJ,AAAoB,AAAUma;AAAvC,AAAA,AAAAlP;AAAAA;;AACI,AAACR,AAAY,AAAU0P;;;;AAV/B,AAAA,AAAA,AAAA,AAAA3jB,AAWE8jB;;AAXF,AAAA,AAAA,AAWEA,AACA,AAAmBH,AAAIpe;AAAvB,AAAA,AAAA,AAAmBoe;AAAnB,AACE,AAASA;;AAEb,AAAA,AAAMI,AAAYC,AAAc7W,AAAQ/S;AAAxC,AACE,AAAC6pB,AAAK,AAAKC,AAAQC,AAAYtkB;AAAzB,AACE,AAAI,AAACukB,AAAcF;AACjB,AAAMzQ,AAAK,AAACgQ,AAAiB,AAAA,AAAKS,AAAS/W;AACrCrH,AAAK,AAAA,AAAAue,AAACjgB;AAAD,AAAM,AAAAigB,AAACZ,AAAmBtW;AAAS,AAACzO,AAAQ,AAAA,AAAOwlB;AACxDI,AAAK,AAAA,AAAAC,AAACngB;AAAD,AAAM,AAAAmgB,AAACxa,AAAMlK;AAAGzF;AAF3B,AAGE,AAAC6F,AAAMwT,AAAE,AAAA,AAACpd,AAAOyP,AAAMwe;;AACzBH;;AACRH,AACA,AAACxoB,AAAMpB,AACP,AAACqJ;;AAEL,AAAA,AAAO+gB,AAAShQ,AAAKjZ;AAArB,AACO,AAAA,AAAAkpB,AAAAC,AAACjmB,AACD,AAAC8U,AAAO1L;AADR,AAAM,AAAM,AAAA4c,AAAAA,AAACjQ,AAAAA,AAAAA;AAAP,AAAAkQ;;AAAA;;AAAoBnpB,AAAK,AAACkI;;AAGvC,AAAA,AAAMkhB,AAAWX,AAAc7W,AAAQyX;AAAvC,AACE,AAAMC,AAAW,AAACL,AAAQ,AAACxc,AAAWoc,AAAeJ;AAC/Cc,AAAW,AAAK5W;AAAL,AACE,AAAA,AAAA6W,AAAC3gB;AAAD,AAAM,AAAA2gB,AAAChb,AAAImE;AAAS2W;;AACjCG,AAAW,AAAC3Z,AAASyZ,AAASF;AAHpC,AAIE,AAAA7jB,AAAA,AAAAkkB;AAAA,AAAA,AAAAhkB,AAAA,AAAA;AAAA,AAAA,AAAAgkB,AAAAA;;AAAA,AAAA,AAAA/jB,AAAA,AAAArI,AAAAosB;AAAA,AAAA,AAAA/jB;AAAA,AAAA,AAAA+jB,AAAA/jB;AAAA,AAAA,AAAA,AAAAC,AAAA8jB;AAAA,AAAA7jB,AAslD+C,AAAA6B,AAAAgiB;AAtlD/C5jB,AAAA,AAAArK,AAAAoK;AAAA8jB,AAAA,AAAA3jB,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA8jB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA9jB;AAAA,AAAA+jB,AAAA,AAAAjsB,AAAAiI,AAAA+jB;AAAA,AAAAtvB,AAAAuvB,AAAA,AAAA,AAAO7f;AAAP,AAAA1P,AAAAuvB,AAAA,AAAA,AAAShrB;AAAT,AAAA,AAAA,AAAAsH,AAAAwjB,AACE,AAACnB,AAAWC,AAAc7W,AAAQ/S;;AADpC,AAAA,AAAA+qB,AAAA;;;;AAAA;;;;;AAAA,AAAAxjB,AAAA,AAAAC,AAAAsjB,AAAA,AAAAG,AAAA,AAAAvjB,AAAAmjB;;AAAA,AAAAtjB,AAAA,AAAAC,AAAAsjB,AAAA;;;AAAA,AAAAI,AAAA,AAAA9pB,AAAAypB;AAAA,AAAApvB,AAAAyvB,AAAA,AAAA,AAAO/f;AAAP,AAAA1P,AAAAyvB,AAAA,AAAA,AAASlrB;AAAT,AAAA,AAAA4H,AAAA,AAAAqjB,AAAA,AAAApjB,AAAAgjB,AACE,AAAClB,AAAWC,AAAc7W,AAAQ/S;;;AADpC;;;;AAAA,AAAA;;AAAA,AAAA,AAAA2G,AAAiBikB;;AAGrB,AAAA;AAAA;;;AAAA,AAAaQ;;AAAb,AAAA,AACGD,AAAeE,AAAKrrB;AADvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkBqrB,AAAAA;AADlB,AACkBA,AAAAA,AAAKrrB;;AADvB,AAAAuR,AAAA,AAAA,AAAA,AAAA,AACkB8Z,AAAAA;AADlB7Z,AAAA,AAAA2Z,AAAA,AAAAzZ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkB6Z,AAAAA,AAAKrrB,AAAAA;;AADvB,AAAA2R,AAAA,AAAAwZ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxZ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkB0Z,AAAAA,AAAKrrB,AAAAA;;AADvB,AAAA,AAAA4R,AAAA,AACkByZ;;;;;;AADlB,AAGA,AAAA,AAAA,AAAA,AAAA,AAAAzlB,AACE0lB;;AADF,AAAA,AAAA,AACEA,AACA,AAAgBngB,AAAEnL;AAAlB,AAAA,AAAA,AAAgBmL;AAAhB,AAA0BnL;;;AAF5B,AAAA,AAAA,AAAA,AAAA4F,AAGE2lB;;AAHF,AAAA,AAAA,AAGEA,AACA,AAAgBpgB,AAAEnL;AAAlB,AAAA,AAAA,AAAgBmL;AAAhB,AAA0B,AAAA,AAAC9I,AAAQ,AAACmpB,AAAIpqB,AAAOpB;;;AAJjD,AAAA,AAAA,AAAA,AAAA4F,AAKE6lB;;AALF,AAAA,AAAA,AAKEA,AACA,AAAgBtgB,AAAEnL;AAAlB,AAAA,AAAA,AAAgBmL;AAAhB,AAA0B,AAAC+F,AAAOlR;;;AANpC,AAAA,AAAA,AAAA,AAAA4F,AAOE8lB;;AAPF,AAAA,AAAA,AAOEA,AACA,AAAgBvgB,AAAEnL;AAAlB,AAAA,AAAA,AAAgBmL;AAAhB,AAA0B,AAAC/J,AAAMpB;;AAEnC,AAAA,AAAO2rB,AAAM/B,AAAc7W,AAAQyX;AAAnC,AACE,AAAMoB,AAAS,AAAAjlB,AAAA,AAAAklB;AAAA,AAAA,AAAAhlB,AAAA,AAAA;AAAA,AAAA,AAAAglB,AAAAA;;AAAA,AAAA,AAAA/kB,AAAA,AAAArI,AAAAotB;AAAA,AAAA,AAAA/kB;AAAA,AAAA,AAAA+kB,AAAA/kB;AAAA,AAAA,AAAA,AAAAC,AAAA8kB;AAAA,AAAA7kB,AAqkDkC,AAAA6B,AAAAgjB;AArkDlC5kB,AAAA,AAAArK,AAAAoK;AAAA8kB,AAAA,AAAA3kB,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAA8kB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA9kB;AAAA,AAAA,AAAAlI,AAAAiI,AAAA+kB,AAAMV;AAAN,AAAA,AAAA,AAAA/jB,AAAAwkB,AACE,AAAA,AAAA,AAAA,AAAM,AAACG,AAASZ,AACb,AAAChC,AAAiB,AAAA,AAASgC,AAAMtY,AACjC,AAACmZ,AACC,AAAC7C,AAAiB,AAAA,AAAUgC,AAAMtY;;AAJzC,AAAA,AAAAgZ,AAAA;;;;AAAA;;;;;AAAA,AAAAxkB,AAAA,AAAAC,AAAAskB,AAAA,AAAAE,AAAA,AAAAtkB,AAAAmkB;;AAAA,AAAAtkB,AAAA,AAAAC,AAAAskB,AAAA;;;AAAA,AAAA,AAAA1qB,AAAAyqB,AAAMR;AAAN,AAAA,AAAAzjB,AAAA,AAAAokB,AAAA,AAAAnkB,AAAAgkB,AACE,AAAA,AAAA,AAAA,AAAM,AAACI,AAASZ,AACb,AAAChC,AAAiB,AAAA,AAASgC,AAAMtY,AACjC,AAACmZ,AACC,AAAC7C,AAAiB,AAAA,AAAUgC,AAAMtY;;;AAJzC;;;;AAAA,AAAA;;AAAA,AAAA,AAAApM,AAAWijB;;AAA1B,AAKE,AAAAjjB,AAAA,AAAAwlB;AAAA,AAAA,AAAAtlB,AAAA,AAAA;AAAA,AAAA,AAAAslB,AAAAA;;AAAA,AAAA,AAAArlB,AAAA,AAAArI,AAAA0tB;AAAA,AAAA,AAAArlB;AAAA,AAAA,AAAAqlB,AAAArlB;AAAA,AAAA,AAAA,AAAAC,AAAAolB;AAAA,AAAAnlB,AAgkD+C,AAAA6B,AAAAsjB;AAhkD/CllB,AAAA,AAAArK,AAAAoK;AAAAolB,AAAA,AAAAjlB,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAolB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAplB;AAAA,AAAA,AAAAlI,AAAAiI,AAAAqlB,AAAMvY;AAAN,AAAA,AAAA,AAAAxM,AAAA8kB,AACE,AAAClpB,AAAK;AAAKqpB,AAAIC;AAAT,AACE,AAAID;AACF,AAAAE,AAAiBF;AAAjB,AAAA9wB,AAAAgxB,AAAA,AAAA,AAAOE;AAAP,AAAAlxB,AAAAgxB,AAAA,AAAA,AAAWG;AAAX,AACE,AAAA,AAAA,AAACC,AAAcF,AAAIC,AAAMJ;;AAC3BA;;;AACJZ,AACA9X;;AAPR,AAAA,AAAAuY,AAAA;;;;AAAA;;;;;AAAA,AAAA9kB,AAAA,AAAAC,AAAA4kB,AAAA,AAAAE,AAAA,AAAA5kB,AAAAykB;;AAAA,AAAA5kB,AAAA,AAAAC,AAAA4kB,AAAA;;;AAAA,AAAA,AAAAhrB,AAAA+qB,AAAMrY;AAAN,AAAA,AAAAlM,AACE,AAAC1E,AAAK;AAAKqpB,AAAIC;AAAT,AACE,AAAID;AACF,AAAAG,AAAiBH;AAAjB,AAAA9wB,AAAAixB,AAAA,AAAA,AAAOC;AAAP,AAAAlxB,AAAAixB,AAAA,AAAA,AAAWE;AAAX,AACE,AAAA,AAAA,AAACC,AAAcF,AAAIC,AAAMJ;;AAC3BA;;;AALZ,AAAAF,AAAA,AAAAzkB,AAAAskB,AAMQP,AACA9X;;;AAPR;;;;AAAA,AAAA;;AAAA,AAAA,AAAAnN,AAAY6jB;;AAShB,AAAesC,AAAY,AAACC,AAAU,AAACC,AAAmB5yB,AAAA;AAE1D,AAAA,AAAM6yB,AAAsBC;AAA5B,AACE,AAAAviB,AAAiB,AAAA,AAAAyU,AAAA,AAACrkB,AAAK+xB,AAAYI;AAAnC,AAAA,AAAA,AAAAviB,AAAA;AAEE,AAAMyiB,AAAG,AAACC,AAAeH;AAAzB,AACE,AAAA,AAAA,AAAQJ,AAAAA,AAAYvuB,AAAM2uB,AAAEE;;AAC5BA;;AAJJ,AAAAziB,AAAUwiB;AAAV,AACEA;;;AAKJ,AAAA,AAAA,AAAAxrB,AAAM2rB;AAAN,AAAA,AAAA1rB,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA0rB,AAAA,AAAA,AAAA,AAAAvrB;;;AAAA,AAAA,AAAA,AAAA,AAAMurB,AAAGJ,AAAIO;AAAb,AACE,AAAMC,AAAc,AAACT,AAAqBC;AACpC7B,AAAc,AAAA,AAAQqC;AACtB9D,AAAc,AAAC+D,AAAiBtC;AAChCuC,AAAc,AAACC,AAAaxC;AAC5ByC,AAAc,AAAClxB,AAAMgtB;AACrBmE,AAAc,AAAA,AAAQL;AAEtBM,AAAc,AAAC/xB,AAAO2xB,AAAU,AAAA,AAAC5jB,AAAY+jB;AAC7Cb,AAAc,AAAAe,AAAQf;AAAR,AAAA,AACE,AAACppB,AAAYopB;AADf,AAAAe,AACkBC;;AADlBD;;;AAEdE,AAAc,AAAA,AAAQjB;AACtBna,AAAkB,AAAA9T,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACF,AAACqU,AAAY,AAAA,AAAMoa,AAAUD;AAC7CjD,AAAkBzX,AACF,AAACiV,AAAGmG,AACJ,AAAChF,AAAQ6E;AAf/B,AAgBE,AAAAI,AAAS5D;AAAT4D,AAAA,AACE,AAAA,AAAOlB,AACL,AAAA,AAAAmB,AAACxX;AAAD,AAAO,AAACxQ,AAAI,AAAAgoB,AAAA,AAAChM,AAAWyL;AAF5BM,AAEIA;AAFJA,AAAA,AAAAA,AAGE,AAAC3V,AAAKuR,AAAcJ,AAClB,AAAAwE,AAAC7D,AAAUX,AAAc7W;AAJ7Bqb,AAAA,AAAAA,AAKE,AAAC3V,AAAKwT,AAASrC,AACb,AAAAwE,AAACzC,AAAK/B,AAAc7W;AANxB,AAAA,AAQI,AAAAqb,AAACjD,AAAcE;;;;AAzBvB,AAAA,AAAA,AAAMiC;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAApsB,AAAAmsB;AAAAA,AAAA,AAAA1qB,AAAA0qB;AAAA,AAAA,AAAAxqB,AAAA;AAAA,AAAA,AAAAA,AAAAyqB,AAAAD;;;AAAA","names",["datascript.query/lru-cache-size","this__4439__auto__","k__4440__auto__","this__4441__auto__","k23881","else__4442__auto__","G__23886","cljs.core/Keyword","rels","sources","rules","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4458__auto__","f__4459__auto__","init__4460__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4461__auto__","p__23887","vec__23888","k__4462__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4463__auto__","this__4453__auto__","writer__4454__auto__","opts__4455__auto__","pr-pair__4456__auto__","keyval__4457__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__23880","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4437__auto__","__meta","this__4434__auto__","__hash","this__4443__auto__","cljs.core/count","this__4435__auto__","h__4297__auto__","fexpr__23891","coll__4436__auto__","cljs.core/hash-unordered-coll","this23882","other23883","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__4448__auto__","k__4449__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4446__auto__","k__4447__auto__","pred__23893","cljs.core/keyword-identical?","expr__23894","G__23896","G__23897","G__23898","G__23899","G__23900","G__23901","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4451__auto__","cljs.core/seq","cljs.core/MapEntry","this__4438__auto__","this__4444__auto__","entry__4445__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","datascript.query/Context","this__4482__auto__","cljs.core/List","writer__4483__auto__","cljs.core/-write","G__23884","extmap__4478__auto__","G__23902","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","datascript.query/->Context","datascript.query/map->Context","k23904","G__23908","attrs","tuples","p__23909","vec__23910","G__23903","fexpr__23914","this23905","other23906","pred__23915","expr__23916","G__23918","G__23919","G__23920","G__23921","datascript.query/Relation","G__23907","G__23922","datascript.query/->Relation","datascript.query/map->Relation","datascript.query/single","coll","cljs.core/first","datascript.query/intersect-keys","attrs1","attrs2","clojure.set.intersection.cljs$core$IFn$_invoke$arity$2","cljs.core/set","cljs.core/keys","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","datascript.query/concatv","seq23924","self__4777__auto__","xs","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core/cat","G__23929","datascript.query/zip","args-arr__4810__auto__","argseq__4811__auto__","seq23926","G__23927","cljs.core/next","G__23928","self__4776__auto__","a","b","cljs.core.mapv.cljs$core$IFn$_invoke$arity$3","cljs.core/vector","rest","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","cljs.core/mapv","datascript.query/same-keys?","p1__23930#","cljs.core/every?","p1__23931#","datascript.query/looks-like?","pattern","form","cljs.core/sequential?","cljs.core/Symbol","cljs.core/last","p__23936","vec__23937","pattern-el","form-el","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/butlast","p__23945","vec__23946","datascript.query/source?","sym","cljs.core/name","datascript.query/free-var?","datascript.query/attr?","datascript.query/lookup-ref?","datascript.query/join-tuples","t1","idxs1","t2","idxs2","l1","l2","res","me.tonsky.persistent-sorted-set.arrays/make-array","n__4666__auto__","i","datascript.query/sum-rel","map__23949","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__23950","attrs-a","tuples-a","attrs-b","tuples-b","cljs.core/vec","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","cljs.core/number?","cljs.core/vals","idxb->idxa","iter__4582__auto__","s__23955","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","b__23957","cljs.core/chunk-buffer","i__23956","vec__23958","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__23954","cljs.core/chunk-rest","vec__23961","cljs.core/cons","cljs.core/rest","idx-b","tlen","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","cljs.core/max","tuples'","cljs.core/persistent!","acc","tuple-b","tuple'","seq__23964","chunk__23965","count__23966","i__23967","vec__23974","c__4609__auto__","cljs.core/chunk-first","vec__23977","idx-a","cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/transient","all-attrs","cljs.core/zipmap","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.range.cljs$core$IFn$_invoke$arity$0","G__23982","G__23983","G__23980","G__23981","G__23985","datascript.query/prod-rel","js/Error","rel1","rel2","cljs.core/to-array","cljs.core.map.cljs$core$IFn$_invoke$arity$2","datascript.query/-differ?","seq23986","l","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","datascript.query/-get-else","db","e","else-val","temp__5737__auto__","datom","datascript.db/-search","datascript.query/-get-some","seq23988","G__23989","G__23990","as","_","temp__5739__auto__","cljs.core/reduced","datascript.query/-missing?","datascript.impl.entity/entity","datascript.query/and-fn","seq23991","args","datascript.query/or-fn","seq23993","cljs.core//","datascript.query/built-ins","cljs.core/=","cljs.core/==","cljs.core/not=","cljs.core/<","cljs.core/>","cljs.core/<=","cljs.core/>=","cljs.core/+","cljs.core/-","cljs.core/*","cljs.core/quot","cljs.core/rem","cljs.core/mod","cljs.core/inc","cljs.core/dec","cljs.core/min","cljs.core/zero?","cljs.core/pos?","cljs.core/neg?","cljs.core/even?","cljs.core/odd?","cljs.core/compare","cljs.core/rand","cljs.core/rand-int","cljs.core/true?","cljs.core/false?","cljs.core/nil?","cljs.core/some?","cljs.core/not","cljs.core/complement","cljs.core/identical?","cljs.core/identity","cljs.core/meta","cljs.core/namespace","cljs.core/type","cljs.core/list","cljs.core/array-map","cljs.core/range","cljs.core/empty","cljs.core/str","cljs.core/pr-str","cljs.core/print-str","cljs.core/println-str","cljs.core/prn-str","cljs.core/subs","cljs.core/re-find","cljs.core/re-matches","cljs.core/re-seq","cljs.core/re-pattern","clojure.string/blank?","clojure.string/includes?","clojure.string/starts-with?","clojure.string/ends-with?","datascript.query/built-in-aggregates","sum","terms","cljs.core.sort.cljs$core$IFn$_invoke$arity$1","size","med","G__23999","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","mean","avg","s__24001","b__24003","i__24002","iter__24000","x","delta","js/Math.sqrt","variance","median","stddev","n","cljs.core.sort.cljs$core$IFn$_invoke$arity$2","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core/rand-nth","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2","cljs.core/shuffle","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","datascript.query/parse-rules","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","cljs.core/group-by","cljs.core/ffirst","datascript.query/empty-rel","binding","vars","datascript.parser/collect-vars-distinct","x__4487__auto__","m__4488__auto__","datascript.query/in->rel","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","datascript.query/IBinding","value","datascript.parser/BindIgnore","datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0","datascript.parser/BindScalar","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","datascript.parser/BindColl","datascript.db/seqable?","datascript.parser/source","cljs.core/empty?","p1__24005#","datascript.parser/BindTuple","p1__24006#","p2__24007#","p__24008","vec__24009","datascript.query/resolve-in","context","datascript.parser/SrcVar","cljs.core.update.cljs$core$IFn$_invoke$arity$5","cljs.core/assoc","datascript.parser/RulesVar","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","datascript.query/resolve-ins","bindings","values","datascript.query/*lookup-attrs*","datascript.query/*implicit-source*","datascript.query/getter-fn","attr","idx","tuple","eid","datascript.db/entid","me.tonsky.persistent-sorted-set.arrays/array?","datascript.query/tuple-key-fn","getters","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1","p1__24012#","datascript.query/hash-attrs","key-fn","hash-table","key","cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3","datascript.query/hash-join","tuples1","tuples2","common-attrs","common-gtrs1","p1__24015#","common-gtrs2","p1__24016#","keep-attrs1","keep-attrs2","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","keep-idxs1","keep-idxs2","key-fn1","hash","key-fn2","new-tuples","tuple2","tuple1","datascript.query/subtract-rel","map__24020","map__24021","getters-b","p1__24017#","key-fn-b","getters-a","p1__24018#","key-fn-a","p1__24019#","cljs.core/filterv","G__24024","datascript.query/lookup-pattern-db","search-pattern","p1__24025#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","datoms","attr->prop","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__24026","vec__24027","s","datascript.query/matches-pattern?","and__4174__auto__","t","p","datascript.query/lookup-pattern-coll","data","p1__24031#","attr->idx","p__24032","vec__24033","datascript.query/normalize-pattern-clause","clause","datascript.query/lookup-pattern","source","cljs.core/native-satisfies?","datascript.db/ISearch","datascript.query/collapse-rels","new-rel","rel","datascript.query/rel-with-attr","p1__24037#","cljs.core/some","datascript.query/context-resolve-val","fexpr__24038","datascript.query/rel-contains-attrs?","p1__24040#","datascript.query/rel-prod-by-attrs","p1__24041#","production","p1__24042#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","datascript.query/-call-fn","f","len","static-args","tuples-args","arg","me.tonsky.persistent-sorted-set.arrays/aclone","tuple-idx","v","datascript.query/resolve-sym","datascript.query/filter-by-pred","vec__24044","vec__24047","seq__24048","first__24049","vec__24050","pred","or__4185__auto__","cljs.core/symbol?","tuple-pred","p1__24043#","datascript.query/bind-by-fn","vec__24054","vec__24057","seq__24058","first__24059","vec__24060","out","datascript.parser/parse-binding","fun","tuple-fn","s__24064","b__24066","i__24065","iter__24063","val","datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2","datascript.query/rule?","cljs.core/second","datascript.query/rule-seqid","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","datascript.query/expand-rule","used-args","vec__24068","seq__24069","first__24070","rule","call-args","seqid","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","branches","s__24072","b__24074","i__24073","vec__24075","seq__24076","first__24077","vec__24078","seq__24079","first__24080","iter__24071","vec__24081","seq__24082","first__24083","vec__24084","seq__24085","first__24086","branch","rule-args","clauses","replacements","p1__24067#","clojure.walk/postwalk","x__20503__auto__","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","datascript.query/remove-pairs","ys","pairs","p__24087","vec__24088","y","datascript.query/rule-gen-guards","rule-clause","vec__24091","seq__24092","first__24093","prev-call-args","s__24095","b__24097","i__24096","vec__24099","iter__24094","vec__24102","prev-args","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","datascript.query/walk-collect","cljs.core/deref","p1__24105#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","datascript.query/collect-vars","datascript.query/split-guards","guards","bound-vars","p__24106","vec__24107","vec__24110","seq__24111","first__24112","datascript.query/solve-rule","final-attrs","final-attrs-map","solve","prefix-context","datascript.query/-resolve-clause","empty-rels?","p1__24113#","stack","frame","vec__24133","vec__24136","seq__24137","first__24138","next-clauses","p1__24114#","cljs.core/split-with","datascript.query/-collect","vec__24139","seq__24140","first__24141","vec__24142","active-gs","pending-gs","p1__24115#","prefix-clauses","s__24146","b__24148","i__24147","iter__24145","datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic","datascript.query/resolve-pattern-lookup-refs","datascript.db/IDB","vec__24150","tx","datascript.db/entid-strict","datascript.db/ref?","cljs.core.subvec.cljs$core$IFn$_invoke$arity$3","datascript.query/dynamic-lookup-attrs","vec__24153","G__24156","datascript.query/limit-rel","attrs'","cljs.core/select-keys","datascript.query/limit-context","p1__24157#","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","datascript.query/check-bound","bound","p1__24159#","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","clojure.set/subset?","missing","G__24166","datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3","orig-clause","pred__24167","expr__24168","G__24170","G__24171","G__24172","G__24173","G__24174","G__24175","G__24181","G__24182","G__24186","G__24187","G__24194","G__24195","G__24199","G__24200","G__24205","G__24206","G__24210","G__24211","G__24215","G__24216","vec__24176","seq__24177","first__24178","source-sym","*implicit-source*-orig-val__24179","*implicit-source*-temp-val__24180","vec__24183","seq__24184","first__24185","contexts","p1__24160#","datascript.query/resolve-clause","p1__24161#","vec__24188","seq__24189","first__24190","vec__24191","seq__24192","first__24193","req-vars","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3","vec__24196","seq__24197","first__24198","join-context","p1__24162#","p1__24163#","sum-rel","vec__24202","seq__24203","first__24204","vec__24207","seq__24208","first__24209","p1__24164#","negation-vars","context'","negation-context","negation","vec__24212","seq__24213","first__24214","relation","*lookup-attrs*-orig-val__24217","*lookup-attrs*-temp-val__24218","*implicit-source*-orig-val__24220","*implicit-source*-temp-val__24221","G__24222","G__24223","datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2","datascript.query/-q","*implicit-source*-orig-val__24224","*implicit-source*-temp-val__24225","G__24228","symbols","datascript.query._collect.cljs$core$IFn$_invoke$arity$3","keep-attrs","copy-map","p1__24226#","s__24231","xs__6292__auto__","iterys__4578__auto__","s__24233","b__24235","i__24234","iter__24232","fs__4579__auto__","iter__24230","cljs.core/aclone","datascript.query/collect","datascript.query._collect.cljs$core$IFn$_invoke$arity$2","datascript.query/-context-resolve","datascript.query/IContextResolve","var","datascript.parser/Variable","datascript.parser/PlainSymbol","datascript.parser/Constant","datascript.query/-aggregate","find-elements","cljs.core.mapv.cljs$core$IFn$_invoke$arity$4","element","fixed-value","datascript.parser/aggregate?","p1__24237#","vals","p1__24238#","datascript.query/idxs-of","p1__24239#","p2__24240#","datascript.query/aggregate","resultset","group-idxs","group-fn","p1__24241#","grouped","s__24243","b__24245","i__24244","vec__24246","iter__24242","vec__24249","datascript.query/-post-process","datascript.query/IPostProcess","find","datascript.parser/FindRel","datascript.parser/FindColl","cljs.core.map.cljs$core$IFn$_invoke$arity$1","datascript.parser/FindScalar","datascript.parser/FindTuple","datascript.query/pull","resolved","s__24253","b__24255","i__24254","iter__24252","datascript.parser/pull?","datascript.pull-parser/parse-pull","s__24257","b__24259","i__24258","iter__24256","env","el","vec__24260","vec__24263","src","spec","datascript.pull-api/pull-spec","datascript.query/query-cache","cljs.core/volatile!","datascript.lru/lru","datascript.query/memoized-parse-query","q","cached","qp","datascript.parser/parse-query","datascript.query/q","seq24267","G__24268","inputs","parsed-q","datascript.parser/find-elements","find-vars","datascript.parser/find-vars","result-arity","with","all-vars","G__24269","datascript.parser/query->map","wheres","G__24270","p1__24266#"]]],"~:cache-keys",["~#cmap",[["^1U","datascript/db.cljc"],[1578170241590,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^Y","^X","~$goog.array","^[","~$clojure.data","~$me.tonsky.persistent-sorted-set","^Q"]]],["^1U","goog/dom/tagname.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","~$goog.dom.HtmlElement"]]],["^1U","datascript/parser.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^S","^G"]]],["^1U","cljs/tools/reader/impl/utils.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^14","~$goog.string"]]],["^1U","goog/math/math.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","~$goog.asserts"]]],["^1U","goog/html/trustedtypes.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/labs/useragent/browser.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1U","goog/html/safeurl.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2B"]]],["^1U","goog/array/array.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?"]]],["^1U","goog/debug/error.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","cljs/tools/reader/edn.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2>","~$goog.string.StringBuffer"]]],["^1U","datascript/query.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^18","^S","^14","^[","^G","^Q","^12","^16","^10","^W","^U"]]],["^1U","goog/dom/nodetype.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","cljs/tools/reader/impl/inspect.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X"]]],["^1U","cljs/tools/reader.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2J","^2K","^2L","^2I","^2:","^2>","^2N"]]],["^1U","goog/string/typedstring.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/object/object.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/dom/asserts.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?"]]],"~:SHADOW-TIMESTAMP",[1577302212000,1574477009000],["^1U","goog/math/long.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","~$goog.reflect"]]],["^1U","goog/html/trustedresourceurl.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","~$goog.html.trustedtypes","^2E","^2F","^2G","^2H"]]],["^1U","goog/string/internal.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","datascript/pull_api.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^G","^U"]]],["^1U","goog/functions/functions.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/html/safestyle.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","~$goog.html.SafeUrl","^2G","^2H","^2B"]]],["^1U","goog/dom/safe.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2R","^2D","~$goog.html.uncheckedconversions","^2G","^2B"]]],["^1U","clojure/walk.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X"]]],["^1U","goog/structs/map.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1U","goog/html/safehtml.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","~$goog.dom.TagName","~$goog.dom.tags","^2V","^2W","~$goog.html.SafeStyleSheet","^2R","^2D","^2Q","^2E","^2F","~$goog.labs.userAgent.browser","^2A","^2G","^2H","^2B"]]],["^1U","goog/dom/tags.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2A"]]],["^1U","datascript/impl/entity.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^G"]]],["^1U","me/tonsky/persistent_sorted_set/arrays.cljc"],[1578170241726,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^14"]]],["^1U","cljs/reader.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2A","^2M","~$cljs.tools.reader.edn","^2N"]]],["^1U","goog/asserts/asserts.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1U","me/tonsky/persistent_sorted_set.cljs"],[1578170241726,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^Q"]]],["^1U","goog/uri/uri.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","^2>","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1U","goog/i18n/bidi.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/fs/url.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/base.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",[]]],["^1U","goog/structs/structs.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2A"]]],["^1U","cljs/tools/reader/impl/errors.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2J","^14","~$cljs.tools.reader.impl.inspect"]]],["^1U","clojure/string.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2>","^2N"]]],["^1U","datascript/pull_parser.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^G"]]],["^1U","goog/string/string.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","~$goog.dom.safe","^2X","^2G","^2B"]]],["^1U","clojure/data.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^S"]]],["^1U","goog/reflect/reflect.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","goog/labs/useragent/util.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2B"]]],["^1U","goog/string/stringbuffer.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","cljs/tools/reader/reader_types.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2K","^2>","^2N"]]],["^1U","goog/iter/iter.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","^2T","~$goog.math"]]],["^1U","goog/html/uncheckedconversions.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","^2U","^2V","^2W","^31","^2R","^2D","^2G","^2B"]]],["^1U","datascript/lru.cljc"],[1578170241590,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X"]]],["^1U","cljs/tools/reader/impl/commons.cljs"],[1559507883302,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X","^2I","^2J","^2K"]]],["^1U","goog/dom/htmlelement.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y"]]],["^1U","cljs/core.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["~$goog.math.Long","~$goog.math.Integer","^2>","^2A","^2:","~$goog.Uri","^2N"]]],["^1U","goog/html/safescript.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","^2Q","^2G","^2H"]]],["^1U","goog/html/safestylesheet.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","^2W","^2A","^2G","^2H","^2B"]]],["^1U","goog/math/integer.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2P"]]],["^1U","clojure/set.cljs"],[1574477009594,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^X"]]],["^1U","goog/uri/utils.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2:","^2?","^2>"]]],["^1U","goog/string/const.js"],[1573417071133,"^26",["^ ","^27",null,"^28",["^I",[]],"^29",["^Y","^2?","^2H"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.2/persistent-sorted-set-0.1.2.jar!/me/tonsky/persistent_sorted_set.clj",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/datascript/datascript/0.18.8/datascript-0.18.8.jar!/datascript/parser.cljc",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.2/persistent-sorted-set-0.1.2.jar!/me/tonsky/persistent_sorted_set/arrays.cljc",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/reader.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/datascript/datascript/0.18.8/datascript-0.18.8.jar!/datascript/db.cljc",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1559507883000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","datascript/query.cljc","^7",1,"^8",14,"^9",1,"^:",30,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"~:shadow/protocol-prefixes",["^I",["datascript$query$IContextResolve$","datascript$query$IBinding$","datascript$query$IPostProcess$"]],"^E",["^ ","^F","^G"],"^H",["^I",[]],"~:shadow/js-access-properties",["^I",["sqrt"]],"^J","^K","^N",null,"^O",["^ ","^P","^Q","^R","^S","^T","^U","^V","^W","^X","^X","^Y","^Y","^Z","^[","^10","^10","^11","^G","^S","^S","^12","^12","^G","^G","^Q","^Q","^U","^U","^W","^W","^13","^14","^14","^14","^15","^16","^17","^10","^18","^18","^[","^[","^19","^18","^16","^16"],"^1:",["^I",["^1;"]],"~:shadow/js-access-global",["^I",["Math","Error"]],"^1<",["^ ","^1=","^10","^1>","^10","^1?","^10","^1@","^10","^1A","^10","^1B","^10","^1C","^10","^1D","^10","^1E","^10","^1F","^10","^1G","^10","^1H","^10","^1I","^10"],"~:defs",["^ ","~$solve-rule",["^ ","~:protocol-inline",null,"^5",["^ ","^6","datascript/query.cljc","^7",615,"^8",7,"^9",615,"^:",17,"~:arglists",["^1L",["~$quote",["^1L",[["~$context","~$clause"]]]]]],"^J","~$datascript.query/solve-rule","^6","datascript/query.cljc","^:",17,"~:method-params",["^1L",[["^4=","^4>"]]],"~:protocol-impl",null,"~:arglists-meta",["^1L",[null,null]],"^8",1,"~:variadic?",false,"^7",615,"~:ret-tag","~$any","^9",615,"~:max-fixed-arity",2,"~:fn-var",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"~$matches-pattern?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",430,"^8",7,"^9",430,"^:",23,"^4;",["^1L",["^4<",["^1L",[["~$pattern","~$tuple"]]]]]],"^J","~$datascript.query/matches-pattern?","^6","datascript/query.cljc","^:",23,"^4@",["^1L",[["^4I","^4J"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",430,"^4D","~$boolean","^9",430,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4I","^4J"]]]]]],"~$aggregate",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",861,"^8",7,"^9",861,"^:",16,"^4;",["^1L",["^4<",["^1L",[["~$find-elements","^4=","~$resultset"]]]]]],"^J","~$datascript.query/aggregate","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^4N","^4=","^4O"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",861,"^4D","~$cljs.core/LazySeq","^9",861,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4N","^4=","^4O"]]]]]],"~$query-cache",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",897,"^8",16,"^9",897,"^:",27,"~:private",true],"^4S",true,"^J","~$datascript.query/query-cache","^6","datascript/query.cljc","^:",27,"^8",1,"^7",897,"^9",897,"~:tag","~$cljs.core/Volatile"],"~$rel-prod-by-attrs",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",481,"^8",8,"^9",481,"^:",25,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^4=","~$attrs"]]]]]],"^4S",true,"^J","~$datascript.query/rel-prod-by-attrs","^6","datascript/query.cljc","^:",25,"^4@",["^1L",[["^4=","^4X"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",481,"^4D","~$cljs.core/IVector","^9",481,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4X"]]]]]],"~$limit-rel",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",692,"^8",7,"^9",692,"^:",16,"^4;",["^1L",["^4<",["^1L",[["~$rel","~$vars"]]]]]],"^J","~$datascript.query/limit-rel","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^50","^51"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",692,"^4D",["^I",["~$clj","^4E","~$clj-nil"]],"^9",692,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^50","^51"]]]]]],"~$empty-rel",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",284,"^8",7,"^9",284,"^:",16,"^4;",["^1L",["^4<",["^1L",[["~$binding"]]]]]],"^J","~$datascript.query/empty-rel","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^56"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",284,"^4D","~$datascript.query/Relation","^9",284,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^56"]]]]]],"~$built-ins",["^ ","^J","~$datascript.query/built-ins","^6","datascript/query.cljc","^7",194,"^8",1,"^9",194,"^:",15,"^5",["^ ","^6","datascript/query.cljc","^7",194,"^8",6,"^9",194,"^:",15],"^4U","~$cljs.core/IMap"],"~$pull",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",882,"^8",8,"^9",882,"^:",12,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^4N","^4=","^4O"]]]]]],"^4S",true,"^J","~$datascript.query/pull","^6","datascript/query.cljc","^:",12,"^4@",["^1L",[["^4N","^4=","^4O"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",882,"^4D","^4Q","^9",882,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4N","^4=","^4O"]]]]]],"~$->Context",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"~:internal-ctor",true,"~:factory","~:positional","^7",28,"^9",28,"^4;",["^1L",["^4<",["^1L",[["~$rels","~$sources","~$rules"]]]]],"~:doc","Positional factory function for datascript.query/Context."],"^J","~$datascript.query/->Context","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^5B","^5C","^5D"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^5?",true,"^4C",false,"^5@","^5A","^7",28,"^4D","~$datascript.query/Context","^9",28,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5B","^5C","^5D"]]]]],"^5E","Positional factory function for datascript.query/Context."],"~$tuple-key-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",364,"^8",7,"^9",364,"^:",19,"^4;",["^1L",["^4<",["^1L",[["~$getters"]]]]]],"^J","~$datascript.query/tuple-key-fn","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^5I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",364,"^4D",["^I",["^4E","~$function","^54"]],"^9",364,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5I"]]]]]],"~$resolve-pattern-lookup-refs",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",671,"^8",7,"^9",671,"^:",34,"^4;",["^1L",["^4<",["^1L",[["~$source","^4I"]]]]]],"^J","~$datascript.query/resolve-pattern-lookup-refs","^6","datascript/query.cljc","^:",34,"^4@",["^1L",[["^5M","^4I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",671,"^4D",["^I",[null,"~$cljs.core/Subvec"]],"^9",671,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5M","^4I"]]]]]],"~$bind-by-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",539,"^8",7,"^9",539,"^:",17,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"^J","~$datascript.query/bind-by-fn","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^4=","^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",539,"^4D",["^I",["^53","^4E"]],"^9",539,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"~$resolve-in",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",327,"^8",7,"^9",327,"^:",17,"^4;",["^1L",["^4<",["^1L",[["^4=",["^56","~$value"]]]]]]],"^J","~$datascript.query/resolve-in","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^4=","~$p__24008"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",327,"^4D",["^I",["^53","^4E"]],"^9",327,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=",["^56","^5S"]]]]]]],"~$rule?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",564,"^8",7,"^9",564,"^:",12,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"^J","~$datascript.query/rule?","^6","datascript/query.cljc","^:",12,"^4@",["^1L",[["^4=","^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",564,"^4D","^4L","^9",564,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"~$source?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",80,"^8",7,"^9",80,"^:",14,"^4;",["^1L",["^4<",["^1L",[["~$sym"]]]]]],"^J","~$datascript.query/source?","^6","datascript/query.cljc","^:",14,"^4@",["^1L",[["^5Y"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",80,"^4D","^4L","^9",80,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5Y"]]]]]],"~$-q",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",795,"^8",7,"^9",795,"^:",9,"^4;",["^1L",["^4<",["^1L",[["^4=","~$clauses"]]]]]],"^J","~$datascript.query/-q","^6","datascript/query.cljc","^:",9,"^4@",["^1L",[["^4=","^60"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",795,"^9",795,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^60"]]]]]],"~$attr?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",88,"^8",7,"^9",88,"^:",12,"^4;",["^1L",["^4<",["^1L",[["~$form"]]]]]],"^J","~$datascript.query/attr?","^6","datascript/query.cljc","^:",12,"^4@",["^1L",[["^63"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",88,"^4D","^4L","^9",88,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^63"]]]]]],"~$-get-else",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",165,"^8",8,"^9",165,"^:",17,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^11","~$e","~$a","~$else-val"]]]]]],"^4S",true,"^J","~$datascript.query/-get-else","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^11","~$e","~$a","^66"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",165,"^4D",["^I",[null,"^4E"]],"^9",165,"^4F",4,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^11","~$e","~$a","^66"]]]]]],"~$intersect-keys",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",44,"^8",7,"^9",44,"^:",21,"^4;",["^1L",["^4<",["^1L",[["~$attrs1","~$attrs2"]]]]]],"^J","~$datascript.query/intersect-keys","^6","datascript/query.cljc","^:",21,"^4@",["^1L",[["^69","^6:"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",44,"^4D",["^I",[null,"^4E"]],"^9",44,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^69","^6:"]]]]]],"~$or-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",190,"^8",8,"^9",190,"^:",13,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^4C",true,"~:fixed-arity",0,"^4F",0,"^4@",[["^1L",["^6="]]],"^4;",["^1L",[["~$&","^6="]]],"^4B",["^1L",[null]]]],"^4S",true,"^J","~$datascript.query/or-fn","^6","datascript/query.cljc","^:",13,"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^6="]]],"^4;",["^1L",[["~$&","^6="]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["^6="]]],"^4A",null,"^6?",0,"^4B",["^1L",[null]],"^8",1,"^4C",true,"~:methods",[["^ ","^6?",0,"^4C",true,"^4U",["^I",[null,"^4E"]]]],"^7",190,"^4D","^4E","^9",190,"^4F",0,"^4G",true,"^4;",["^1L",[["~$&","^6="]]]],"~$rule-seqid",["^ ","^J","~$datascript.query/rule-seqid","^6","datascript/query.cljc","^7",571,"^8",1,"^9",571,"^:",16,"^5",["^ ","^6","datascript/query.cljc","^7",571,"^8",6,"^9",571,"^:",16],"^4U","~$cljs.core/Atom"],"~$-collect",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",799,"^8",7,"^9",799,"^:",15,"^4;",["^1L",["^4<",["^1L",[["^4=","~$symbols"],["~$acc","^5B","^6F"]]]]],"^6>",["^ ","^4C",false,"^6?",3,"^4F",3,"^4@",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]],"^4;",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]],"^4B",["^1L",[null,null]]]],"^J","~$datascript.query/-collect","^6","datascript/query.cljc","^:",15,"^6>",["^ ","^4C",false,"^6?",3,"^4F",3,"^4@",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]],"^4;",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]],"^4B",["^1L",[null,null]]],"^4@",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]],"^4A",null,"^6?",3,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^6A",[["^ ","^6?",2,"^4C",false,"^4U","^4E"],["^ ","^6?",3,"^4C",false]],"^7",799,"^9",799,"^4F",3,"^4G",true,"^4;",["^1L",[["^4=","^6F"],["^6G","^5B","^6F"]]]],"~$q",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",906,"^8",7,"^9",906,"^:",8,"^4;",["^1L",["^4<",["^1L",[["~$q","~$&","~$inputs"]]]]],"^6>",["^ ","^4C",true,"^6?",1,"^4F",1,"^4@",[["^1L",["~$q","^6I"]]],"^4;",["^1L",[["~$q","~$&","^6I"]]],"^4B",["^1L",[null]]]],"^J","~$datascript.query/q","^6","datascript/query.cljc","^:",8,"^6>",["^ ","^4C",true,"^6?",1,"^4F",1,"^4@",[["^1L",["~$q","^6I"]]],"^4;",["^1L",[["~$q","~$&","^6I"]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["~$q","^6I"]]],"^4A",null,"^6?",1,"^4B",["^1L",[null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",1,"^4C",true,"^4U","^4E"]],"^7",906,"^4D","^4E","^9",906,"^4F",1,"^4G",true,"^4;",["^1L",[["~$q","~$&","^6I"]]]],"~$context-resolve-val",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",473,"^8",8,"^9",473,"^:",27,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^5Y"]]]]]],"^4S",true,"^J","~$datascript.query/context-resolve-val","^6","datascript/query.cljc","^:",27,"^4@",["^1L",[["^4=","^5Y"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",473,"^4D",["^I",["^4E","^54"]],"^9",473,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^5Y"]]]]]],"~$walk-collect",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",601,"^8",7,"^9",601,"^:",19,"^4;",["^1L",["^4<",["^1L",[["^63","~$pred"]]]]]],"^J","~$datascript.query/walk-collect","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^63","^6N"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",601,"^4D","^4E","^9",601,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^63","^6N"]]]]]],"~$lookup-pattern-coll",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",441,"^8",7,"^9",441,"^:",26,"^4;",["^1L",["^4<",["^1L",[["~$coll","^4I"]]]]]],"^J","~$datascript.query/lookup-pattern-coll","^6","datascript/query.cljc","^:",26,"^4@",["^1L",[["^6Q","^4I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",441,"^4D","^58","^9",441,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^6Q","^4I"]]]]]],"~$IBinding",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","datascript/query.cljc","^:",22,"^8",14,"^7",289,"~:protocol-info",["^ ","^6A",["^ ","~$in->rel",[["^56","^5S"]]]],"^9",289,"~:sigs",["^ ","~:in->rel",["^ ","^J","^6V","^4;",["^1L",[["^56","^5S"]]],"^5E",null]],"~:jsdoc",["^1L",["@interface"]]],"^6T",true,"^J","~$datascript.query/IBinding","^6","datascript/query.cljc","^:",22,"^8",1,"^7",289,"^6U",["^ ","^6A",["^ ","^6V",[["^56","^5S"]]]],"~:info",null,"^9",289,"^4U","^4E","^6W",["^ ","^6X",["^ ","^J","^6V","^4;",["^1L",[["^56","^5S"]]],"^5E",null]],"~:impls",["^I",["~$datascript.parser/BindColl","~$datascript.parser/BindIgnore","~$datascript.parser/BindScalar","~$datascript.parser/BindTuple"]],"^6Y",["^1L",["@interface"]]],"~$IContextResolve",["^ ","^5",["^ ","^6T",true,"^6","datascript/query.cljc","^:",29,"^8",14,"^7",827,"^6U",["^ ","^6A",["^ ","~$-context-resolve",[["~$var","^4="]]]],"^9",827,"^6W",["^ ","~:-context-resolve",["^ ","^J","^76","^4;",["^1L",[["^77","^4="]]],"^5E",null]],"^6Y",["^1L",["@interface"]]],"^6T",true,"^J","~$datascript.query/IContextResolve","^6","datascript/query.cljc","^:",29,"^8",1,"^7",827,"^6U",["^ ","^6A",["^ ","^76",[["^77","^4="]]]],"^6[",null,"^9",827,"^4U","^4E","^6W",["^ ","^78",["^ ","^J","^76","^4;",["^1L",[["^77","^4="]]],"^5E",null]],"^70",["^I",["~$datascript.parser/PlainSymbol","~$datascript.parser/SrcVar","~$datascript.parser/Constant","~$datascript.parser/Variable"]],"^6Y",["^1L",["@interface"]]],"~$rule-gen-guards",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",594,"^8",7,"^9",594,"^:",22,"^4;",["^1L",["^4<",["^1L",[["~$rule-clause","~$used-args"]]]]]],"^J","~$datascript.query/rule-gen-guards","^6","datascript/query.cljc","^:",22,"^4@",["^1L",[["^7?","^7@"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",594,"^4D","^4Q","^9",594,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^7?","^7@"]]]]]],"~$resolve-ins",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",338,"^8",7,"^9",338,"^:",18,"^4;",["^1L",["^4<",["^1L",[["^4=","~$bindings","~$values"]]]]]],"^J","~$datascript.query/resolve-ins","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^4=","^7C","^7D"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",338,"^4D",["^I",[null,"^4E"]],"^9",338,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^7C","^7D"]]]]]],"~$resolve-sym",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",519,"^8",8,"^9",519,"^:",19,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^5Y"]]]]]],"^4S",true,"^J","~$datascript.query/resolve-sym","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^5Y"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",519,"^4D","^54","^9",519,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5Y"]]]]]],"~$remove-pairs",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",588,"^8",7,"^9",588,"^:",19,"^4;",["^1L",["^4<",["^1L",[["~$xs","~$ys"]]]]]],"^J","~$datascript.query/remove-pairs","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^7I","^7J"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",588,"^4D","^4Z","^9",588,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^7I","^7J"]]]]]],"~$single",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",40,"^8",7,"^9",40,"^:",13,"^4;",["^1L",["^4<",["^1L",[["^6Q"]]]]]],"^J","~$datascript.query/single","^6","datascript/query.cljc","^:",13,"^4@",["^1L",[["^6Q"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",40,"^4D",["^I",["^4E","^54"]],"^9",40,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^6Q"]]]]]],"~$lru-cache-size",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",22,"^8",14,"^9",22,"^:",28,"~:const",true],"^J","~$datascript.query/lru-cache-size","^6","datascript/query.cljc","^:",28,"~:const-expr",["^ ","^L","^7O","~:val",100,"~:env",["^ ","~:context","~:expr"],"^1K",100,"^4U","~$number"],"^8",1,"^7O",true,"^7",22,"^9",22,"^4U","^7V"],"~$concatv",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",48,"^8",7,"^9",48,"^:",14,"^4;",["^1L",["^4<",["^1L",[["~$&","^7I"]]]]],"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^7I"]]],"^4;",["^1L",[["~$&","^7I"]]],"^4B",["^1L",[null]]]],"^J","~$datascript.query/concatv","^6","datascript/query.cljc","^:",14,"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^7I"]]],"^4;",["^1L",[["~$&","^7I"]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["^7I"]]],"^4A",null,"^6?",0,"^4B",["^1L",[null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",0,"^4C",true,"^4U",["^I",["^53","^4E"]]]],"^7",48,"^4D","^4E","^9",48,"^4F",0,"^4G",true,"^4;",["^1L",[["~$&","^7I"]]]],"~$-missing?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",182,"^8",8,"^9",182,"^:",17,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^11","~$e","~$a"]]]]]],"^4S",true,"^J","~$datascript.query/-missing?","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^11","~$e","~$a"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",182,"^4D","^4L","^9",182,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^11","~$e","~$a"]]]]]],"~$subtract-rel",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",409,"^8",7,"^9",409,"^:",19,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"^J","~$datascript.query/subtract-rel","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["~$a","~$b"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",409,"^4D",["^I",["^53","^4E"]],"^9",409,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"~$rel-contains-attrs?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",478,"^8",8,"^9",478,"^:",27,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^50","^4X"]]]]]],"^4S",true,"^J","~$datascript.query/rel-contains-attrs?","^6","datascript/query.cljc","^:",27,"^4@",["^1L",[["^50","^4X"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",478,"^4D",["^I",["^4E","^54"]],"^9",478,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^50","^4X"]]]]]],"~$collect-vars",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",606,"^8",7,"^9",606,"^:",19,"^4;",["^1L",["^4<",["^1L",[["^4>"]]]]]],"^J","~$datascript.query/collect-vars","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",606,"^4D",["^I",["^53","^4E","~$cljs.core/ISet","~$cljs.core/MetaFn","^54"]],"^9",606,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4>"]]]]]],"~$prod-rel",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",141,"^8",7,"^9",141,"^:",15,"^4;",["^1L",["^4<",["^1L",[[],["~$rel1","~$rel2"]]]]],"^6>",["^ ","^4C",false,"^6?",2,"^4F",2,"^4@",["^1L",[[],["^88","^89"]]],"^4;",["^1L",[[],["^88","^89"]]],"^4B",["^1L",[null,null]]]],"^J","~$datascript.query/prod-rel","^6","datascript/query.cljc","^:",15,"^6>",["^ ","^4C",false,"^6?",2,"^4F",2,"^4@",["^1L",[[],["^88","^89"]]],"^4;",["^1L",[[],["^88","^89"]]],"^4B",["^1L",[null,null]]],"^4@",["^1L",[[],["^88","^89"]]],"^4A",null,"^6?",2,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^6A",[["^ ","^6?",0,"^4C",false,"^4U","^58"],["^ ","^6?",2,"^4C",false,"^4U","^58"]],"^7",141,"^9",141,"^4F",2,"^4G",true,"^4;",["^1L",[[],["^88","^89"]]]],"~$lookup-pattern",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",453,"^8",7,"^9",453,"^:",21,"^4;",["^1L",["^4<",["^1L",[["^5M","^4I"]]]]]],"^J","~$datascript.query/lookup-pattern","^6","datascript/query.cljc","^:",21,"^4@",["^1L",[["^5M","^4I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",453,"^4D","^58","^9",453,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5M","^4I"]]]]]],"~$-aggregate",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",845,"^8",7,"^9",845,"^:",17,"^4;",["^1L",["^4<",["^1L",[["^4N","^4=","~$tuples"]]]]]],"^J","~$datascript.query/-aggregate","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^4N","^4=","^8>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",845,"^4D",["^I",[null,"^53","^4E"]],"^9",845,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4N","^4=","^8>"]]]]]],"~$-resolve-clause",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",710,"^8",7,"^9",710,"^:",22,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"],["^4=","^4>","~$orig-clause"]]]]],"^6>",["^ ","^4C",false,"^6?",3,"^4F",3,"^4@",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]],"^4;",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]],"^4B",["^1L",[null,null]]]],"^J","~$datascript.query/-resolve-clause","^6","datascript/query.cljc","^:",22,"^6>",["^ ","^4C",false,"^6?",3,"^4F",3,"^4@",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]],"^4;",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]],"^4B",["^1L",[null,null]]],"^4@",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]],"^4A",null,"^6?",3,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^6A",[["^ ","^6?",2,"^4C",false,"^4U","^4E"],["^ ","^6?",3,"^4C",false,"^4U",["^I",[null,"^53","^4E"]]]],"^7",710,"^9",710,"^4F",3,"^4G",true,"^4;",["^1L",[["^4=","^4>"],["^4=","^4>","^8A"]]]],"~$*lookup-attrs*",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",345,"^8",3,"^9",345,"^:",17,"~:dynamic",true,"^5E","List of symbols in current pattern that might potentiall be resolved to refs"],"^J","~$datascript.query/*lookup-attrs*","^6","datascript/query.cljc","^:",17,"^8",1,"^8D",true,"^7",343,"^9",345,"^4U","^4E","^5E","List of symbols in current pattern that might potentiall be resolved to refs"],"~$*implicit-source*",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",349,"^8",3,"^9",349,"^:",20,"^8D",true,"^5E","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"^J","~$datascript.query/*implicit-source*","^6","datascript/query.cljc","^:",20,"^8",1,"^8D",true,"^7",347,"^9",349,"^4U","^4E","^5E","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"~$->Relation",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^5?",true,"^5@","^5A","^7",35,"^9",35,"^4;",["^1L",["^4<",["^1L",[["^4X","^8>"]]]]],"^5E","Positional factory function for datascript.query/Relation."],"^J","~$datascript.query/->Relation","^6","datascript/query.cljc","^:",20,"^4@",["^1L",[["^4X","^8>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^5?",true,"^4C",false,"^5@","^5A","^7",35,"^4D","^58","^9",35,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4X","^8>"]]]]],"^5E","Positional factory function for datascript.query/Relation."],"~$join-tuples",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",96,"^8",7,"^9",96,"^:",18,"^4;",["^1L",["^4<",["^1L",[["~$t1","~$idxs1","~$t2","~$idxs2"]]]]]],"^J","~$datascript.query/join-tuples","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^8K","^8L","^8M","^8N"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",96,"^4D","~$array","^9",96,"^4F",4,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^8K","^8L","^8M","^8N"]]]]]],"~$IPostProcess",["^ ","^5",["^ ","^6T",true,"^6","datascript/query.cljc","^:",26,"^8",14,"^7",869,"^6U",["^ ","^6A",["^ ","~$-post-process",[["~$find","^8>"]]]],"^9",869,"^6W",["^ ","~:-post-process",["^ ","^J","^8R","^4;",["^1L",[["^8S","^8>"]]],"^5E",null]],"^6Y",["^1L",["@interface"]]],"^6T",true,"^J","~$datascript.query/IPostProcess","^6","datascript/query.cljc","^:",26,"^8",1,"^7",869,"^6U",["^ ","^6A",["^ ","^8R",[["^8S","^8>"]]]],"^6[",null,"^9",869,"^4U","^4E","^6W",["^ ","^8T",["^ ","^J","^8R","^4;",["^1L",[["^8S","^8>"]]],"^5E",null]],"^70",["^I",["~$datascript.parser/FindScalar","~$datascript.parser/FindRel","~$datascript.parser/FindTuple","~$datascript.parser/FindColl"]],"^6Y",["^1L",["@interface"]]],"~$looks-like?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",60,"^8",8,"^9",60,"^:",19,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^4I","^63"]]]]]],"^4S",true,"^J","~$datascript.query/looks-like?","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^4I","^63"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",60,"^4D",["^I",["^4L","^4E"]],"^9",60,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4I","^63"]]]]]],"~$dynamic-lookup-attrs",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",682,"^8",7,"^9",682,"^:",27,"^4;",["^1L",["^4<",["^1L",[["^5M","^4I"]]]]]],"^J","~$datascript.query/dynamic-lookup-attrs","^6","datascript/query.cljc","^:",27,"^4@",["^1L",[["^5M","^4I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",682,"^4D","^53","^9",682,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5M","^4I"]]]]]],"~$lookup-ref?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",91,"^8",7,"^9",91,"^:",18,"^4;",["^1L",["^4<",["^1L",[["^63"]]]]]],"^J","~$datascript.query/lookup-ref?","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^63"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",91,"^4D",["^I",["^4L","^4E"]],"^9",91,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^63"]]]]]],"^6V",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",290,"^8",4,"^9",290,"^:",11,"~:protocol","^6Z","^5E",null,"^4;",["^1L",["^4<",["^1L",[["^56","^5S"]]]]]],"^94","^6Z","^J","~$datascript.query/in->rel","^6","datascript/query.cljc","^:",11,"^4@",["^1L",[["^56","^5S"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",289,"^4D","^4E","^9",290,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^56","^5S"]]]]],"^5E",null],"~$-get-some",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",173,"^8",8,"^9",173,"^:",17,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^11","~$e","~$&","~$as"]]]]],"^6>",["^ ","^4C",true,"^6?",2,"^4F",2,"^4@",[["^1L",["^11","~$e","^97"]]],"^4;",["^1L",[["^11","~$e","~$&","^97"]]],"^4B",["^1L",[null]]]],"^4S",true,"^J","~$datascript.query/-get-some","^6","datascript/query.cljc","^:",17,"^6>",["^ ","^4C",true,"^6?",2,"^4F",2,"^4@",[["^1L",["^11","~$e","^97"]]],"^4;",["^1L",[["^11","~$e","~$&","^97"]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["^11","~$e","^97"]]],"^4A",null,"^6?",2,"^4B",["^1L",[null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",2,"^4C",true,"^4U",["^I",[null,"^4E"]]]],"^7",173,"^4D","^4E","^9",173,"^4F",2,"^4G",true,"^4;",["^1L",[["^11","~$e","~$&","^97"]]]],"~$expand-rule",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",573,"^8",7,"^9",573,"^:",18,"^4;",["^1L",["^4<",["^1L",[["^4>","^4=","^7@"]]]]]],"^J","~$datascript.query/expand-rule","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^4>","^4=","^7@"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",573,"^4D","^4Q","^9",573,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4>","^4=","^7@"]]]]]],"~$same-keys?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",55,"^8",7,"^9",55,"^:",17,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"^J","~$datascript.query/same-keys?","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["~$a","~$b"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",55,"^4D","^4L","^9",55,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"~$resolve-clause",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",787,"^8",7,"^9",787,"^:",21,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"^J","~$datascript.query/resolve-clause","^6","datascript/query.cljc","^:",21,"^4@",["^1L",[["^4=","^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",787,"^4D",["^I",[null,"^53","^4E"]],"^9",787,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"~$limit-context",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",696,"^8",7,"^9",696,"^:",20,"^4;",["^1L",["^4<",["^1L",[["^4=","^51"]]]]]],"^J","~$datascript.query/limit-context","^6","datascript/query.cljc","^:",20,"^4@",["^1L",[["^4=","^51"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",696,"^4D",["^I",["^53","^4E"]],"^9",696,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^51"]]]]]],"~$hash-join",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",381,"^8",7,"^9",381,"^:",16,"^4;",["^1L",["^4<",["^1L",[["^88","^89"]]]]]],"^J","~$datascript.query/hash-join","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^88","^89"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",381,"^4D","^58","^9",381,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^88","^89"]]]]]],"~$-call-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",486,"^8",7,"^9",486,"^:",15,"^4;",["^1L",["^4<",["^1L",[["^4=","^50","~$f","^6="]]]]]],"^J","~$datascript.query/-call-fn","^6","datascript/query.cljc","^:",15,"^4@",["^1L",[["^4=","^50","~$f","^6="]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",486,"^4D","^5K","^9",486,"^4F",4,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^50","~$f","^6="]]]]]],"~$parse-rules",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",280,"^8",7,"^9",280,"^:",18,"^4;",["^1L",["^4<",["^1L",[["^5D"]]]]]],"^J","~$datascript.query/parse-rules","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^5D"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",280,"^4D","^53","^9",280,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5D"]]]]]],"~$memoized-parse-query",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",899,"^8",7,"^9",899,"^:",27,"^4;",["^1L",["^4<",["^1L",[["~$q"]]]]]],"^J","~$datascript.query/memoized-parse-query","^6","datascript/query.cljc","^:",27,"^4@",["^1L",[["~$q"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",899,"^4D",["^I",[null,"^4E","~$datascript.parser/Query"]],"^9",899,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["~$q"]]]]]],"~$built-in-aggregates",["^ ","^J","~$datascript.query/built-in-aggregates","^6","datascript/query.cljc","^7",211,"^8",1,"^9",211,"^:",25,"^5",["^ ","^6","datascript/query.cljc","^7",211,"^8",6,"^9",211,"^:",25]],"~$Context",["^ ","~:num-fields",3,"~:protocols",["^I",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^5;","~$cljs.core/ILookup"]],"^J","^5G","^6","datascript/query.cljc","^:",19,"~:type",true,"^8",12,"^5?",true,"^7",28,"~:record",true,"^9",28,"^4U","^5K","~:skip-protocol-flag",["^I",["^9O","^9P","^9Q","^9R","^9S","^9T","^9U","^9V","^9W","^9X","^9Y","^9Z","^9[","^5;","^:0"]]],"~$sum-rel",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",109,"^8",7,"^9",109,"^:",14,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"^J","~$datascript.query/sum-rel","^6","datascript/query.cljc","^:",14,"^4@",["^1L",[["~$a","~$b"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",109,"^4D",["^I",["^4E","^58"]],"^9",109,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"]]]]]],"~$rel-with-attr",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",470,"^8",8,"^9",470,"^:",21,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^5Y"]]]]]],"^4S",true,"^J","~$datascript.query/rel-with-attr","^6","datascript/query.cljc","^:",21,"^4@",["^1L",[["^4=","^5Y"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",470,"^4D",["^I",["^4E","^54"]],"^9",470,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^5Y"]]]]]],"~$free-var?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",84,"^8",7,"^9",84,"^:",16,"^4;",["^1L",["^4<",["^1L",[["^5Y"]]]]]],"^J","~$datascript.query/free-var?","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^5Y"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",84,"^4D","^4L","^9",84,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5Y"]]]]]],"~$map->Context",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"^5?",true,"^5@","~:map","^7",28,"^9",28,"^4;",["^1L",["^4<",["^1L",[["~$G__23884"]]]]],"^5E","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^J","~$datascript.query/map->Context","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^:<"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^5?",true,"^4C",false,"^5@","^:;","^7",28,"^4D","^5G","^9",28,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^:<"]]]]],"^5E","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^76",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",828,"^8",4,"^9",828,"^:",20,"^94","^79","^5E",null,"^4;",["^1L",["^4<",["^1L",[["^77","^4="]]]]]],"^94","^79","^J","~$datascript.query/-context-resolve","^6","datascript/query.cljc","^:",20,"^4@",["^1L",[["^77","^4="]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",827,"^4D","^4E","^9",828,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^77","^4="]]]]],"^5E",null],"~$Relation",["^ ","^9M",2,"^9N",["^I",["^9O","^9P","^9Q","^9R","^9S","^9T","^9U","^9V","^9W","^9X","^9Y","^9Z","^9[","^5;","^:0"]],"^J","^58","^6","datascript/query.cljc","^:",20,"^:1",true,"^8",12,"^5?",true,"^7",35,"^:2",true,"^9",35,"^4U","^5K","^:3",["^I",["^9O","^9P","^9Q","^9R","^9S","^9T","^9U","^9V","^9W","^9X","^9Y","^9Z","^9[","^5;","^:0"]]],"~$filter-by-pred",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",524,"^8",7,"^9",524,"^:",21,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"^J","~$datascript.query/filter-by-pred","^6","datascript/query.cljc","^:",21,"^4@",["^1L",[["^4=","^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",524,"^4D",["^I",["^53","^4E"]],"^9",524,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^4>"]]]]]],"~$split-guards",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",609,"^8",7,"^9",609,"^:",19,"^4;",["^1L",["^4<",["^1L",[["^60","~$guards"]]]]]],"^J","~$datascript.query/split-guards","^6","datascript/query.cljc","^:",19,"^4@",["^1L",[["^60","^:C"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",609,"^4D","^4Z","^9",609,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^60","^:C"]]]]]],"~$normalize-pattern-clause",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",448,"^8",7,"^9",448,"^:",31,"^4;",["^1L",["^4<",["^1L",[["^4>"]]]]]],"^J","~$datascript.query/normalize-pattern-clause","^6","datascript/query.cljc","^:",31,"^4@",["^1L",[["^4>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",448,"^4D",["^I",[null,"^4Q"]],"^9",448,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4>"]]]]]],"~$collect",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",822,"^8",7,"^9",822,"^:",14,"^4;",["^1L",["^4<",["^1L",[["^4=","^6F"]]]]]],"^J","~$datascript.query/collect","^6","datascript/query.cljc","^:",14,"^4@",["^1L",[["^4=","^6F"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",822,"^4D",["^I",["^53","^4E","^85","^86","^54"]],"^9",822,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^6F"]]]]]],"~$zip",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",51,"^8",7,"^9",51,"^:",10,"^4;",["^1L",["^4<",["^1L",[["~$a","~$b"],["~$a","~$b","~$&","~$rest"]]]]],"^6>",["^ ","^4C",true,"^6?",2,"^4F",2,"^4@",["^1L",[["~$a","~$b"]]],"^4;",["^1L",[["~$a","~$b"],["~$a","~$b","~$&","^:J"]]],"^4B",["^1L",[null,null]]]],"^J","~$datascript.query/zip","^6","datascript/query.cljc","^:",10,"^6>",["^ ","^4C",true,"^6?",2,"^4F",2,"^4@",["^1L",[["~$a","~$b"]]],"^4;",["^1L",[["~$a","~$b"],["~$a","~$b","~$&","^:J"]]],"^4B",["^1L",[null,null]]],"^4@",["^1L",[["~$a","~$b"]]],"^4A",null,"^6?",2,"^4B",["^1L",[null,null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",2,"^4C",false,"^4U",["^I",[null,"^53","^4E"]]],["^ ","^6?",2,"^4C",true,"^4U","^4E"]],"^7",51,"^9",51,"^4F",2,"^4G",true,"^4;",["^1L",[["~$a","~$b"],["~$a","~$b","~$&","^:J"]]]],"~$map->Relation",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^5?",true,"^5@","^:;","^7",35,"^9",35,"^4;",["^1L",["^4<",["^1L",[["~$G__23907"]]]]],"^5E","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"^J","~$datascript.query/map->Relation","^6","datascript/query.cljc","^:",20,"^4@",["^1L",[["^:M"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^5?",true,"^4C",false,"^5@","^:;","^7",35,"^4D","^58","^9",35,"^4F",1,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^:M"]]]]],"^5E","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"~$-differ?",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",161,"^8",8,"^9",161,"^:",16,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["~$&","^7I"]]]]],"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^7I"]]],"^4;",["^1L",[["~$&","^7I"]]],"^4B",["^1L",[null]]]],"^4S",true,"^J","~$datascript.query/-differ?","^6","datascript/query.cljc","^:",16,"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^7I"]]],"^4;",["^1L",[["~$&","^7I"]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["^7I"]]],"^4A",null,"^6?",0,"^4B",["^1L",[null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",0,"^4C",true,"^4U","^4L"]],"^7",161,"^4D","^4E","^9",161,"^4F",0,"^4G",true,"^4;",["^1L",[["~$&","^7I"]]]],"~$hash-attrs",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",372,"^8",7,"^9",372,"^:",17,"^4;",["^1L",["^4<",["^1L",[["~$key-fn","^8>"]]]]]],"^J","~$datascript.query/hash-attrs","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^:R","^8>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",372,"^4D","^53","^9",372,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^:R","^8>"]]]]]],"~$check-bound",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",701,"^8",7,"^9",701,"^:",18,"^4;",["^1L",["^4<",["^1L",[["^4=","^51","^63"]]]]]],"^J","~$datascript.query/check-bound","^6","datascript/query.cljc","^:",18,"^4@",["^1L",[["^4=","^51","^63"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",701,"^4D","^54","^9",701,"^4F",3,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4=","^51","^63"]]]]]],"~$lookup-pattern-db",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",421,"^8",7,"^9",421,"^:",24,"^4;",["^1L",["^4<",["^1L",[["^11","^4I"]]]]]],"^J","~$datascript.query/lookup-pattern-db","^6","datascript/query.cljc","^:",24,"^4@",["^1L",[["^11","^4I"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",421,"^4D","^58","^9",421,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^11","^4I"]]]]]],"^8R",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",870,"^8",4,"^9",870,"^:",17,"^94","^8U","^5E",null,"^4;",["^1L",["^4<",["^1L",[["^8S","^8>"]]]]]],"^94","^8U","^J","~$datascript.query/-post-process","^6","datascript/query.cljc","^:",17,"^4@",["^1L",[["^8S","^8>"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",869,"^4D","^4E","^9",870,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^8S","^8>"]]]]],"^5E",null],"~$and-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",186,"^8",8,"^9",186,"^:",14,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["~$&","^6="]]]]],"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^6="]]],"^4;",["^1L",[["~$&","^6="]]],"^4B",["^1L",[null]]]],"^4S",true,"^J","~$datascript.query/and-fn","^6","datascript/query.cljc","^:",14,"^6>",["^ ","^4C",true,"^6?",0,"^4F",0,"^4@",[["^1L",["^6="]]],"^4;",["^1L",[["~$&","^6="]]],"^4B",["^1L",[null]]],"^4@",[["^1L",["^6="]]],"^4A",null,"^6?",0,"^4B",["^1L",[null]],"^8",1,"^4C",true,"^6A",[["^ ","^6?",0,"^4C",true,"^4U",["^I",[null,"^4E"]]]],"^7",186,"^4D","^4E","^9",186,"^4F",0,"^4G",true,"^4;",["^1L",[["~$&","^6="]]]],"~$collapse-rels",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",460,"^8",7,"^9",460,"^:",20,"^4;",["^1L",["^4<",["^1L",[["^5B","~$new-rel"]]]]]],"^J","~$datascript.query/collapse-rels","^6","datascript/query.cljc","^:",20,"^4@",["^1L",[["^5B","^;0"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",460,"^4D","^53","^9",460,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^5B","^;0"]]]]]],"~$idxs-of",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",857,"^8",8,"^9",857,"^:",15,"^4S",true,"^4;",["^1L",["^4<",["^1L",[["^6N","^6Q"]]]]]],"^4S",true,"^J","~$datascript.query/idxs-of","^6","datascript/query.cljc","^:",15,"^4@",["^1L",[["^6N","^6Q"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",857,"^4D","^4Q","^9",857,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^6N","^6Q"]]]]]],"~$getter-fn",["^ ","^4:",null,"^5",["^ ","^6","datascript/query.cljc","^7",351,"^8",7,"^9",351,"^:",16,"^4;",["^1L",["^4<",["^1L",[["^4X","~$attr"]]]]]],"^J","~$datascript.query/getter-fn","^6","datascript/query.cljc","^:",16,"^4@",["^1L",[["^4X","^;5"]]],"^4A",null,"^4B",["^1L",[null,null]],"^8",1,"^4C",false,"^7",351,"^4D","^5K","^9",351,"^4F",2,"^4G",true,"^4;",["^1L",["^4<",["^1L",[["^4X","^;5"]]]]]]],"^1J",["^ ","^P","^Q","^X","^X","^10","^10","^11","^G","^G","^G","^Q","^Q","^17","^10","^18","^18","^19","^18"],"~:cljs.analyzer/constants",["^ ","^1:",["^I",["~:used-args","~:args","~$contains?","~$subs","^R","~$get-else","~$println-str","~:tuples","~$clojure.string/starts-with?","~$namespace","~$=","~$rand-int","~$dec","~:where","~:v","~:fn","~$<","~$clojure.string/blank?","~:variable","~$re-seq","~$some?","~$range","~$sum","~:else","~$pos?","~$neg?","^8>","~:bindings","~:symbol","~:sources","~$<=","~:query/binding","~$*","~$re-pattern","~$min","~$prn-str","~:value","~:prefix-context","~$get-some","~$identity","~$meta","~$clojure.string/ends-with?","~$empty?","~$quot","~$clojure.string/includes?","~$stddev","~:qfind","~$not=","~$or-join","~$ground","~$rand","~$>","^1Y","~$even?","~$_","~:rules","~$pr-str","^5C","~$mod","~:qin","~:qwith","~$-","~$or","~$name","~:rels","~$zero?","~:binding","~$rem","~$nil?","~$variance","~:var","~$re-find","~$not","~$type","~$identical?","~$$","~:with","~:pending-guards","~$not-join","~$true?","^5D","~$/","~$vector","~$>=","~$not-empty","~$distinct","~:attrs","~$sample","~:error","~$re-matches","~$array-map","^5B","~:clauses","~$odd?","^1K","~$inc","~$list","~$+","~$missing?","~$median","^13","~$hash-map","~$false?","~$max","~:query/where","~$!=","~$==","~$count","~:prefix-clauses","^:O","~$compare","~$complement","~$count-distinct","~$and","~:a","~$print-str","^4X","~$avg","~:vars","~:pattern"]],"~:order",["^<A","^;P","^<:","^5B","^5C","^5D","^<T","^;>","^4X","^8>","~$_","~$*","^;K","^<V","^=6","~:v","~:a","^<O","^=>","^<Z","^;<","^<Q","^=?","~$>","^=9","^;X","^<E","^<[","~$/","^<1","^=4","^<I","^;Y","^:O","^;G","^;Q","^;?","~$=","^;T","~$+","^<@","^=1","^<7","^;A","^=<","^=8","^=3","^=;","^;I","^=5","^<0","^<;","^;=","^;Z","^<B","^=7","^;U","^;B","^;S","^<P","^<5","^13","~$<","^;@","~$-","^;H","^;L","^<8","^<W","^=0","^;:","^;[","^;;","^<<","^<2","^<X","^<D","^<9","^<J","^;M","^;E","^<R","^<?","^<K","^R","^<H","^<F","^=2","^;J","^==","^<S","^=@","^<3","^<U","^;O","^;F","^;V","^<C","^;R","^;N","~$$","^1K","^<G","^=:","^;W","^<Y","^;8","^<M","^=A","^<6","^<N","^;D","^;9","^1Y","^=B","^<4","^<>","^;C","^<=","^<L"]],"^1Q",["^ ","^1;",["^I",[]]],"^1R",["^ "],"^1S",["^Y","^X","^18","^S","^14","^[","^G","^Q","^12","^16","^10","^W","^U"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^25",[["^=F","~:static-fns"],true,["^=F","~:shadow-tweaks"],null,["^=F","~:elide-asserts"],true,["^=F","~:optimize-constants"],null,["^=F","^1X"],null,["^=F","~:external-config"],null,["^=F","~:tooling-config"],null,["^=F","~:emit-constants"],null,["^=F","~:load-tests"],false,["^=F","~:form-size-threshold"],null,["^=F","~:infer-externs"],true,["^=F","^1Z"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^=F","~:fn-invoke-direct"],null,["^=F","~:source-map"],null]]]