["^ ","~:output",["^ ","~:js","goog.provide('datascript.db');\ndatascript.db.Exception = Error;\n\ndatascript.db.IllegalArgumentException = Error;\n\ndatascript.db.UnsupportedOperationException = Error;\ndatascript.db.e0 = (0);\ndatascript.db.tx0 = (536870912);\ndatascript.db.emax = (2147483647);\ndatascript.db.txmax = (2147483647);\ndatascript.db.implicit_schema = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"ident\",\"db/ident\",-737096),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722)], null)], null);\ndatascript.db.seqable_QMARK_ = (function datascript$db$seqable_QMARK_(x){\nreturn (((!(typeof x === 'string'))) && (((cljs.core.seqable_QMARK_(x)) || (me.tonsky.persistent_sorted_set.arrays.array_QMARK_(x)))));\n});\n/**\n * Take the &env from a macro, and tell whether we are expanding into cljs.\n */\ndatascript.db.cljs_env_QMARK_ = (function datascript$db$cljs_env_QMARK_(env){\nreturn cljs.core.boolean$(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\n});\ndatascript.db.combine_hashes = (function datascript$db$combine_hashes(x,y){\nreturn cljs.core.hash_combine(x,y);\n});\n\n\n\n\n\n\n/**\n * @interface\n */\ndatascript.db.IDatom = function(){};\n\ndatascript.db.datom_tx = (function datascript$db$datom_tx(this$){\nif((((!((this$ == null)))) && ((!((this$.datascript$db$IDatom$datom_tx$arity$1 == null)))))){\nreturn this$.datascript$db$IDatom$datom_tx$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (datascript.db.datom_tx[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (datascript.db.datom_tx[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDatom.datom-tx\",this$);\n}\n}\n}\n});\n\ndatascript.db.datom_added = (function datascript$db$datom_added(this$){\nif((((!((this$ == null)))) && ((!((this$.datascript$db$IDatom$datom_added$arity$1 == null)))))){\nreturn this$.datascript$db$IDatom$datom_added$arity$1(this$);\n} else {\nvar x__4487__auto__ = (((this$ == null))?null:this$);\nvar m__4488__auto__ = (datascript.db.datom_added[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4488__auto__.call(null,this$));\n} else {\nvar m__4485__auto__ = (datascript.db.datom_added[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4485__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDatom.datom-added\",this$);\n}\n}\n}\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {datascript.db.IDatom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.db.Datom = (function (e,a,v,tx,_hash){\nthis.e = e;\nthis.a = a;\nthis.v = v;\nthis.tx = tx;\nthis._hash = _hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2162164496;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(datascript.db.Datom.prototype.datascript$db$IDatom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.Datom.prototype.datascript$db$IDatom$datom_tx$arity$1 = (function (d){\nvar self__ = this;\nvar d__$1 = this;\nif((self__.tx > (0))){\nreturn self__.tx;\n} else {\nreturn (- self__.tx);\n}\n}));\n\n(datascript.db.Datom.prototype.datascript$db$IDatom$datom_added$arity$1 = (function (d){\nvar self__ = this;\nvar d__$1 = this;\nreturn (self__.tx > (0));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IHash$_hash$arity$1 = (function (d){\nvar self__ = this;\nvar d__$1 = this;\nif((self__._hash === (0))){\nreturn (self__._hash = (datascript.db.hash_datom.cljs$core$IFn$_invoke$arity$1 ? datascript.db.hash_datom.cljs$core$IFn$_invoke$arity$1(d__$1) : datascript.db.hash_datom.call(null,d__$1)));\n} else {\nreturn self__._hash;\n}\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (d,o){\nvar self__ = this;\nvar d__$1 = this;\nif((o instanceof datascript.db.Datom)){\nreturn (datascript.db.equiv_datom.cljs$core$IFn$_invoke$arity$2 ? datascript.db.equiv_datom.cljs$core$IFn$_invoke$arity$2(d__$1,o) : datascript.db.equiv_datom.call(null,d__$1,o));\n} else {\nreturn false;\n}\n}));\n\n(datascript.db.Datom.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (d){\nvar self__ = this;\nvar d__$1 = this;\nreturn (datascript.db.seq_datom.cljs$core$IFn$_invoke$arity$1 ? datascript.db.seq_datom.cljs$core$IFn$_invoke$arity$1(d__$1) : datascript.db.seq_datom.call(null,d__$1));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (d,k){\nvar self__ = this;\nvar d__$1 = this;\nreturn (datascript.db.val_at_datom.cljs$core$IFn$_invoke$arity$3 ? datascript.db.val_at_datom.cljs$core$IFn$_invoke$arity$3(d__$1,k,null) : datascript.db.val_at_datom.call(null,d__$1,k,null));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (d,k,nf){\nvar self__ = this;\nvar d__$1 = this;\nreturn (datascript.db.val_at_datom.cljs$core$IFn$_invoke$arity$3 ? datascript.db.val_at_datom.cljs$core$IFn$_invoke$arity$3(d__$1,k,nf) : datascript.db.val_at_datom.call(null,d__$1,k,nf));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,i){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$2 ? datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$2(this$__$1,i) : datascript.db.nth_datom.call(null,this$__$1,i));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,i,not_found){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$3 ? datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$3(this$__$1,i,not_found) : datascript.db.nth_datom.call(null,this$__$1,i,not_found));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (d,k,v__$1){\nvar self__ = this;\nvar d__$1 = this;\nreturn (datascript.db.assoc_datom.cljs$core$IFn$_invoke$arity$3 ? datascript.db.assoc_datom.cljs$core$IFn$_invoke$arity$3(d__$1,k,v__$1) : datascript.db.assoc_datom.call(null,d__$1,k,v__$1));\n}));\n\n(datascript.db.Datom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (d,writer,opts){\nvar self__ = this;\nvar d__$1 = this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\"#datascript/Datom [\",\" \",\"]\",opts,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [d__$1.e,d__$1.a,d__$1.v,d__$1.datascript$db$IDatom$datom_tx$arity$1(null),d__$1.datascript$db$IDatom$datom_added$arity$1(null)], null));\n}));\n\n(datascript.db.Datom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"e\",\"e\",-1273166571,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null)], null)),new cljs.core.Symbol(null,\"a\",\"a\",-482876059,null),new cljs.core.Symbol(null,\"v\",\"v\",1661996586,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"tx\",\"tx\",2107161945,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"_hash\",\"_hash\",-2130838312,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(datascript.db.Datom.cljs$lang$type = true);\n\n(datascript.db.Datom.cljs$lang$ctorStr = \"datascript.db/Datom\");\n\n(datascript.db.Datom.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"datascript.db/Datom\");\n}));\n\n/**\n * Positional factory function for datascript.db/Datom.\n */\ndatascript.db.__GT_Datom = (function datascript$db$__GT_Datom(e,a,v,tx,_hash){\nreturn (new datascript.db.Datom(e,a,v,tx,_hash));\n});\n\ngoog.exportSymbol(\"datascript.db.Datom\",datascript.db.Datom);\ndatascript.db.datom = (function datascript$db$datom(var_args){\nvar G__21204 = arguments.length;\nswitch (G__21204) {\ncase 3:\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.db.datom.cljs$core$IFn$_invoke$arity$3 = (function (e,a,v){\nreturn (new datascript.db.Datom(e,a,v,(536870912),(0)));\n}));\n\n(datascript.db.datom.cljs$core$IFn$_invoke$arity$4 = (function (e,a,v,tx){\nreturn (new datascript.db.Datom(e,a,v,tx,(0)));\n}));\n\n(datascript.db.datom.cljs$core$IFn$_invoke$arity$5 = (function (e,a,v,tx,added){\nreturn (new datascript.db.Datom(e,a,v,(cljs.core.truth_(added)?tx:(- tx)),(0)));\n}));\n\n(datascript.db.datom.cljs$lang$maxFixedArity = 5);\n\ndatascript.db.datom_QMARK_ = (function datascript$db$datom_QMARK_(x){\nreturn (x instanceof datascript.db.Datom);\n});\ndatascript.db.hash_datom = (function datascript$db$hash_datom(d){\nreturn datascript.db.combine_hashes(datascript.db.combine_hashes(cljs.core.hash(d.e),cljs.core.hash(d.a)),cljs.core.hash(d.v));\n});\ndatascript.db.equiv_datom = (function datascript$db$equiv_datom(d,o){\nreturn (((d.e === o.e)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d.a,o.a)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d.v,o.v)));\n});\ndatascript.db.seq_datom = (function datascript$db$seq_datom(d){\nreturn (new cljs.core.List(null,d.e,(new cljs.core.List(null,d.a,(new cljs.core.List(null,d.v,(new cljs.core.List(null,d.datascript$db$IDatom$datom_tx$arity$1(null),(new cljs.core.List(null,d.datascript$db$IDatom$datom_added$arity$1(null),null,(1),null)),(2),null)),(3),null)),(4),null)),(5),null));\n});\ndatascript.db.val_at_datom = (function datascript$db$val_at_datom(d,k,not_found){\nvar G__21205 = k;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"v\",\"v\",21465059),G__21205)){\nreturn d.v;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"e\",G__21205)){\nreturn d.e;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"added\",\"added\",2057651688),G__21205)){\nreturn d.datascript$db$IDatom$datom_added$arity$1(null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"v\",G__21205)){\nreturn d.v;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"e\",\"e\",1381269198),G__21205)){\nreturn d.e;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"a\",G__21205)){\nreturn d.a;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tx\",\"tx\",466630418),G__21205)){\nreturn d.datascript$db$IDatom$datom_tx$arity$1(null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"added\",G__21205)){\nreturn d.datascript$db$IDatom$datom_added$arity$1(null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"tx\",G__21205)){\nreturn d.datascript$db$IDatom$datom_tx$arity$1(null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"a\",\"a\",-2123407586),G__21205)){\nreturn d.a;\n} else {\nreturn not_found;\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndatascript.db.nth_datom = (function datascript$db$nth_datom(var_args){\nvar G__21207 = arguments.length;\nswitch (G__21207) {\ncase 2:\nreturn datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$2 = (function (d,i){\nvar G__21208 = i;\nswitch (G__21208) {\ncase (0):\nreturn d.e;\n\nbreak;\ncase (1):\nreturn d.a;\n\nbreak;\ncase (2):\nreturn d.v;\n\nbreak;\ncase (3):\nreturn d.datascript$db$IDatom$datom_tx$arity$1(null);\n\nbreak;\ncase (4):\nreturn d.datascript$db$IDatom$datom_added$arity$1(null);\n\nbreak;\ndefault:\nthrow (new Error([\"Datom/-nth: Index out of bounds: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)].join('')));\n\n}\n}));\n\n(datascript.db.nth_datom.cljs$core$IFn$_invoke$arity$3 = (function (d,i,not_found){\nvar G__21209 = i;\nswitch (G__21209) {\ncase (0):\nreturn d.e;\n\nbreak;\ncase (1):\nreturn d.a;\n\nbreak;\ncase (2):\nreturn d.v;\n\nbreak;\ncase (3):\nreturn d.datascript$db$IDatom$datom_tx$arity$1(null);\n\nbreak;\ncase (4):\nreturn d.datascript$db$IDatom$datom_added$arity$1(null);\n\nbreak;\ndefault:\nreturn not_found;\n\n}\n}));\n\n(datascript.db.nth_datom.cljs$lang$maxFixedArity = 3);\n\ndatascript.db.assoc_datom = (function datascript$db$assoc_datom(d,k,v){\nvar G__21210 = k;\nvar G__21210__$1 = (((G__21210 instanceof cljs.core.Keyword))?G__21210.fqn:null);\nswitch (G__21210__$1) {\ncase \"e\":\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5(v,d.a,d.v,d.datascript$db$IDatom$datom_tx$arity$1(null),d.datascript$db$IDatom$datom_added$arity$1(null));\n\nbreak;\ncase \"a\":\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5(d.e,v,d.v,d.datascript$db$IDatom$datom_tx$arity$1(null),d.datascript$db$IDatom$datom_added$arity$1(null));\n\nbreak;\ncase \"v\":\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5(d.e,d.a,v,d.datascript$db$IDatom$datom_tx$arity$1(null),d.datascript$db$IDatom$datom_added$arity$1(null));\n\nbreak;\ncase \"tx\":\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5(d.e,d.a,d.v,v,d.datascript$db$IDatom$datom_added$arity$1(null));\n\nbreak;\ncase \"added\":\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$5(d.e,d.a,d.v,d.datascript$db$IDatom$datom_tx$arity$1(null),v);\n\nbreak;\ndefault:\nthrow (new datascript.db.IllegalArgumentException([\"invalid key for #datascript/Datom: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)].join('')));\n\n}\n});\ndatascript.db.datom_from_reader = (function datascript$db$datom_from_reader(vec){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(datascript.db.datom,vec);\n});\ndatascript.db.cmp = (function datascript$db$cmp(o1,o2){\nif((o1 == null)){\nreturn (0);\n} else {\nif((o2 == null)){\nreturn (0);\n} else {\nreturn cljs.core.compare(o1,o2);\n}\n}\n});\ndatascript.db.cmp_datoms_eavt = (function datascript$db$cmp_datoms_eavt(d1,d2){\nvar c__20612__auto__ = (d1.e - d2.e);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = datascript.db.cmp(d1.a,d2.a);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = datascript.db.cmp(d1.v,d2.v);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.cmp_datoms_aevt = (function datascript$db$cmp_datoms_aevt(d1,d2){\nvar c__20612__auto__ = datascript.db.cmp(d1.a,d2.a);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = (d1.e - d2.e);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = datascript.db.cmp(d1.v,d2.v);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.cmp_datoms_avet = (function datascript$db$cmp_datoms_avet(d1,d2){\nvar c__20612__auto__ = datascript.db.cmp(d1.a,d2.a);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = datascript.db.cmp(d1.v,d2.v);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = (d1.e - d2.e);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.cmp_attr_quick = (function datascript$db$cmp_attr_quick(a1,a2){\nif((a1 instanceof cljs.core.Keyword)){\nreturn cljs.core._compare(a1,a2);\n} else {\nreturn goog.array.defaultCompare(a1,a2);\n}\n});\ndatascript.db.cmp_datoms_eavt_quick = (function datascript$db$cmp_datoms_eavt_quick(d1,d2){\nvar c__20612__auto__ = (d1.e - d2.e);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = datascript.db.cmp_attr_quick(d1.a,d2.a);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = cljs.core.compare(d1.v,d2.v);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.cmp_datoms_aevt_quick = (function datascript$db$cmp_datoms_aevt_quick(d1,d2){\nvar c__20612__auto__ = datascript.db.cmp_attr_quick(d1.a,d2.a);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = (d1.e - d2.e);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = cljs.core.compare(d1.v,d2.v);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.cmp_datoms_avet_quick = (function datascript$db$cmp_datoms_avet_quick(d1,d2){\nvar c__20612__auto__ = datascript.db.cmp_attr_quick(d1.a,d2.a);\nif(((0) === c__20612__auto__)){\nvar c__20612__auto____$1 = cljs.core.compare(d1.v,d2.v);\nif(((0) === c__20612__auto____$1)){\nvar c__20612__auto____$2 = (d1.e - d2.e);\nif(((0) === c__20612__auto____$2)){\nvar c__20612__auto____$3 = (d1.datascript$db$IDatom$datom_tx$arity$1(null) - d2.datascript$db$IDatom$datom_tx$arity$1(null));\nif(((0) === c__20612__auto____$3)){\nreturn (0);\n} else {\nreturn c__20612__auto____$3;\n}\n} else {\nreturn c__20612__auto____$2;\n}\n} else {\nreturn c__20612__auto____$1;\n}\n} else {\nreturn c__20612__auto__;\n}\n});\ndatascript.db.diff_sorted = (function datascript$db$diff_sorted(a,b,cmp){\nvar only_a = cljs.core.PersistentVector.EMPTY;\nvar only_b = cljs.core.PersistentVector.EMPTY;\nvar both = cljs.core.PersistentVector.EMPTY;\nvar a__$1 = a;\nvar b__$1 = b;\nwhile(true){\nif(cljs.core.empty_QMARK_(a__$1)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty(only_a),cljs.core.not_empty(cljs.core.into.cljs$core$IFn$_invoke$arity$2(only_b,b__$1)),cljs.core.not_empty(both)], null);\n} else {\nif(cljs.core.empty_QMARK_(b__$1)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty(cljs.core.into.cljs$core$IFn$_invoke$arity$2(only_a,a__$1)),cljs.core.not_empty(only_b),cljs.core.not_empty(both)], null);\n} else {\nvar first_a = cljs.core.first(a__$1);\nvar first_b = cljs.core.first(b__$1);\nvar diff = (cmp.cljs$core$IFn$_invoke$arity$2 ? cmp.cljs$core$IFn$_invoke$arity$2(first_a,first_b) : cmp.call(null,first_a,first_b));\nif((diff === (0))){\nvar G__21588 = only_a;\nvar G__21589 = only_b;\nvar G__21590 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(both,first_a);\nvar G__21591 = cljs.core.next(a__$1);\nvar G__21592 = cljs.core.next(b__$1);\nonly_a = G__21588;\nonly_b = G__21589;\nboth = G__21590;\na__$1 = G__21591;\nb__$1 = G__21592;\ncontinue;\n} else {\nif((diff < (0))){\nvar G__21593 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(only_a,first_a);\nvar G__21594 = only_b;\nvar G__21595 = both;\nvar G__21596 = cljs.core.next(a__$1);\nvar G__21597 = b__$1;\nonly_a = G__21593;\nonly_b = G__21594;\nboth = G__21595;\na__$1 = G__21596;\nb__$1 = G__21597;\ncontinue;\n} else {\nif((diff > (0))){\nvar G__21598 = only_a;\nvar G__21599 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(only_b,first_b);\nvar G__21600 = both;\nvar G__21601 = a__$1;\nvar G__21602 = cljs.core.next(b__$1);\nonly_a = G__21598;\nonly_b = G__21599;\nboth = G__21600;\na__$1 = G__21601;\nb__$1 = G__21602;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n\n}\n}\nbreak;\n}\n});\n\n/**\n * @interface\n */\ndatascript.db.ISearch = function(){};\n\ndatascript.db._search = (function datascript$db$_search(data,pattern){\nif((((!((data == null)))) && ((!((data.datascript$db$ISearch$_search$arity$2 == null)))))){\nreturn data.datascript$db$ISearch$_search$arity$2(data,pattern);\n} else {\nvar x__4487__auto__ = (((data == null))?null:data);\nvar m__4488__auto__ = (datascript.db._search[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(data,pattern) : m__4488__auto__.call(null,data,pattern));\n} else {\nvar m__4485__auto__ = (datascript.db._search[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(data,pattern) : m__4485__auto__.call(null,data,pattern));\n} else {\nthrow cljs.core.missing_protocol(\"ISearch.-search\",data);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\ndatascript.db.IIndexAccess = function(){};\n\ndatascript.db._datoms = (function datascript$db$_datoms(db,index,components){\nif((((!((db == null)))) && ((!((db.datascript$db$IIndexAccess$_datoms$arity$3 == null)))))){\nreturn db.datascript$db$IIndexAccess$_datoms$arity$3(db,index,components);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._datoms[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4488__auto__.call(null,db,index,components));\n} else {\nvar m__4485__auto__ = (datascript.db._datoms[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4485__auto__.call(null,db,index,components));\n} else {\nthrow cljs.core.missing_protocol(\"IIndexAccess.-datoms\",db);\n}\n}\n}\n});\n\ndatascript.db._seek_datoms = (function datascript$db$_seek_datoms(db,index,components){\nif((((!((db == null)))) && ((!((db.datascript$db$IIndexAccess$_seek_datoms$arity$3 == null)))))){\nreturn db.datascript$db$IIndexAccess$_seek_datoms$arity$3(db,index,components);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._seek_datoms[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4488__auto__.call(null,db,index,components));\n} else {\nvar m__4485__auto__ = (datascript.db._seek_datoms[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4485__auto__.call(null,db,index,components));\n} else {\nthrow cljs.core.missing_protocol(\"IIndexAccess.-seek-datoms\",db);\n}\n}\n}\n});\n\ndatascript.db._rseek_datoms = (function datascript$db$_rseek_datoms(db,index,components){\nif((((!((db == null)))) && ((!((db.datascript$db$IIndexAccess$_rseek_datoms$arity$3 == null)))))){\nreturn db.datascript$db$IIndexAccess$_rseek_datoms$arity$3(db,index,components);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._rseek_datoms[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4488__auto__.call(null,db,index,components));\n} else {\nvar m__4485__auto__ = (datascript.db._rseek_datoms[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$3(db,index,components) : m__4485__auto__.call(null,db,index,components));\n} else {\nthrow cljs.core.missing_protocol(\"IIndexAccess.-rseek-datoms\",db);\n}\n}\n}\n});\n\ndatascript.db._index_range = (function datascript$db$_index_range(db,attr,start,end){\nif((((!((db == null)))) && ((!((db.datascript$db$IIndexAccess$_index_range$arity$4 == null)))))){\nreturn db.datascript$db$IIndexAccess$_index_range$arity$4(db,attr,start,end);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._index_range[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$4(db,attr,start,end) : m__4488__auto__.call(null,db,attr,start,end));\n} else {\nvar m__4485__auto__ = (datascript.db._index_range[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$4(db,attr,start,end) : m__4485__auto__.call(null,db,attr,start,end));\n} else {\nthrow cljs.core.missing_protocol(\"IIndexAccess.-index-range\",db);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\ndatascript.db.IDB = function(){};\n\ndatascript.db._schema = (function datascript$db$_schema(db){\nif((((!((db == null)))) && ((!((db.datascript$db$IDB$_schema$arity$1 == null)))))){\nreturn db.datascript$db$IDB$_schema$arity$1(db);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._schema[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$1(db) : m__4488__auto__.call(null,db));\n} else {\nvar m__4485__auto__ = (datascript.db._schema[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$1(db) : m__4485__auto__.call(null,db));\n} else {\nthrow cljs.core.missing_protocol(\"IDB.-schema\",db);\n}\n}\n}\n});\n\ndatascript.db._attrs_by = (function datascript$db$_attrs_by(db,property){\nif((((!((db == null)))) && ((!((db.datascript$db$IDB$_attrs_by$arity$2 == null)))))){\nreturn db.datascript$db$IDB$_attrs_by$arity$2(db,property);\n} else {\nvar x__4487__auto__ = (((db == null))?null:db);\nvar m__4488__auto__ = (datascript.db._attrs_by[goog.typeOf(x__4487__auto__)]);\nif((!((m__4488__auto__ == null)))){\nreturn (m__4488__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4488__auto__.cljs$core$IFn$_invoke$arity$2(db,property) : m__4488__auto__.call(null,db,property));\n} else {\nvar m__4485__auto__ = (datascript.db._attrs_by[\"_\"]);\nif((!((m__4485__auto__ == null)))){\nreturn (m__4485__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4485__auto__.cljs$core$IFn$_invoke$arity$2(db,property) : m__4485__auto__.call(null,db,property));\n} else {\nthrow cljs.core.missing_protocol(\"IDB.-attrs-by\",db);\n}\n}\n}\n});\n\n\n\n\n\n\n\n\ndatascript.db.db_transient = (function datascript$db$db_transient(db){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.transient$),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),cljs.core.transient$),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),cljs.core.transient$);\n});\ndatascript.db.db_persistent_BANG_ = (function datascript$db$db_persistent_BANG_(db){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.persistent_BANG_),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),cljs.core.persistent_BANG_),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),cljs.core.persistent_BANG_);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.db.DB = (function (schema,eavt,aevt,avet,max_eid,max_tx,rschema,hash,__meta,__extmap,__hash){\nthis.schema = schema;\nthis.eavt = eavt;\nthis.aevt = aevt;\nthis.avet = avet;\nthis.max_eid = max_eid;\nthis.max_tx = max_tx;\nthis.rschema = rschema;\nthis.hash = hash;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.db.DB.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(datascript.db.DB.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k21214,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__21218 = k21214;\nvar G__21218__$1 = (((G__21218 instanceof cljs.core.Keyword))?G__21218.fqn:null);\nswitch (G__21218__$1) {\ncase \"schema\":\nreturn self__.schema;\n\nbreak;\ncase \"eavt\":\nreturn self__.eavt;\n\nbreak;\ncase \"aevt\":\nreturn self__.aevt;\n\nbreak;\ncase \"avet\":\nreturn self__.avet;\n\nbreak;\ncase \"max-eid\":\nreturn self__.max_eid;\n\nbreak;\ncase \"max-tx\":\nreturn self__.max_tx;\n\nbreak;\ncase \"rschema\":\nreturn self__.rschema;\n\nbreak;\ncase \"hash\":\nreturn self__.hash;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k21214,else__4442__auto__);\n\n}\n}));\n\n(datascript.db.DB.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__21219){\nvar vec__21220 = p__21219;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21220,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21220,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(datascript.db.DB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#datascript.db.DB{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),self__.schema],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),self__.eavt],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),self__.aevt],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),self__.avet],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),self__.max_eid],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),self__.max_tx],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),self__.rschema],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),self__.hash],null))], null),self__.__extmap));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__21213){\nvar self__ = this;\nvar G__21213__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__21213__$1,8,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.db.DB.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.DB.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (8 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (){var fexpr__21223 = (function (coll__4436__auto__){\nreturn (-1515640948 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n});\nreturn fexpr__21223(this__4435__auto____$1);\n})();\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(datascript.db.DB.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this21215,other21216){\nvar self__ = this;\nvar this21215__$1 = this;\nreturn (((!((other21216 == null)))) && ((this21215__$1.constructor === other21216.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.schema,other21216.schema)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.eavt,other21216.eavt)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.aevt,other21216.aevt)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.avet,other21216.avet)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.max_eid,other21216.max_eid)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.max_tx,other21216.max_tx)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.rschema,other21216.rschema)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.hash,other21216.hash)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21215__$1.__extmap,other21216.__extmap)));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),null,new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),null,new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),null,new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),null,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),null,new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),null,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),null,new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(datascript.db.DB.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__21213){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__21224 = cljs.core.keyword_identical_QMARK_;\nvar expr__21225 = k__4447__auto__;\nif(cljs.core.truth_((function (){var G__21227 = new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791);\nvar G__21228 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21227,G__21228) : pred__21224.call(null,G__21227,G__21228));\n})())){\nreturn (new datascript.db.DB(G__21213,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21229 = new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073);\nvar G__21230 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21229,G__21230) : pred__21224.call(null,G__21229,G__21230));\n})())){\nreturn (new datascript.db.DB(self__.schema,G__21213,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21231 = new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059);\nvar G__21232 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21231,G__21232) : pred__21224.call(null,G__21231,G__21232));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,G__21213,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21233 = new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032);\nvar G__21234 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21233,G__21234) : pred__21224.call(null,G__21233,G__21234));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,G__21213,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21235 = new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075);\nvar G__21236 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21235,G__21236) : pred__21224.call(null,G__21235,G__21236));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,G__21213,self__.max_tx,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21237 = new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339);\nvar G__21238 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21237,G__21238) : pred__21224.call(null,G__21237,G__21238));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,G__21213,self__.rschema,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21239 = new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054);\nvar G__21240 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21239,G__21240) : pred__21224.call(null,G__21239,G__21240));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,G__21213,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21241 = new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596);\nvar G__21242 = expr__21225;\nreturn (pred__21224.cljs$core$IFn$_invoke$arity$2 ? pred__21224.cljs$core$IFn$_invoke$arity$2(G__21241,G__21242) : pred__21224.call(null,G__21241,G__21242));\n})())){\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,G__21213,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__21213),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(datascript.db.DB.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),self__.schema,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),self__.eavt,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),self__.aevt,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),self__.avet,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),self__.max_eid,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),self__.max_tx,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),self__.rschema,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),self__.hash,null))], null),self__.__extmap));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__21213){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new datascript.db.DB(self__.schema,self__.eavt,self__.aevt,self__.avet,self__.max_eid,self__.max_tx,self__.rschema,self__.hash,G__21213,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.DB.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(datascript.db.DB.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"schema\",\"schema\",58529736,null),new cljs.core.Symbol(null,\"eavt\",\"eavt\",974094454,null),new cljs.core.Symbol(null,\"aevt\",\"aevt\",1055383468,null),new cljs.core.Symbol(null,\"avet\",\"avet\",-1270578737,null),new cljs.core.Symbol(null,\"max-eid\",\"max-eid\",-519567694,null),new cljs.core.Symbol(null,\"max-tx\",\"max-tx\",-1534877430,null),new cljs.core.Symbol(null,\"rschema\",\"rschema\",444397473,null),new cljs.core.Symbol(null,\"hash\",\"hash\",1626749931,null)], null);\n}));\n\n(datascript.db.DB.cljs$lang$type = true);\n\n(datascript.db.DB.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"datascript.db/DB\",null,(1),null));\n}));\n\n(datascript.db.DB.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"datascript.db/DB\");\n}));\n\n/**\n * Positional factory function for datascript.db/DB.\n */\ndatascript.db.__GT_DB = (function datascript$db$__GT_DB(schema,eavt,aevt,avet,max_eid,max_tx,rschema,hash){\nreturn (new datascript.db.DB(schema,eavt,aevt,avet,max_eid,max_tx,rschema,hash,null,null,null));\n});\n\n/**\n * Factory function for datascript.db/DB, taking a map of keywords to field values.\n */\ndatascript.db.map__GT_DB = (function datascript$db$map__GT_DB(G__21217){\nvar extmap__4478__auto__ = (function (){var G__21243 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21217,new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596)], 0));\nif(cljs.core.record_QMARK_(G__21217)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__21243);\n} else {\nreturn G__21243;\n}\n})();\nreturn (new datascript.db.DB(new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054).cljs$core$IFn$_invoke$arity$1(G__21217),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596).cljs$core$IFn$_invoke$arity$1(G__21217),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\n\n(datascript.db.DB.prototype.clojure$data$Diff$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.clojure$data$Diff$diff_similar$arity$2 = (function (a,b){\nvar a__$1 = this;\nreturn datascript.db.diff_sorted(a__$1.eavt,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073).cljs$core$IFn$_invoke$arity$1(b),datascript.db.cmp_datoms_eavt_quick);\n}));\n\n(datascript.db.DB.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (db,w,opts){\nvar db__$1 = this;\nreturn (datascript.db.pr_db.cljs$core$IFn$_invoke$arity$3 ? datascript.db.pr_db.cljs$core$IFn$_invoke$arity$3(db__$1,w,opts) : datascript.db.pr_db.call(null,db__$1,w,opts));\n}));\n\n(datascript.db.DB.prototype.cljs$core$ICounted$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$ICounted$_count$arity$1 = (function (db){\nvar db__$1 = this;\nreturn cljs.core.count(db__$1.eavt);\n}));\n\n(datascript.db.DB.prototype.cljs$core$IReversible$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (db){\nvar db__$1 = this;\nreturn cljs.core._rseq(db__$1.eavt);\n}));\n\n(datascript.db.DB.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IHash$_hash$arity$1 = (function (db){\nvar db__$1 = this;\nreturn (datascript.db.hash_db.cljs$core$IFn$_invoke$arity$1 ? datascript.db.hash_db.cljs$core$IFn$_invoke$arity$1(db__$1) : datascript.db.hash_db.call(null,db__$1));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (db,other){\nvar db__$1 = this;\nreturn (datascript.db.equiv_db.cljs$core$IFn$_invoke$arity$2 ? datascript.db.equiv_db.cljs$core$IFn$_invoke$arity$2(db__$1,other) : datascript.db.equiv_db.call(null,db__$1,other));\n}));\n\n(datascript.db.DB.prototype.cljs$core$IEditableCollection$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (db){\nvar db__$1 = this;\nreturn datascript.db.db_transient(db__$1);\n}));\n\n(datascript.db.DB.prototype.cljs$core$IEmptyableCollection$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (db){\nvar db__$1 = this;\nreturn cljs.core.with_meta((function (){var G__21244 = db__$1.schema;\nreturn (datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1 ? datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1(G__21244) : datascript.db.empty_db.call(null,G__21244));\n})(),cljs.core.meta(db__$1));\n}));\n\n(datascript.db.DB.prototype.cljs$core$ITransientCollection$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (db,key){\nvar db__$1 = this;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"datascript.DB/conj! is not supported\",cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(datascript.db.DB.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (db){\nvar db__$1 = this;\nreturn datascript.db.db_persistent_BANG_(db__$1);\n}));\n\n(datascript.db.DB.prototype.cljs$core$ISeqable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (db){\nvar db__$1 = this;\nreturn cljs.core._seq(db__$1.eavt);\n}));\n\n(datascript.db.DB.prototype.clojure$data$EqualityPartition$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.clojure$data$EqualityPartition$equality_partition$arity$1 = (function (x){\nvar x__$1 = this;\nreturn new cljs.core.Keyword(\"datascript\",\"db\",\"datascript/db\",-1190971692);\n}));\n\n(datascript.db.DB.prototype.datascript$db$IIndexAccess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.datascript$db$IIndexAccess$_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(db__$1,index),(datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5 ? datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5(db__$1,index,cs,(0),(536870912)) : datascript.db.components__GT_pattern.call(null,db__$1,index,cs,(0),(536870912))),(datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5 ? datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5(db__$1,index,cs,(2147483647),(2147483647)) : datascript.db.components__GT_pattern.call(null,db__$1,index,cs,(2147483647),(2147483647))));\n}));\n\n(datascript.db.DB.prototype.datascript$db$IIndexAccess$_seek_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(db__$1,index),(datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5 ? datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5(db__$1,index,cs,(0),(536870912)) : datascript.db.components__GT_pattern.call(null,db__$1,index,cs,(0),(536870912))),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),null,null,(2147483647)));\n}));\n\n(datascript.db.DB.prototype.datascript$db$IIndexAccess$_rseek_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn me.tonsky.persistent_sorted_set.rslice.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(db__$1,index),(datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5 ? datascript.db.components__GT_pattern.cljs$core$IFn$_invoke$arity$5(db__$1,index,cs,(2147483647),(2147483647)) : datascript.db.components__GT_pattern.call(null,db__$1,index,cs,(2147483647),(2147483647))),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),null,null,(536870912)));\n}));\n\n(datascript.db.DB.prototype.datascript$db$IIndexAccess$_index_range$arity$4 = (function (db,attr,start,end){\nvar db__$1 = this;\nif(cljs.core.truth_((datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2(db__$1,attr) : datascript.db.indexing_QMARK_.call(null,db__$1,attr)))){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Attribute \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attr], 0)),\" should be marked as :db/index true\"].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n\nvar G__21245_21727 = attr;\nvar G__21246_21728 = (new cljs.core.List(null,new cljs.core.Symbol(null,\"-index-range\",\"-index-range\",898114142,null),(new cljs.core.List(null,new cljs.core.Symbol(null,\"db\",\"db\",-1661185010,null),(new cljs.core.List(null,attr,(new cljs.core.List(null,start,(new cljs.core.List(null,end,null,(1),null)),(2),null)),(3),null)),(4),null)),(5),null));\n(datascript.db.validate_attr.cljs$core$IFn$_invoke$arity$2 ? datascript.db.validate_attr.cljs$core$IFn$_invoke$arity$2(G__21245_21727,G__21246_21728) : datascript.db.validate_attr.call(null,G__21245_21727,G__21246_21728));\n\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(db__$1.avet,(datascript.db.resolve_datom.cljs$core$IFn$_invoke$arity$7 ? datascript.db.resolve_datom.cljs$core$IFn$_invoke$arity$7(db__$1,null,attr,start,null,(0),(536870912)) : datascript.db.resolve_datom.call(null,db__$1,null,attr,start,null,(0),(536870912))),(datascript.db.resolve_datom.cljs$core$IFn$_invoke$arity$7 ? datascript.db.resolve_datom.cljs$core$IFn$_invoke$arity$7(db__$1,null,attr,end,null,(2147483647),(2147483647)) : datascript.db.resolve_datom.call(null,db__$1,null,attr,end,null,(2147483647),(2147483647))));\n}));\n\n(datascript.db.DB.prototype.datascript$db$IDB$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.datascript$db$IDB$_schema$arity$1 = (function (db){\nvar db__$1 = this;\nreturn db__$1.schema;\n}));\n\n(datascript.db.DB.prototype.datascript$db$IDB$_attrs_by$arity$2 = (function (db,property){\nvar db__$1 = this;\nvar fexpr__21247 = db__$1.rschema;\nreturn (fexpr__21247.cljs$core$IFn$_invoke$arity$1 ? fexpr__21247.cljs$core$IFn$_invoke$arity$1(property) : fexpr__21247.call(null,property));\n}));\n\n(datascript.db.DB.prototype.datascript$db$ISearch$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.DB.prototype.datascript$db$ISearch$_search$arity$2 = (function (db,pattern){\nvar db__$1 = this;\nvar vec__21248 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21248,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21248,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21248,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21248,(3),null);\nvar eavt = db__$1.eavt;\nvar aevt = db__$1.aevt;\nvar avet = db__$1.avet;\nif(cljs.core.truth_(e)){\nif(cljs.core.truth_(a)){\nif((!((v == null)))){\nif(cljs.core.truth_(tx)){\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v,tx),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v,tx));\n} else {\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v,(2147483647)));\n}\n} else {\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,null,(2147483647))));\n} else {\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,null,(2147483647)));\n}\n}\n} else {\nif((!((v == null)))){\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null))));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(2147483647))));\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v);\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(2147483647))));\n}\n} else {\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(2147483647))));\n} else {\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,null,null,(2147483647)));\n}\n}\n}\n} else {\nif(cljs.core.truth_(a)){\nif((!((v == null)))){\nif(cljs.core.truth_(tx)){\nif(cljs.core.truth_((datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2(db__$1,a) : datascript.db.indexing_QMARK_.call(null,db__$1,a)))){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(avet,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,v,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,v,(2147483647))));\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null))));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(aevt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,null,(2147483647))));\n}\n} else {\nif(cljs.core.truth_((datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.db.indexing_QMARK_.cljs$core$IFn$_invoke$arity$2(db__$1,a) : datascript.db.indexing_QMARK_.call(null,db__$1,a)))){\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(avet,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,v,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,v,(2147483647)));\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v);\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(aevt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,null,(2147483647))));\n}\n}\n} else {\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null));\n}),me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(aevt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,null,(2147483647))));\n} else {\nreturn me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3(aevt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),a,null,(536870912)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((2147483647),a,null,(2147483647)));\n}\n}\n} else {\nif((!((v == null)))){\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null))));\n}),eavt);\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,d.v);\n}),eavt);\n}\n} else {\nif(cljs.core.truth_(tx)){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tx,d.datascript$db$IDatom$datom_tx$arity$1(null));\n}),eavt);\n} else {\nreturn eavt;\n}\n}\n}\n}\n}));\ndatascript.db.db_QMARK_ = (function datascript$db$db_QMARK_(x){\nif((((!((x == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === x.datascript$db$ISearch$))))?true:(((!x.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,x):false)):cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,x))){\nif((((!((x == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === x.datascript$db$IIndexAccess$))))?true:(((!x.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IIndexAccess,x):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IIndexAccess,x))){\nif((!((x == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === x.datascript$db$IDB$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(datascript.db.IDB,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(datascript.db.IDB,x);\n}\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.db.FilteredDB = (function (unfiltered_db,pred,hash,__meta,__extmap,__hash){\nthis.unfiltered_db = unfiltered_db;\nthis.pred = pred;\nthis.hash = hash;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.db.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k21262,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__21266 = k21262;\nvar G__21266__$1 = (((G__21266 instanceof cljs.core.Keyword))?G__21266.fqn:null);\nswitch (G__21266__$1) {\ncase \"unfiltered-db\":\nreturn self__.unfiltered_db;\n\nbreak;\ncase \"pred\":\nreturn self__.pred;\n\nbreak;\ncase \"hash\":\nreturn self__.hash;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k21262,else__4442__auto__);\n\n}\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__21267){\nvar vec__21268 = p__21267;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21268,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21268,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#datascript.db.FilteredDB{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391),self__.unfiltered_db],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397),self__.pred],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),self__.hash],null))], null),self__.__extmap));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__21261){\nvar self__ = this;\nvar G__21261__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__21261__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391),new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,self__.pred,self__.hash,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (){var fexpr__21271 = (function (coll__4436__auto__){\nreturn (-351969977 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n});\nreturn fexpr__21271(this__4435__auto____$1);\n})();\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this21263,other21264){\nvar self__ = this;\nvar this21263__$1 = this;\nreturn (((!((other21264 == null)))) && ((this21263__$1.constructor === other21264.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21263__$1.unfiltered_db,other21264.unfiltered_db)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21263__$1.pred,other21264.pred)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21263__$1.hash,other21264.hash)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21263__$1.__extmap,other21264.__extmap)));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),null,new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397),null,new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,self__.pred,self__.hash,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__21261){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__21272 = cljs.core.keyword_identical_QMARK_;\nvar expr__21273 = k__4447__auto__;\nif(cljs.core.truth_((function (){var G__21275 = new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391);\nvar G__21276 = expr__21273;\nreturn (pred__21272.cljs$core$IFn$_invoke$arity$2 ? pred__21272.cljs$core$IFn$_invoke$arity$2(G__21275,G__21276) : pred__21272.call(null,G__21275,G__21276));\n})())){\nreturn (new datascript.db.FilteredDB(G__21261,self__.pred,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21277 = new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397);\nvar G__21278 = expr__21273;\nreturn (pred__21272.cljs$core$IFn$_invoke$arity$2 ? pred__21272.cljs$core$IFn$_invoke$arity$2(G__21277,G__21278) : pred__21272.call(null,G__21277,G__21278));\n})())){\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,G__21261,self__.hash,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21279 = new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596);\nvar G__21280 = expr__21273;\nreturn (pred__21272.cljs$core$IFn$_invoke$arity$2 ? pred__21272.cljs$core$IFn$_invoke$arity$2(G__21279,G__21280) : pred__21272.call(null,G__21279,G__21280));\n})())){\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,self__.pred,G__21261,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,self__.pred,self__.hash,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__21261),null));\n}\n}\n}\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391),self__.unfiltered_db,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397),self__.pred,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),self__.hash,null))], null),self__.__extmap));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__21261){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new datascript.db.FilteredDB(self__.unfiltered_db,self__.pred,self__.hash,G__21261,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(datascript.db.FilteredDB.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"unfiltered-db\",\"unfiltered-db\",276811136,null),new cljs.core.Symbol(null,\"pred\",\"pred\",-727012372,null),new cljs.core.Symbol(null,\"hash\",\"hash\",1626749931,null)], null);\n}));\n\n(datascript.db.FilteredDB.cljs$lang$type = true);\n\n(datascript.db.FilteredDB.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"datascript.db/FilteredDB\",null,(1),null));\n}));\n\n(datascript.db.FilteredDB.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"datascript.db/FilteredDB\");\n}));\n\n/**\n * Positional factory function for datascript.db/FilteredDB.\n */\ndatascript.db.__GT_FilteredDB = (function datascript$db$__GT_FilteredDB(unfiltered_db,pred,hash){\nreturn (new datascript.db.FilteredDB(unfiltered_db,pred,hash,null,null,null));\n});\n\n/**\n * Factory function for datascript.db/FilteredDB, taking a map of keywords to field values.\n */\ndatascript.db.map__GT_FilteredDB = (function datascript$db$map__GT_FilteredDB(G__21265){\nvar extmap__4478__auto__ = (function (){var G__21281 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21265,new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596)], 0));\nif(cljs.core.record_QMARK_(G__21265)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__21281);\n} else {\nreturn G__21281;\n}\n})();\nreturn (new datascript.db.FilteredDB(new cljs.core.Keyword(null,\"unfiltered-db\",\"unfiltered-db\",-1363720391).cljs$core$IFn$_invoke$arity$1(G__21265),new cljs.core.Keyword(null,\"pred\",\"pred\",1927423397).cljs$core$IFn$_invoke$arity$1(G__21265),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596).cljs$core$IFn$_invoke$arity$1(G__21265),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\n\n(datascript.db.FilteredDB.prototype.cljs$core$ILookup$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (_,___$1){\nvar ___$2 = this;\nthrow (new Error(\"-lookup is not supported on FilteredDB\"));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (_,___$1,___$2){\nvar ___$3 = this;\nthrow (new Error(\"-lookup is not supported on FilteredDB\"));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (db,w,opts){\nvar db__$1 = this;\nreturn (datascript.db.pr_db.cljs$core$IFn$_invoke$arity$3 ? datascript.db.pr_db.cljs$core$IFn$_invoke$arity$3(db__$1,w,opts) : datascript.db.pr_db.call(null,db__$1,w,opts));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ICounted$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$ICounted$_count$arity$1 = (function (db){\nvar db__$1 = this;\nreturn cljs.core.count(datascript.db._datoms(db__$1,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IHash$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$IHash$_hash$arity$1 = (function (db){\nvar db__$1 = this;\nreturn (datascript.db.hash_fdb.cljs$core$IFn$_invoke$arity$1 ? datascript.db.hash_fdb.cljs$core$IFn$_invoke$arity$1(db__$1) : datascript.db.hash_fdb.call(null,db__$1));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (db,other){\nvar db__$1 = this;\nreturn (datascript.db.equiv_db.cljs$core$IFn$_invoke$arity$2 ? datascript.db.equiv_db.cljs$core$IFn$_invoke$arity$2(db__$1,other) : datascript.db.equiv_db.call(null,db__$1,other));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IEmptyableCollection$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (_){\nvar ___$1 = this;\nthrow (new Error(\"-empty is not supported on FilteredDB\"));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IAssociative$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (_,___$1){\nvar ___$2 = this;\nthrow (new Error(\"-contains-key? is not supported on FilteredDB\"));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (_,___$1,___$2){\nvar ___$3 = this;\nthrow (new Error(\"-assoc is not supported on FilteredDB\"));\n}));\n\n(datascript.db.FilteredDB.prototype.cljs$core$ISeqable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (db){\nvar db__$1 = this;\nreturn datascript.db._datoms(db__$1,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY);\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IIndexAccess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.datascript$db$IIndexAccess$_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(db__$1.pred,datascript.db._datoms(db__$1.unfiltered_db,index,cs));\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IIndexAccess$_seek_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(db__$1.pred,datascript.db._seek_datoms(db__$1.unfiltered_db,index,cs));\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IIndexAccess$_rseek_datoms$arity$3 = (function (db,index,cs){\nvar db__$1 = this;\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(db__$1.pred,datascript.db._rseek_datoms(db__$1.unfiltered_db,index,cs));\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IIndexAccess$_index_range$arity$4 = (function (db,attr,start,end){\nvar db__$1 = this;\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(db__$1.pred,datascript.db._index_range(db__$1.unfiltered_db,attr,start,end));\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IDB$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.datascript$db$IDB$_schema$arity$1 = (function (db){\nvar db__$1 = this;\nreturn datascript.db._schema(db__$1.unfiltered_db);\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$IDB$_attrs_by$arity$2 = (function (db,property){\nvar db__$1 = this;\nreturn datascript.db._attrs_by(db__$1.unfiltered_db,property);\n}));\n\n(datascript.db.FilteredDB.prototype.datascript$db$ISearch$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.db.FilteredDB.prototype.datascript$db$ISearch$_search$arity$2 = (function (db,pattern){\nvar db__$1 = this;\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(db__$1.pred,datascript.db._search(db__$1.unfiltered_db,pattern));\n}));\ndatascript.db.attr__GT_properties = (function datascript$db$attr__GT_properties(k,v){\nvar G__21282 = v;\nvar G__21282__$1 = (((G__21282 instanceof cljs.core.Keyword))?G__21282.fqn:null);\nswitch (G__21282__$1) {\ncase \"db.unique/identity\":\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722),new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669)], null);\n\nbreak;\ncase \"db.unique/value\":\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db.unique\",\"value\",\"db.unique/value\",276903088),new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669)], null);\n\nbreak;\ncase \"db.cardinality/many\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234)], null);\n\nbreak;\ncase \"db.type/ref\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079),new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669)], null);\n\nbreak;\ndefault:\nif(v === true){\nvar G__21283 = k;\nvar G__21283__$1 = (((G__21283 instanceof cljs.core.Keyword))?G__21283.fqn:null);\nswitch (G__21283__$1) {\ncase \"db/isComponent\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398)], null);\n\nbreak;\ncase \"db/index\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669)], null);\n\nbreak;\ndefault:\nreturn cljs.core.PersistentVector.EMPTY;\n\n}\n} else {\nreturn null;\n}\n\n}\n});\ndatascript.db.rschema = (function datascript$db$rschema(schema){\nreturn cljs.core.reduce_kv((function (m,attr,keys__GT_values){\nreturn cljs.core.reduce_kv((function (m__$1,key,value){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m__$2,prop){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$2,prop,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,prop,cljs.core.PersistentHashSet.EMPTY),attr));\n}),m__$1,datascript.db.attr__GT_properties(key,value));\n}),m,keys__GT_values);\n}),cljs.core.PersistentArrayMap.EMPTY,schema);\n});\ndatascript.db.validate_schema_key = (function datascript$db$validate_schema_key(a,k,v,expected){\nif((((v == null)) || (cljs.core.contains_QMARK_(expected,v)))){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute specification for \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([a,cljs.core.PersistentArrayMap.createAsIfByAssoc([k,v])])], 0)),\", expected one of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expected)].join(''),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"schema\",\"validation\",\"schema/validation\",1178447161),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),a,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),k,new cljs.core.Keyword(null,\"value\",\"value\",305978217),v], null));\n}\n});\ndatascript.db.validate_schema = (function datascript$db$validate_schema(schema){\nvar seq__21284 = cljs.core.seq(schema);\nvar chunk__21285 = null;\nvar count__21286 = (0);\nvar i__21287 = (0);\nwhile(true){\nif((i__21287 < count__21286)){\nvar vec__21294 = chunk__21285.cljs$core$IIndexed$_nth$arity$2(null,i__21287);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21294,(0),null);\nvar kv = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21294,(1),null);\nvar comp_QMARK__21970 = new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398).cljs$core$IFn$_invoke$arity$2(kv,false);\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398),new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [true,null,false,null], null), null));\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = comp_QMARK__21970;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079));\n} else {\nreturn and__4174__auto__;\n}\n})())){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute specification for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(a),\": {:db/isComponent true} should also have {:db/valueType :db.type/ref}\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"schema\",\"validation\",\"schema/validation\",1178447161),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),a,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398)], null));\n} else {\n}\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722),null,new cljs.core.Keyword(\"db.unique\",\"value\",\"db.unique/value\",276903088),null], null), null));\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944),new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079),null], null), null));\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659),new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234),null,new cljs.core.Keyword(\"db.cardinality\",\"one\",\"db.cardinality/one\",1428352190),null], null), null));\n\n\nvar G__21994 = seq__21284;\nvar G__21995 = chunk__21285;\nvar G__21996 = count__21286;\nvar G__21997 = (i__21287 + (1));\nseq__21284 = G__21994;\nchunk__21285 = G__21995;\ncount__21286 = G__21996;\ni__21287 = G__21997;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__21284);\nif(temp__5735__auto__){\nvar seq__21284__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__21284__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__21284__$1);\nvar G__22001 = cljs.core.chunk_rest(seq__21284__$1);\nvar G__22002 = c__4609__auto__;\nvar G__22003 = cljs.core.count(c__4609__auto__);\nvar G__22004 = (0);\nseq__21284 = G__22001;\nchunk__21285 = G__22002;\ncount__21286 = G__22003;\ni__21287 = G__22004;\ncontinue;\n} else {\nvar vec__21297 = cljs.core.first(seq__21284__$1);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21297,(0),null);\nvar kv = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21297,(1),null);\nvar comp_QMARK__22007 = new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398).cljs$core$IFn$_invoke$arity$2(kv,false);\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398),new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [true,null,false,null], null), null));\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = comp_QMARK__22007;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079));\n} else {\nreturn and__4174__auto__;\n}\n})())){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute specification for \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(a),\": {:db/isComponent true} should also have {:db/valueType :db.type/ref}\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"schema\",\"validation\",\"schema/validation\",1178447161),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),a,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398)], null));\n} else {\n}\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722),null,new cljs.core.Keyword(\"db.unique\",\"value\",\"db.unique/value\",276903088),null], null), null));\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944),new cljs.core.Keyword(\"db\",\"valueType\",\"db/valueType\",1827971944).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079),null], null), null));\n\ndatascript.db.validate_schema_key(a,new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659),new cljs.core.Keyword(\"db\",\"cardinality\",\"db/cardinality\",-104975659).cljs$core$IFn$_invoke$arity$1(kv),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234),null,new cljs.core.Keyword(\"db.cardinality\",\"one\",\"db.cardinality/one\",1428352190),null], null), null));\n\n\nvar G__22021 = cljs.core.next(seq__21284__$1);\nvar G__22022 = null;\nvar G__22023 = (0);\nvar G__22024 = (0);\nseq__21284 = G__22021;\nchunk__21285 = G__22022;\ncount__21286 = G__22023;\ni__21287 = G__22024;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ndatascript.db.empty_db = (function datascript$db$empty_db(var_args){\nvar G__21301 = arguments.length;\nswitch (G__21301) {\ncase 0:\nreturn datascript.db.empty_db.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.db.empty_db.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1(null);\n}));\n\n(datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1 = (function (schema){\n\ndatascript.db.validate_schema(schema);\n\nreturn datascript.db.map__GT_DB(new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),schema,new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),datascript.db.rschema(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"ident\",\"db/ident\",-737096),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722)], null)], null),schema], 0))),new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),me.tonsky.persistent_sorted_set.sorted_set_by.cljs$core$IFn$_invoke$arity$1(datascript.db.cmp_datoms_eavt),new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),me.tonsky.persistent_sorted_set.sorted_set_by.cljs$core$IFn$_invoke$arity$1(datascript.db.cmp_datoms_aevt),new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),me.tonsky.persistent_sorted_set.sorted_set_by.cljs$core$IFn$_invoke$arity$1(datascript.db.cmp_datoms_avet),new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),(0),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),(536870912),new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0))], null));\n}));\n\n(datascript.db.empty_db.cljs$lang$maxFixedArity = 1);\n\ndatascript.db.init_max_eid = (function datascript$db$init_max_eid(eavt){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(cljs.core.first(me.tonsky.persistent_sorted_set.rslice.cljs$core$IFn$_invoke$arity$3(eavt,datascript.db.datom.cljs$core$IFn$_invoke$arity$4(((536870912) - (1)),null,null,(2147483647)),datascript.db.datom.cljs$core$IFn$_invoke$arity$4((0),null,null,(536870912)))));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn (0);\n}\n});\ndatascript.db.init_db = (function datascript$db$init_db(var_args){\nvar G__21303 = arguments.length;\nswitch (G__21303) {\ncase 1:\nreturn datascript.db.init_db.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn datascript.db.init_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.db.init_db.cljs$core$IFn$_invoke$arity$1 = (function (datoms){\nreturn datascript.db.init_db.cljs$core$IFn$_invoke$arity$2(datoms,null);\n}));\n\n(datascript.db.init_db.cljs$core$IFn$_invoke$arity$2 = (function (datoms,schema){\ndatascript.db.validate_schema(schema);\n\nvar rschema = datascript.db.rschema(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"ident\",\"db/ident\",-737096),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388),new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722)], null)], null),schema], 0)));\nvar indexed = new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669).cljs$core$IFn$_invoke$arity$1(rschema);\nvar arr = (function (){var G__21304 = datoms;\nif((!(me.tonsky.persistent_sorted_set.arrays.array_QMARK_(datoms)))){\nreturn me.tonsky.persistent_sorted_set.arrays.into_array(G__21304);\n} else {\nreturn G__21304;\n}\n})();\nvar _ = me.tonsky.persistent_sorted_set.arrays.asort(arr,datascript.db.cmp_datoms_eavt_quick);\nvar eavt = me.tonsky.persistent_sorted_set.from_sorted_array(datascript.db.cmp_datoms_eavt,arr);\nvar ___$1 = me.tonsky.persistent_sorted_set.arrays.asort(arr,datascript.db.cmp_datoms_aevt_quick);\nvar aevt = me.tonsky.persistent_sorted_set.from_sorted_array(datascript.db.cmp_datoms_aevt,arr);\nvar avet_datoms = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (d){\nreturn cljs.core.contains_QMARK_(indexed,d.a);\n}),datoms);\nvar avet_arr = cljs.core.to_array(avet_datoms);\nvar ___$2 = me.tonsky.persistent_sorted_set.arrays.asort(avet_arr,datascript.db.cmp_datoms_avet_quick);\nvar avet = me.tonsky.persistent_sorted_set.from_sorted_array(datascript.db.cmp_datoms_avet,avet_arr);\nvar max_eid = datascript.db.init_max_eid(eavt);\nvar max_tx = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (d){\nreturn d.datascript$db$IDatom$datom_tx$arity$1(null);\n})),cljs.core.max,(536870912),eavt);\nreturn datascript.db.map__GT_DB(new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791),schema,new cljs.core.Keyword(null,\"rschema\",\"rschema\",-1196134054),rschema,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),eavt,new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059),aevt,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),avet,new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),max_eid,new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339),max_tx,new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0))], null));\n}));\n\n(datascript.db.init_db.cljs$lang$maxFixedArity = 2);\n\ndatascript.db.equiv_db_index = (function datascript$db$equiv_db_index(x,y){\nvar xs = cljs.core.seq(x);\nvar ys = cljs.core.seq(y);\nwhile(true){\nif((xs == null)){\nreturn (ys == null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){\nvar G__22059 = cljs.core.next(xs);\nvar G__22060 = cljs.core.next(ys);\nxs = G__22059;\nys = G__22060;\ncontinue;\n} else {\nreturn false;\n\n}\n}\nbreak;\n}\n});\ndatascript.db.hash_db = (function datascript$db$hash_db(db){\nvar h = cljs.core.deref(db.hash);\nif((h === (0))){\nreturn cljs.core.reset_BANG_(db.hash,datascript.db.combine_hashes(cljs.core.hash(db.schema),cljs.core.hash(db.eavt)));\n} else {\nreturn h;\n}\n});\ndatascript.db.hash_fdb = (function datascript$db$hash_fdb(db){\nvar h = cljs.core.deref(db.hash);\nvar datoms = (function (){var or__4185__auto__ = datascript.db._datoms(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif((h === (0))){\nvar datoms__$1 = (function (){var or__4185__auto__ = datascript.db._datoms(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nreturn cljs.core.reset_BANG_(db.hash,datascript.db.combine_hashes(cljs.core.hash(datascript.db._schema(db)),cljs.core.hash_unordered_coll(datoms__$1)));\n} else {\nreturn h;\n}\n});\ndatascript.db.equiv_db = (function datascript$db$equiv_db(db,other){\nreturn (((((other instanceof datascript.db.DB)) || ((other instanceof datascript.db.FilteredDB)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(datascript.db._schema(db),datascript.db._schema(other))) && (datascript.db.equiv_db_index(datascript.db._datoms(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY),datascript.db._datoms(other,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY))));\n});\ndatascript.db.pr_db = (function datascript$db$pr_db(db,w,opts){\ncljs.core._write(w,\"#datascript/DB {\");\n\ncljs.core._write(w,\":schema \");\n\ncljs.core.pr_writer(datascript.db._schema(db),w,opts);\n\ncljs.core._write(w,\", :datoms \");\n\ncljs.core.pr_sequential_writer(w,(function (d,w__$1,opts__$1){\nreturn cljs.core.pr_sequential_writer(w__$1,cljs.core.pr_writer,\"[\",\" \",\"]\",opts__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [d.e,d.a,d.v,datascript.db.datom_tx(d)], null));\n}),\"[\",\" \",\"]\",opts,datascript.db._datoms(db,new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073),cljs.core.PersistentVector.EMPTY));\n\nreturn cljs.core._write(w,\"}\");\n});\ndatascript.db.db_from_reader = (function datascript$db$db_from_reader(p__21305){\nvar map__21306 = p__21305;\nvar map__21306__$1 = (((((!((map__21306 == null))))?(((((map__21306.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21306.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21306):map__21306);\nvar schema = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21306__$1,new cljs.core.Keyword(null,\"schema\",\"schema\",-1582001791));\nvar datoms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21306__$1,new cljs.core.Keyword(null,\"datoms\",\"datoms\",-290874434));\nreturn datascript.db.init_db.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__21308){\nvar vec__21309 = p__21308;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21309,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21309,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21309,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21309,(3),null);\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e,a,v,tx);\n}),datoms),schema);\n});\n\n\ndatascript.db.resolve_datom = (function datascript$db$resolve_datom(db,e,a,v,t,default_e,default_tx){\nif(cljs.core.truth_(a)){\nvar G__21312_22066 = a;\nvar G__21313_22067 = (new cljs.core.List(null,new cljs.core.Symbol(null,\"resolve-datom\",\"resolve-datom\",-294110827,null),(new cljs.core.List(null,new cljs.core.Symbol(null,\"db\",\"db\",-1661185010,null),(new cljs.core.List(null,e,(new cljs.core.List(null,a,(new cljs.core.List(null,v,(new cljs.core.List(null,t,null,(1),null)),(2),null)),(3),null)),(4),null)),(5),null)),(6),null));\n(datascript.db.validate_attr.cljs$core$IFn$_invoke$arity$2 ? datascript.db.validate_attr.cljs$core$IFn$_invoke$arity$2(G__21312_22066,G__21313_22067) : datascript.db.validate_attr.call(null,G__21312_22066,G__21313_22067));\n} else {\n}\n\nreturn datascript.db.datom.cljs$core$IFn$_invoke$arity$4((function (){var or__4185__auto__ = (datascript.db.entid_some.cljs$core$IFn$_invoke$arity$2 ? datascript.db.entid_some.cljs$core$IFn$_invoke$arity$2(db,e) : datascript.db.entid_some.call(null,db,e));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn default_e;\n}\n})(),a,(cljs.core.truth_((((!((v == null))))?(datascript.db.ref_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.db.ref_QMARK_.cljs$core$IFn$_invoke$arity$2(db,a) : datascript.db.ref_QMARK_.call(null,db,a)):false))?(datascript.db.entid_strict.cljs$core$IFn$_invoke$arity$2 ? datascript.db.entid_strict.cljs$core$IFn$_invoke$arity$2(db,v) : datascript.db.entid_strict.call(null,db,v)):v),(function (){var or__4185__auto__ = (datascript.db.entid_some.cljs$core$IFn$_invoke$arity$2 ? datascript.db.entid_some.cljs$core$IFn$_invoke$arity$2(db,t) : datascript.db.entid_some.call(null,db,t));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn default_tx;\n}\n})());\n});\ndatascript.db.components__GT_pattern = (function datascript$db$components__GT_pattern(db,index,p__21314,default_e,default_tx){\nvar vec__21315 = p__21314;\nvar c0 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315,(0),null);\nvar c1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315,(1),null);\nvar c2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315,(2),null);\nvar c3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21315,(3),null);\nvar G__21318 = index;\nvar G__21318__$1 = (((G__21318 instanceof cljs.core.Keyword))?G__21318.fqn:null);\nswitch (G__21318__$1) {\ncase \"eavt\":\nreturn datascript.db.resolve_datom(db,c0,c1,c2,c3,default_e,default_tx);\n\nbreak;\ncase \"aevt\":\nreturn datascript.db.resolve_datom(db,c1,c0,c2,c3,default_e,default_tx);\n\nbreak;\ncase \"avet\":\nreturn datascript.db.resolve_datom(db,c2,c0,c1,c3,default_e,default_tx);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__21318__$1)].join('')));\n\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.db.TxReport = (function (db_before,db_after,tx_data,tempids,tx_meta,__meta,__extmap,__hash){\nthis.db_before = db_before;\nthis.db_after = db_after;\nthis.tx_data = tx_data;\nthis.tempids = tempids;\nthis.tx_meta = tx_meta;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.db.TxReport.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4439__auto__,k__4440__auto__){\nvar self__ = this;\nvar this__4439__auto____$1 = this;\nreturn this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4440__auto__,null);\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4441__auto__,k21320,else__4442__auto__){\nvar self__ = this;\nvar this__4441__auto____$1 = this;\nvar G__21324 = k21320;\nvar G__21324__$1 = (((G__21324 instanceof cljs.core.Keyword))?G__21324.fqn:null);\nswitch (G__21324__$1) {\ncase \"db-before\":\nreturn self__.db_before;\n\nbreak;\ncase \"db-after\":\nreturn self__.db_after;\n\nbreak;\ncase \"tx-data\":\nreturn self__.tx_data;\n\nbreak;\ncase \"tempids\":\nreturn self__.tempids;\n\nbreak;\ncase \"tx-meta\":\nreturn self__.tx_meta;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k21320,else__4442__auto__);\n\n}\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4458__auto__,f__4459__auto__,init__4460__auto__){\nvar self__ = this;\nvar this__4458__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4461__auto__,p__21325){\nvar vec__21326 = p__21325;\nvar k__4462__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21326,(0),null);\nvar v__4463__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21326,(1),null);\nreturn (f__4459__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4459__auto__.cljs$core$IFn$_invoke$arity$3(ret__4461__auto__,k__4462__auto__,v__4463__auto__) : f__4459__auto__.call(null,ret__4461__auto__,k__4462__auto__,v__4463__auto__));\n}),init__4460__auto__,this__4458__auto____$1);\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4453__auto__,writer__4454__auto__,opts__4455__auto__){\nvar self__ = this;\nvar this__4453__auto____$1 = this;\nvar pr_pair__4456__auto__ = (function (keyval__4457__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4455__auto__,keyval__4457__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4454__auto__,pr_pair__4456__auto__,\"#datascript.db.TxReport{\",\", \",\"}\",opts__4455__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),self__.db_before],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),self__.db_after],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),self__.tx_data],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),self__.tempids],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194),self__.tx_meta],null))], null),self__.__extmap));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__21319){\nvar self__ = this;\nvar G__21319__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__21319__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4437__auto__){\nvar self__ = this;\nvar this__4437__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4434__auto__){\nvar self__ = this;\nvar this__4434__auto____$1 = this;\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,self__.tempids,self__.tx_meta,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4443__auto__){\nvar self__ = this;\nvar this__4443__auto____$1 = this;\nreturn (5 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4435__auto__){\nvar self__ = this;\nvar this__4435__auto____$1 = this;\nvar h__4297__auto__ = self__.__hash;\nif((!((h__4297__auto__ == null)))){\nreturn h__4297__auto__;\n} else {\nvar h__4297__auto____$1 = (function (){var fexpr__21329 = (function (coll__4436__auto__){\nreturn (-2022644885 ^ cljs.core.hash_unordered_coll(coll__4436__auto__));\n});\nreturn fexpr__21329(this__4435__auto____$1);\n})();\n(self__.__hash = h__4297__auto____$1);\n\nreturn h__4297__auto____$1;\n}\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this21321,other21322){\nvar self__ = this;\nvar this21321__$1 = this;\nreturn (((!((other21322 == null)))) && ((this21321__$1.constructor === other21322.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.db_before,other21322.db_before)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.db_after,other21322.db_after)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.tx_data,other21322.tx_data)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.tempids,other21322.tempids)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.tx_meta,other21322.tx_meta)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this21321__$1.__extmap,other21322.__extmap)));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4448__auto__,k__4449__auto__){\nvar self__ = this;\nvar this__4448__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),null,new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),null,new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),null,new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),null,new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194),null], null), null),k__4449__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4448__auto____$1),self__.__meta),k__4449__auto__);\n} else {\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,self__.tempids,self__.tx_meta,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4449__auto__)),null));\n}\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4446__auto__,k__4447__auto__,G__21319){\nvar self__ = this;\nvar this__4446__auto____$1 = this;\nvar pred__21330 = cljs.core.keyword_identical_QMARK_;\nvar expr__21331 = k__4447__auto__;\nif(cljs.core.truth_((function (){var G__21333 = new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536);\nvar G__21334 = expr__21331;\nreturn (pred__21330.cljs$core$IFn$_invoke$arity$2 ? pred__21330.cljs$core$IFn$_invoke$arity$2(G__21333,G__21334) : pred__21330.call(null,G__21333,G__21334));\n})())){\nreturn (new datascript.db.TxReport(G__21319,self__.db_after,self__.tx_data,self__.tempids,self__.tx_meta,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21335 = new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666);\nvar G__21336 = expr__21331;\nreturn (pred__21330.cljs$core$IFn$_invoke$arity$2 ? pred__21330.cljs$core$IFn$_invoke$arity$2(G__21335,G__21336) : pred__21330.call(null,G__21335,G__21336));\n})())){\nreturn (new datascript.db.TxReport(self__.db_before,G__21319,self__.tx_data,self__.tempids,self__.tx_meta,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21337 = new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761);\nvar G__21338 = expr__21331;\nreturn (pred__21330.cljs$core$IFn$_invoke$arity$2 ? pred__21330.cljs$core$IFn$_invoke$arity$2(G__21337,G__21338) : pred__21330.call(null,G__21337,G__21338));\n})())){\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,G__21319,self__.tempids,self__.tx_meta,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21339 = new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089);\nvar G__21340 = expr__21331;\nreturn (pred__21330.cljs$core$IFn$_invoke$arity$2 ? pred__21330.cljs$core$IFn$_invoke$arity$2(G__21339,G__21340) : pred__21330.call(null,G__21339,G__21340));\n})())){\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,G__21319,self__.tx_meta,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__21341 = new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194);\nvar G__21342 = expr__21331;\nreturn (pred__21330.cljs$core$IFn$_invoke$arity$2 ? pred__21330.cljs$core$IFn$_invoke$arity$2(G__21341,G__21342) : pred__21330.call(null,G__21341,G__21342));\n})())){\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,self__.tempids,G__21319,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,self__.tempids,self__.tx_meta,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4447__auto__,G__21319),null));\n}\n}\n}\n}\n}\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4451__auto__){\nvar self__ = this;\nvar this__4451__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),self__.db_before,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),self__.db_after,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),self__.tx_data,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),self__.tempids,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194),self__.tx_meta,null))], null),self__.__extmap));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4438__auto__,G__21319){\nvar self__ = this;\nvar this__4438__auto____$1 = this;\nreturn (new datascript.db.TxReport(self__.db_before,self__.db_after,self__.tx_data,self__.tempids,self__.tx_meta,G__21319,self__.__extmap,self__.__hash));\n}));\n\n(datascript.db.TxReport.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4444__auto__,entry__4445__auto__){\nvar self__ = this;\nvar this__4444__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4445__auto__)){\nreturn this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4445__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4444__auto____$1,entry__4445__auto__);\n}\n}));\n\n(datascript.db.TxReport.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"db-before\",\"db-before\",1086839991,null),new cljs.core.Symbol(null,\"db-after\",\"db-after\",1068646861,null),new cljs.core.Symbol(null,\"tx-data\",\"tx-data\",-1720276008,null),new cljs.core.Symbol(null,\"tempids\",\"tempids\",-886926680,null),new cljs.core.Symbol(null,\"tx-meta\",\"tx-meta\",-1495152575,null)], null);\n}));\n\n(datascript.db.TxReport.cljs$lang$type = true);\n\n(datascript.db.TxReport.cljs$lang$ctorPrSeq = (function (this__4482__auto__){\nreturn (new cljs.core.List(null,\"datascript.db/TxReport\",null,(1),null));\n}));\n\n(datascript.db.TxReport.cljs$lang$ctorPrWriter = (function (this__4482__auto__,writer__4483__auto__){\nreturn cljs.core._write(writer__4483__auto__,\"datascript.db/TxReport\");\n}));\n\n/**\n * Positional factory function for datascript.db/TxReport.\n */\ndatascript.db.__GT_TxReport = (function datascript$db$__GT_TxReport(db_before,db_after,tx_data,tempids,tx_meta){\nreturn (new datascript.db.TxReport(db_before,db_after,tx_data,tempids,tx_meta,null,null,null));\n});\n\n/**\n * Factory function for datascript.db/TxReport, taking a map of keywords to field values.\n */\ndatascript.db.map__GT_TxReport = (function datascript$db$map__GT_TxReport(G__21323){\nvar extmap__4478__auto__ = (function (){var G__21343 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21323,new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194)], 0));\nif(cljs.core.record_QMARK_(G__21323)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__21343);\n} else {\nreturn G__21343;\n}\n})();\nreturn (new datascript.db.TxReport(new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536).cljs$core$IFn$_invoke$arity$1(G__21323),new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666).cljs$core$IFn$_invoke$arity$1(G__21323),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761).cljs$core$IFn$_invoke$arity$1(G__21323),new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089).cljs$core$IFn$_invoke$arity$1(G__21323),new cljs.core.Keyword(null,\"tx-meta\",\"tx-meta\",1159283194).cljs$core$IFn$_invoke$arity$1(G__21323),null,cljs.core.not_empty(extmap__4478__auto__),null));\n});\n\ndatascript.db.is_attr_QMARK_ = (function datascript$db$is_attr_QMARK_(db,attr,property){\nreturn cljs.core.contains_QMARK_(datascript.db._attrs_by(db,property),attr);\n});\ndatascript.db.multival_QMARK_ = (function datascript$db$multival_QMARK_(db,attr){\nreturn datascript.db.is_attr_QMARK_(db,attr,new cljs.core.Keyword(\"db.cardinality\",\"many\",\"db.cardinality/many\",772806234));\n});\ndatascript.db.ref_QMARK_ = (function datascript$db$ref_QMARK_(db,attr){\nreturn datascript.db.is_attr_QMARK_(db,attr,new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079));\n});\ndatascript.db.component_QMARK_ = (function datascript$db$component_QMARK_(db,attr){\nreturn datascript.db.is_attr_QMARK_(db,attr,new cljs.core.Keyword(\"db\",\"isComponent\",\"db/isComponent\",423352398));\n});\ndatascript.db.indexing_QMARK_ = (function datascript$db$indexing_QMARK_(db,attr){\nreturn datascript.db.is_attr_QMARK_(db,attr,new cljs.core.Keyword(\"db\",\"index\",\"db/index\",-1531680669));\n});\ndatascript.db.entid = (function datascript$db$entid(db,eid){\nwhile(true){\n\nif(((typeof eid === 'number') && ((eid > (0))))){\nreturn eid;\n} else {\nif(cljs.core.sequential_QMARK_(eid)){\nvar vec__21344 = eid;\nvar attr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21344,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21344,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(eid),(2))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Lookup ref should contain 2 elements: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eid], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"lookup-ref\",\"syntax\",\"lookup-ref/syntax\",-317304012),new cljs.core.Keyword(null,\"entity-id\",\"entity-id\",1485898093),eid], null));\n} else {\nif((!(datascript.db.is_attr_QMARK_(db,attr,new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388))))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Lookup ref attribute should be marked as :db/unique: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eid], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"lookup-ref\",\"unique\",\"lookup-ref/unique\",-960647710),new cljs.core.Keyword(null,\"entity-id\",\"entity-id\",1485898093),eid], null));\n} else {\nif((value == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datascript.db._datoms(db,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),eid)));\n\n}\n}\n}\n} else {\nif(cljs.core.array_QMARK_(eid)){\nvar G__22133 = db;\nvar G__22134 = cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(eid);\ndb = G__22133;\neid = G__22134;\ncontinue;\n} else {\nif((eid instanceof cljs.core.Keyword)){\nreturn new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datascript.db._datoms(db,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"ident\",\"db/ident\",-737096),eid], null))));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Expected number or lookup ref for entity id, got \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eid], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"entity-id\",\"syntax\",\"entity-id/syntax\",1921317045),new cljs.core.Keyword(null,\"entity-id\",\"entity-id\",1485898093),eid], null));\n\n}\n}\n}\n}\nbreak;\n}\n});\ndatascript.db.entid_strict = (function datascript$db$entid_strict(db,eid){\nvar or__4185__auto__ = datascript.db.entid(db,eid);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Nothing found for entity id \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eid], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"entity-id\",\"missing\",\"entity-id/missing\",1234588374),new cljs.core.Keyword(null,\"entity-id\",\"entity-id\",1485898093),eid], null));\n}\n});\ndatascript.db.entid_some = (function datascript$db$entid_some(db,eid){\nif(cljs.core.truth_(eid)){\nreturn datascript.db.entid_strict(db,eid);\n} else {\nreturn null;\n}\n});\ndatascript.db.validate_datom = (function datascript$db$validate_datom(db,datom){\nif(cljs.core.truth_((function (){var and__4174__auto__ = datom.datascript$db$IDatom$datom_added$arity$1(null);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn datascript.db.is_attr_QMARK_(db,datom.a,new cljs.core.Keyword(\"db\",\"unique\",\"db/unique\",329396388));\n} else {\nreturn and__4174__auto__;\n}\n})())){\nvar temp__5739__auto__ = cljs.core.not_empty(datascript.db._datoms(db,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datom.a,datom.v], null)));\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar found = temp__5739__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot add \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datom], 0)),\" because of unique constraint: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([found], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"unique\",\"transact/unique\",-940992320),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),datom.a,new cljs.core.Keyword(null,\"datom\",\"datom\",-371556090),datom], null));\n}\n} else {\nreturn null;\n}\n});\ndatascript.db.validate_eid = (function datascript$db$validate_eid(eid,at){\nif(typeof eid === 'number'){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad entity id \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eid], 0)),\" at \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([at], 0)),\", expected number\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"entity-id\",\"entity-id\",1485898093),eid,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),at], null));\n}\n});\ndatascript.db.validate_attr = (function datascript$db$validate_attr(attr,at){\nif((((attr instanceof cljs.core.Keyword)) || (typeof attr === 'string'))){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad entity attribute \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attr], 0)),\" at \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([at], 0)),\", expected keyword or string\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),attr,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),at], null));\n}\n});\ndatascript.db.validate_val = (function datascript$db$validate_val(v,at){\nif((v == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot store nil as a value at \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([at], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"value\",\"value\",305978217),v,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),at], null));\n} else {\nreturn null;\n}\n});\ndatascript.db.current_tx = (function datascript$db$current_tx(report){\nreturn (cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(report,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-before\",\"db-before\",-553691536),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339)], null)) + (1));\n});\ndatascript.db.next_eid = (function datascript$db$next_eid(db){\nreturn (new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075).cljs$core$IFn$_invoke$arity$1(db) + (1));\n});\ndatascript.db.tx_id_QMARK_ = (function datascript$db$tx_id_QMARK_(e){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e,new cljs.core.Keyword(\"db\",\"current-tx\",\"db/current-tx\",1600722132))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e,\":db/current-tx\")) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e,\"datomic.tx\")) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e,\"datascript.tx\")));\n});\ndatascript.db.tempid_QMARK_ = (function datascript$db$tempid_QMARK_(x){\nreturn ((((typeof x === 'number') && ((x < (0))))) || (typeof x === 'string'));\n});\ndatascript.db.advance_max_eid = (function datascript$db$advance_max_eid(db,eid){\nvar G__21347 = db;\nif((((eid > new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075).cljs$core$IFn$_invoke$arity$1(db))) && ((eid < (536870912))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21347,new cljs.core.Keyword(null,\"max-eid\",\"max-eid\",2134868075),eid);\n} else {\nreturn G__21347;\n}\n});\ndatascript.db.allocate_eid = (function datascript$db$allocate_eid(var_args){\nvar G__21349 = arguments.length;\nswitch (G__21349) {\ncase 2:\nreturn datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$2 = (function (report,eid){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(report,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666)], null),datascript.db.advance_max_eid,eid);\n}));\n\n(datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3 = (function (report,e,eid){\nvar G__21350 = report;\nvar G__21350__$1 = ((datascript.db.tx_id_QMARK_(e))?cljs.core.assoc_in(G__21350,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),e], null),eid):G__21350);\nvar G__21350__$2 = ((datascript.db.tempid_QMARK_(e))?cljs.core.assoc_in(G__21350__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),e], null),eid):G__21350__$1);\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(G__21350__$2,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666)], null),datascript.db.advance_max_eid,eid);\n\n}));\n\n(datascript.db.allocate_eid.cljs$lang$maxFixedArity = 3);\n\ndatascript.db.with_datom = (function datascript$db$with_datom(db,datom){\ndatascript.db.validate_datom(db,datom);\n\nvar indexing_QMARK_ = datascript.db.indexing_QMARK_(db,datom.a);\nif(cljs.core.truth_(datom.datascript$db$IDatom$datom_added$arity$1(null))){\nvar G__21351 = db;\nvar G__21351__$1 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21351,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073)], null),me.tonsky.persistent_sorted_set.conj,datom,datascript.db.cmp_datoms_eavt_quick)\n;\nvar G__21351__$2 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21351__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059)], null),me.tonsky.persistent_sorted_set.conj,datom,datascript.db.cmp_datoms_aevt_quick)\n;\nvar G__21351__$3 = ((indexing_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21351__$2,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032)], null),me.tonsky.persistent_sorted_set.conj,datom,datascript.db.cmp_datoms_avet_quick):G__21351__$2);\nvar G__21351__$4 = datascript.db.advance_max_eid(G__21351__$3,datom.e)\n;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21351__$4,new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)));\n\n} else {\nvar temp__5737__auto__ = cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [datom.e,datom.a,datom.v], null)));\nif((temp__5737__auto__ == null)){\nreturn db;\n} else {\nvar removing = temp__5737__auto__;\nvar G__21352 = db;\nvar G__21352__$1 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21352,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"eavt\",\"eavt\",-666437073)], null),me.tonsky.persistent_sorted_set.disj,removing,datascript.db.cmp_datoms_eavt_quick)\n;\nvar G__21352__$2 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21352__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aevt\",\"aevt\",-585148059)], null),me.tonsky.persistent_sorted_set.disj,removing,datascript.db.cmp_datoms_aevt_quick)\n;\nvar G__21352__$3 = ((indexing_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(G__21352__$2,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032)], null),me.tonsky.persistent_sorted_set.disj,removing,datascript.db.cmp_datoms_avet_quick):G__21352__$2);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21352__$3,new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)));\n\n}\n}\n});\ndatascript.db.transact_report = (function datascript$db$transact_report(report,datom){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(report,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666)], null),datascript.db.with_datom,datom),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761)], null),cljs.core.conj,datom);\n});\ndatascript.db.reverse_ref_QMARK_ = (function datascript$db$reverse_ref_QMARK_(attr){\nif((attr instanceof cljs.core.Keyword)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"_\",cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.name(attr),(0)));\n} else {\nif(typeof attr === 'string'){\nreturn cljs.core.boolean$(cljs.core.re_matches(/(?:([^\\/]+)\\/)?_([^\\/]+)/,attr));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute type: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attr], 0)),\", expected keyword or string\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),attr], null));\n\n}\n}\n});\ndatascript.db.reverse_ref = (function datascript$db$reverse_ref(attr){\nif((attr instanceof cljs.core.Keyword)){\nif(datascript.db.reverse_ref_QMARK_(attr)){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(attr),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.name(attr),(1)));\n} else {\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(attr),[\"_\",cljs.core.name(attr)].join(''));\n}\n} else {\nif(typeof attr === 'string'){\nvar vec__21353 = cljs.core.re_matches(/(?:([^\\/]+)\\/)?([^\\/]+)/,attr);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21353,(0),null);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21353,(1),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21353,(2),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"_\",cljs.core.nth.cljs$core$IFn$_invoke$arity$2(name,(0)))){\nif(cljs.core.truth_(ns)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\"/\",cljs.core.subs.cljs$core$IFn$_invoke$arity$2(name,(1))].join('');\n} else {\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(name,(1));\n}\n} else {\nif(cljs.core.truth_(ns)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\"/_\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join('');\n} else {\nreturn [\"_\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join('');\n}\n}\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute type: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attr], 0)),\", expected keyword or string\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),attr], null));\n\n}\n}\n});\ndatascript.db.check_upsert_conflict = (function datascript$db$check_upsert_conflict(entity,acc){\nvar vec__21356 = acc;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21356,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21356,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21356,(2),null);\nvar _e = new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(entity);\nif((((_e == null)) || (datascript.db.tempid_QMARK_(_e)) || ((acc == null)) || ((_e === e)))){\nreturn acc;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Conflicting upsert: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,v], null)], 0)),\" resolves to \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e], 0)),\", but entity already has :db/id \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_e], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"upsert\",\"transact/upsert\",412688078),new cljs.core.Keyword(null,\"entity\",\"entity\",-450970276),entity,new cljs.core.Keyword(null,\"assertion\",\"assertion\",-1645134882),acc], null));\n}\n});\ndatascript.db.upsert_reduce_fn = (function datascript$db$upsert_reduce_fn(db,eav,a,v){\nvar e = new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datascript.db._datoms(db,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,v], null))));\nif((e == null)){\nreturn eav;\n} else {\nif((eav == null)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,a,v], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(eav,(0)),e)){\nreturn eav;\n} else {\nvar vec__21359 = eav;\nvar _e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21359,(0),null);\nvar _a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21359,(1),null);\nvar _v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21359,(2),null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Conflicting upserts: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_a,_v], null)], 0)),\" resolves to \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_e], 0)),\", but \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,v], null)], 0)),\" resolves to \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"upsert\",\"transact/upsert\",412688078),new cljs.core.Keyword(null,\"assertion\",\"assertion\",-1645134882),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,a,v], null),new cljs.core.Keyword(null,\"conflict\",\"conflict\",1978796605),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_e,_a,_v], null)], null));\n\n}\n}\n}\n});\ndatascript.db.upsert_eid = (function datascript$db$upsert_eid(db,entity){\nvar temp__5739__auto__ = cljs.core.not_empty(datascript.db._attrs_by(db,new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722)));\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar idents = temp__5739__auto__;\nreturn cljs.core.first(datascript.db.check_upsert_conflict(entity,cljs.core.reduce_kv((function (eav,a,v){\nif((!(cljs.core.contains_QMARK_(idents,a)))){\nreturn eav;\n} else {\nif(((datascript.db.multival_QMARK_(db,a)) && (((me.tonsky.persistent_sorted_set.arrays.array_QMARK_(v)) || (((cljs.core.coll_QMARK_(v)) && ((!(cljs.core.map_QMARK_(v)))))))))){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__21362_SHARP_,p2__21363_SHARP_){\nreturn datascript.db.upsert_reduce_fn(db,p1__21362_SHARP_,a,p2__21363_SHARP_);\n}),eav,v);\n} else {\nreturn datascript.db.upsert_reduce_fn(db,eav,a,v);\n\n}\n}\n}),null,entity)));\n}\n});\ndatascript.db.maybe_wrap_multival = (function datascript$db$maybe_wrap_multival(db,a,vs){\nif((!(((datascript.db.reverse_ref_QMARK_(a)) || (datascript.db.multival_QMARK_(db,a)))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vs], null);\n} else {\nif((!(((me.tonsky.persistent_sorted_set.arrays.array_QMARK_(vs)) || (((cljs.core.coll_QMARK_(vs)) && ((!(cljs.core.map_QMARK_(vs)))))))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vs], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(vs),(2))) && (datascript.db.is_attr_QMARK_(db,cljs.core.first(vs),new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vs], null);\n} else {\nreturn vs;\n\n}\n}\n}\n});\ndatascript.db.explode = (function datascript$db$explode(db,entity){\nvar eid = new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(entity);\nvar iter__4582__auto__ = (function datascript$db$explode_$_iter__21364(s__21365){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__21365__$1 = s__21365;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__21365__$1);\nif(temp__5735__auto__){\nvar xs__6292__auto__ = temp__5735__auto__;\nvar vec__21370 = cljs.core.first(xs__6292__auto__);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21370,(0),null);\nvar vs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21370,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(a,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098))){\nvar _ = datascript.db.validate_attr(a,cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),eid,a,vs]));\nvar reverse_QMARK_ = datascript.db.reverse_ref_QMARK_(a);\nvar straight_a = ((reverse_QMARK_)?datascript.db.reverse_ref(a):a);\nvar ___$1 = ((((reverse_QMARK_) && ((!(datascript.db.ref_QMARK_(db,straight_a))))))?(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad attribute \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0)),\": reverse attribute name requires {:db/valueType :db.type/ref} in schema\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"attribute\",\"attribute\",-2074029119),a,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),eid,a,vs])], null))})():null);\nvar iterys__4578__auto__ = ((function (s__21365__$1,_,reverse_QMARK_,straight_a,___$1,vec__21370,a,vs,xs__6292__auto__,temp__5735__auto__,eid){\nreturn (function datascript$db$explode_$_iter__21364_$_iter__21366(s__21367){\nreturn (new cljs.core.LazySeq(null,((function (s__21365__$1,_,reverse_QMARK_,straight_a,___$1,vec__21370,a,vs,xs__6292__auto__,temp__5735__auto__,eid){\nreturn (function (){\nvar s__21367__$1 = s__21367;\nwhile(true){\nvar temp__5735__auto____$1 = cljs.core.seq(s__21367__$1);\nif(temp__5735__auto____$1){\nvar s__21367__$2 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__21367__$2)){\nvar c__4580__auto__ = cljs.core.chunk_first(s__21367__$2);\nvar size__4581__auto__ = cljs.core.count(c__4580__auto__);\nvar b__21369 = cljs.core.chunk_buffer(size__4581__auto__);\nif((function (){var i__21368 = (0);\nwhile(true){\nif((i__21368 < size__4581__auto__)){\nvar v = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4580__auto__,i__21368);\ncljs.core.chunk_append(b__21369,((((datascript.db.ref_QMARK_(db,straight_a)) && (cljs.core.map_QMARK_(v))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,datascript.db.reverse_ref(a),eid):((reverse_QMARK_)?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),v,straight_a,eid], null):new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),eid,straight_a,v], null))));\n\nvar G__22266 = (i__21368 + (1));\ni__21368 = G__22266;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21369),datascript$db$explode_$_iter__21364_$_iter__21366(cljs.core.chunk_rest(s__21367__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__21369),null);\n}\n} else {\nvar v = cljs.core.first(s__21367__$2);\nreturn cljs.core.cons(((((datascript.db.ref_QMARK_(db,straight_a)) && (cljs.core.map_QMARK_(v))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,datascript.db.reverse_ref(a),eid):((reverse_QMARK_)?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),v,straight_a,eid], null):new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),eid,straight_a,v], null))),datascript$db$explode_$_iter__21364_$_iter__21366(cljs.core.rest(s__21367__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(s__21365__$1,_,reverse_QMARK_,straight_a,___$1,vec__21370,a,vs,xs__6292__auto__,temp__5735__auto__,eid))\n,null,null));\n});})(s__21365__$1,_,reverse_QMARK_,straight_a,___$1,vec__21370,a,vs,xs__6292__auto__,temp__5735__auto__,eid))\n;\nvar fs__4579__auto__ = cljs.core.seq(iterys__4578__auto__(datascript.db.maybe_wrap_multival(db,a,vs)));\nif(fs__4579__auto__){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4579__auto__,datascript$db$explode_$_iter__21364(cljs.core.rest(s__21365__$1)));\n} else {\nvar G__22276 = cljs.core.rest(s__21365__$1);\ns__21365__$1 = G__22276;\ncontinue;\n}\n} else {\nvar G__22277 = cljs.core.rest(s__21365__$1);\ns__21365__$1 = G__22277;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4582__auto__(entity);\n});\ndatascript.db.transact_add = (function datascript$db$transact_add(report,p__21373){\nvar vec__21374 = p__21373;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21374,(0),null);\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21374,(1),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21374,(2),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21374,(3),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21374,(4),null);\nvar ent = vec__21374;\ndatascript.db.validate_attr(a,ent);\n\ndatascript.db.validate_val(v,ent);\n\nvar tx__$1 = (function (){var or__4185__auto__ = tx;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn datascript.db.current_tx(report);\n}\n})();\nvar db = new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666).cljs$core$IFn$_invoke$arity$1(report);\nvar e__$1 = datascript.db.entid_strict(db,e);\nvar v__$1 = ((datascript.db.ref_QMARK_(db,a))?datascript.db.entid_strict(db,v):v);\nvar new_datom = datascript.db.datom.cljs$core$IFn$_invoke$arity$4(e__$1,a,v__$1,tx__$1);\nif(datascript.db.multival_QMARK_(db,a)){\nif(cljs.core.empty_QMARK_(datascript.db._search(db,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1,a,v__$1], null)))){\nreturn datascript.db.transact_report(report,new_datom);\n} else {\nreturn report;\n}\n} else {\nvar temp__5737__auto__ = cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1,a], null)));\nif((temp__5737__auto__ == null)){\nreturn datascript.db.transact_report(report,new_datom);\n} else {\nvar old_datom = temp__5737__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_datom.v,v__$1)){\nreturn report;\n} else {\nreturn datascript.db.transact_report(datascript.db.transact_report(report,datascript.db.datom.cljs$core$IFn$_invoke$arity$5(e__$1,a,old_datom.v,tx__$1,false)),new_datom);\n}\n}\n}\n});\ndatascript.db.transact_retract_datom = (function datascript$db$transact_retract_datom(report,d){\nvar tx = datascript.db.current_tx(report);\nreturn datascript.db.transact_report(report,datascript.db.datom.cljs$core$IFn$_invoke$arity$5(d.e,d.a,d.v,tx,false));\n});\ndatascript.db.retract_components = (function datascript$db$retract_components(db,datoms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (d){\nreturn datascript.db.component_QMARK_(db,d.a);\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (d){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db.fn\",\"retractEntity\",\"db.fn/retractEntity\",-1423535441),d.v], null);\n}))),datoms);\n});\ndatascript.db.retry_with_tempid = (function datascript$db$retry_with_tempid(initial_report,report,es,tempid,upserted_eid){\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089).cljs$core$IFn$_invoke$arity$1(initial_report),tempid)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Conflicting upsert: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tempid], 0)),\" resolves\",\" both to \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([upserted_eid], 0)),\" and \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(initial_report,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),tempid], null))], 0))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"upsert\",\"transact/upsert\",412688078)], null));\n} else {\nvar tempids_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089).cljs$core$IFn$_invoke$arity$1(report),tempid,upserted_eid);\nvar report_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(initial_report,new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),tempids_SINGLEQUOTE_);\nreturn (datascript.db.transact_tx_data.cljs$core$IFn$_invoke$arity$2 ? datascript.db.transact_tx_data.cljs$core$IFn$_invoke$arity$2(report_SINGLEQUOTE_,es) : datascript.db.transact_tx_data.call(null,report_SINGLEQUOTE_,es));\n}\n});\ndatascript.db.builtin_fn_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(\"db.fn\",\"call\",\"db.fn/call\",-151594418),null,new cljs.core.Keyword(\"db\",\"cas\",\"db/cas\",-451542322),null,new cljs.core.Keyword(\"db.fn\",\"retractEntity\",\"db.fn/retractEntity\",-1423535441),null,new cljs.core.Keyword(\"db\",\"retractEntity\",\"db/retractEntity\",-1452737935),null,new cljs.core.Keyword(\"db\",\"retract\",\"db/retract\",-1549825231),null,new cljs.core.Keyword(\"db.fn\",\"retractAttribute\",\"db.fn/retractAttribute\",937402164),null,new cljs.core.Keyword(\"db.fn\",\"cas\",\"db.fn/cas\",-379352172),null,new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),null], null), null);\ndatascript.db.transact_tx_data = (function datascript$db$transact_tx_data(initial_report,initial_es){\nif((((initial_es == null)) || (cljs.core.sequential_QMARK_(initial_es)))){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad transaction data \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_es], 0)),\", expected sequential collection\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),initial_es], null));\n}\n\nvar report = cljs.core.update.cljs$core$IFn$_invoke$arity$3(initial_report,new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),cljs.core.transient$);\nvar es = initial_es;\nwhile(true){\nvar vec__21394 = es;\nvar seq__21395 = cljs.core.seq(vec__21394);\nvar first__21396 = cljs.core.first(seq__21395);\nvar seq__21395__$1 = cljs.core.next(seq__21395);\nvar entity = first__21396;\nvar entities = seq__21395__$1;\nvar db = new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666).cljs$core$IFn$_invoke$arity$1(report);\nvar map__21397 = report;\nvar map__21397__$1 = (((((!((map__21397 == null))))?(((((map__21397.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__21397.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21397):map__21397);\nvar tempids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21397__$1,new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089));\nif(cljs.core.empty_QMARK_(es)){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc_in(report,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tempids\",\"tempids\",1767509089),new cljs.core.Keyword(\"db\",\"current-tx\",\"db/current-tx\",1600722132)], null),datascript.db.current_tx(report)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),new cljs.core.Keyword(null,\"max-tx\",\"max-tx\",1119558339)], null),cljs.core.inc),new cljs.core.Keyword(null,\"db-after\",\"db-after\",-571884666),cljs.core.persistent_BANG_);\n} else {\nif((entity == null)){\nvar G__22302 = report;\nvar G__22303 = entities;\nreport = G__22302;\nes = G__22303;\ncontinue;\n} else {\nif(cljs.core.map_QMARK_(entity)){\nvar old_eid = new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098).cljs$core$IFn$_invoke$arity$1(entity);\nif(datascript.db.tx_id_QMARK_(old_eid)){\nvar id = datascript.db.current_tx(report);\nvar G__22305 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,old_eid,id);\nvar G__22306 = cljs.core.cons(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(entity,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),id),entities);\nreport = G__22305;\nes = G__22306;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(old_eid)){\nvar id = datascript.db.entid_strict(db,old_eid);\nvar G__22309 = report;\nvar G__22310 = cljs.core.cons(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(entity,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),id),entities);\nreport = G__22309;\nes = G__22310;\ncontinue;\n} else {\nvar upserted_eid = datascript.db.upsert_eid(db,entity);\nif((!((upserted_eid == null)))){\nif(((datascript.db.tempid_QMARK_(old_eid)) && (cljs.core.contains_QMARK_(tempids,old_eid)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(upserted_eid,cljs.core.get.cljs$core$IFn$_invoke$arity$2(tempids,old_eid))))){\nreturn datascript.db.retry_with_tempid(initial_report,report,initial_es,old_eid,upserted_eid);\n} else {\nvar G__22317 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,old_eid,upserted_eid);\nvar G__22318 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(datascript.db.explode(db,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(entity,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),upserted_eid)),entities);\nreport = G__22317;\nes = G__22318;\ncontinue;\n}\n} else {\nif(((typeof old_eid === 'number') || ((old_eid == null)) || (typeof old_eid === 'string'))){\nvar new_eid = (((old_eid == null))?datascript.db.next_eid(db):((datascript.db.tempid_QMARK_(old_eid))?(function (){var or__4185__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(tempids,old_eid);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn datascript.db.next_eid(db);\n}\n})():old_eid\n));\nvar new_entity = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(entity,new cljs.core.Keyword(\"db\",\"id\",\"db/id\",-1388397098),new_eid);\nvar G__22323 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,old_eid,new_eid);\nvar G__22325 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(datascript.db.explode(db,new_entity),entities);\nreport = G__22323;\nes = G__22325;\ncontinue;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Expected number, string or lookup ref for :db/id, got \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old_eid], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"entity-id\",\"syntax\",\"entity-id/syntax\",1921317045),new cljs.core.Keyword(null,\"entity\",\"entity\",-450970276),entity], null));\n\n}\n}\n}\n}\n} else {\nif(cljs.core.sequential_QMARK_(entity)){\nvar vec__21399 = entity;\nvar op = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21399,(0),null);\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21399,(1),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21399,(2),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21399,(3),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db.fn\",\"call\",\"db.fn/call\",-151594418))){\nvar vec__21402 = entity;\nvar seq__21403 = cljs.core.seq(vec__21402);\nvar first__21404 = cljs.core.first(seq__21403);\nvar seq__21403__$1 = cljs.core.next(seq__21403);\nvar _ = first__21404;\nvar first__21404__$1 = cljs.core.first(seq__21403__$1);\nvar seq__21403__$2 = cljs.core.next(seq__21403__$1);\nvar f = first__21404__$1;\nvar args = seq__21403__$2;\nvar G__22336 = report;\nvar G__22337 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,db,args),entities);\nreport = G__22336;\nes = G__22337;\ncontinue;\n} else {\nif((((op instanceof cljs.core.Keyword)) && (cljs.core.not((datascript.db.builtin_fn_QMARK_.cljs$core$IFn$_invoke$arity$1 ? datascript.db.builtin_fn_QMARK_.cljs$core$IFn$_invoke$arity$1(op) : datascript.db.builtin_fn_QMARK_.call(null,op)))))){\nvar temp__5737__auto__ = datascript.db.entid(db,op);\nif((temp__5737__auto__ == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Can\\u2019t find entity for transaction fn \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([op], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),new cljs.core.Keyword(\"db.fn\",\"call\",\"db.fn/call\",-151594418),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),entity], null));\n} else {\nvar ident = temp__5737__auto__;\nvar fun = new cljs.core.Keyword(null,\"v\",\"v\",21465059).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ident,new cljs.core.Keyword(\"db\",\"fn\",\"db/fn\",-1175261470)], null))));\nvar args = cljs.core.next(entity);\nif(cljs.core.fn_QMARK_(fun)){\nvar G__22346 = report;\nvar G__22347 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(fun,db,args),entities);\nreport = G__22346;\nes = G__22347;\ncontinue;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Entity \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([op], 0)),\" expected to have :db/fn attribute with fn? value\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),new cljs.core.Keyword(\"db.fn\",\"call\",\"db.fn/call\",-151594418),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),entity], null));\n}\n}\n} else {\nif(((datascript.db.tempid_QMARK_(e)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841))))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Can't use tempid in '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([entity], 0)),\"'. Tempids are allowed in :db/add only\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),entity], null));\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db.fn\",\"cas\",\"db.fn/cas\",-379352172))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db\",\"cas\",\"db/cas\",-451542322))))){\nvar vec__21405 = entity;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(0),null);\nvar e__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(1),null);\nvar a__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(2),null);\nvar ov = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(3),null);\nvar nv = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21405,(4),null);\nvar e__$2 = datascript.db.entid_strict(db,e__$1);\nvar ___$1 = datascript.db.validate_attr(a__$1,entity);\nvar ov__$1 = ((datascript.db.ref_QMARK_(db,a__$1))?datascript.db.entid_strict(db,ov):ov);\nvar nv__$1 = ((datascript.db.ref_QMARK_(db,a__$1))?datascript.db.entid_strict(db,nv):nv);\nvar ___$2 = datascript.db.validate_val(nv__$1,entity);\nvar datoms = cljs.core.vec(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$2,a__$1], null)));\nif(datascript.db.multival_QMARK_(db,a__$1)){\nif(cljs.core.truth_(cljs.core.some(((function (report,es,vec__21405,_,e__$1,a__$1,ov,nv,e__$2,___$1,ov__$1,nv__$1,___$2,datoms,vec__21399,op,e,a,v,vec__21394,seq__21395,first__21396,seq__21395__$1,entity,entities,db,map__21397,map__21397__$1,tempids){\nreturn (function (d){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d.v,ov__$1);\n});})(report,es,vec__21405,_,e__$1,a__$1,ov,nv,e__$2,___$1,ov__$1,nv__$1,___$2,datoms,vec__21399,op,e,a,v,vec__21394,seq__21395,first__21396,seq__21395__$1,entity,entities,db,map__21397,map__21397__$1,tempids))\n,datoms))){\nvar G__22381 = datascript.db.transact_add(report,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),e__$2,a__$1,nv__$1], null));\nvar G__22382 = entities;\nreport = G__22381;\nes = G__22382;\ncontinue;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":db.fn/cas failed on datom [\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e__$2], 0)),\" \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a__$1], 0)),\" \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"v\",\"v\",21465059),datoms)], 0)),\"], expected \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ov__$1], 0))].join(''),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"cas\",\"transact/cas\",816687170),new cljs.core.Keyword(null,\"old\",\"old\",-1825222690),datoms,new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),ov__$1,new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),nv__$1], null));\n}\n} else {\nvar v__$1 = new cljs.core.Keyword(null,\"v\",\"v\",21465059).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datoms));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v__$1,ov__$1)){\nvar G__22394 = datascript.db.transact_add(report,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),e__$2,a__$1,nv__$1], null));\nvar G__22395 = entities;\nreport = G__22394;\nes = G__22395;\ncontinue;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":db.fn/cas failed on datom [\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e__$2], 0)),\" \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a__$1], 0)),\" \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v__$1], 0)),\"], expected \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ov__$1], 0))].join(''),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"cas\",\"transact/cas\",816687170),new cljs.core.Keyword(null,\"old\",\"old\",-1825222690),cljs.core.first(datoms),new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),ov__$1,new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),nv__$1], null));\n}\n}\n} else {\nif(datascript.db.tx_id_QMARK_(e)){\nvar G__22400 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,e,datascript.db.current_tx(report));\nvar G__22401 = cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op,datascript.db.current_tx(report),a,v], null),entities);\nreport = G__22400;\nes = G__22401;\ncontinue;\n} else {\nif(((datascript.db.ref_QMARK_(db,a)) && (datascript.db.tx_id_QMARK_(v)))){\nvar G__22408 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,v,datascript.db.current_tx(report));\nvar G__22409 = cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op,e,a,datascript.db.current_tx(report)], null),entities);\nreport = G__22408;\nes = G__22409;\ncontinue;\n} else {\nif(((datascript.db.ref_QMARK_(db,a)) && (datascript.db.tempid_QMARK_(v)))){\nvar temp__5737__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(tempids,v);\nif((temp__5737__auto__ == null)){\nvar G__22410 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,v,datascript.db.next_eid(db));\nvar G__22411 = es;\nreport = G__22410;\nes = G__22411;\ncontinue;\n} else {\nvar vid = temp__5737__auto__;\nvar G__22412 = report;\nvar G__22413 = cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op,e,a,vid], null),entities);\nreport = G__22412;\nes = G__22413;\ncontinue;\n}\n} else {\nif(datascript.db.tempid_QMARK_(e)){\nvar upserted_eid = ((datascript.db.is_attr_QMARK_(db,a,new cljs.core.Keyword(\"db.unique\",\"identity\",\"db.unique/identity\",1675950722)))?new cljs.core.Keyword(null,\"e\",\"e\",1381269198).cljs$core$IFn$_invoke$arity$1(cljs.core.first(datascript.db._datoms(db,new cljs.core.Keyword(null,\"avet\",\"avet\",1383857032),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,v], null)))):null);\nvar allocated_eid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(tempids,e);\nif(cljs.core.truth_((function (){var and__4174__auto__ = upserted_eid;\nif(cljs.core.truth_(and__4174__auto__)){\nvar and__4174__auto____$1 = allocated_eid;\nif(cljs.core.truth_(and__4174__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(upserted_eid,allocated_eid);\n} else {\nreturn and__4174__auto____$1;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())){\nreturn datascript.db.retry_with_tempid(initial_report,report,initial_es,e,upserted_eid);\n} else {\nvar eid = (function (){var or__4185__auto__ = upserted_eid;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = allocated_eid;\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn datascript.db.next_eid(db);\n}\n}\n})();\nvar G__22414 = datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3(report,e,eid);\nvar G__22415 = cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [op,eid,a,v], null),entities);\nreport = G__22414;\nes = G__22415;\ncontinue;\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841))){\nvar G__22416 = datascript.db.transact_add(report,entity);\nvar G__22417 = entities;\nreport = G__22416;\nes = G__22417;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db\",\"retract\",\"db/retract\",-1549825231))){\nvar temp__5737__auto__ = datascript.db.entid(db,e);\nif((temp__5737__auto__ == null)){\nvar G__22420 = report;\nvar G__22421 = entities;\nreport = G__22420;\nes = G__22421;\ncontinue;\n} else {\nvar e__$1 = temp__5737__auto__;\nvar v__$1 = ((datascript.db.ref_QMARK_(db,a))?datascript.db.entid_strict(db,v):v);\ndatascript.db.validate_attr(a,entity);\n\ndatascript.db.validate_val(v__$1,entity);\n\nvar temp__5737__auto____$1 = cljs.core.first(datascript.db._search(db,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1,a,v__$1], null)));\nif((temp__5737__auto____$1 == null)){\nvar G__22424 = report;\nvar G__22425 = entities;\nreport = G__22424;\nes = G__22425;\ncontinue;\n} else {\nvar old_datom = temp__5737__auto____$1;\nvar G__22427 = datascript.db.transact_retract_datom(report,old_datom);\nvar G__22428 = entities;\nreport = G__22427;\nes = G__22428;\ncontinue;\n}\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db.fn\",\"retractAttribute\",\"db.fn/retractAttribute\",937402164))){\nvar temp__5737__auto__ = datascript.db.entid(db,e);\nif((temp__5737__auto__ == null)){\nvar G__22430 = report;\nvar G__22431 = entities;\nreport = G__22430;\nes = G__22431;\ncontinue;\n} else {\nvar e__$1 = temp__5737__auto__;\nvar _ = datascript.db.validate_attr(a,entity);\nvar datoms = cljs.core.vec(datascript.db._search(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1,a], null)));\nvar G__22443 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.db.transact_retract_datom,report,datoms);\nvar G__22444 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(datascript.db.retract_components(db,datoms),entities);\nreport = G__22443;\nes = G__22444;\ncontinue;\n}\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db.fn\",\"retractEntity\",\"db.fn/retractEntity\",-1423535441))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op,new cljs.core.Keyword(\"db\",\"retractEntity\",\"db/retractEntity\",-1452737935))))){\nvar temp__5737__auto__ = datascript.db.entid(db,e);\nif((temp__5737__auto__ == null)){\nvar G__22445 = report;\nvar G__22446 = entities;\nreport = G__22445;\nes = G__22446;\ncontinue;\n} else {\nvar e__$1 = temp__5737__auto__;\nvar e_datoms = cljs.core.vec(datascript.db._search(db,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [e__$1], null)));\nvar v_datoms = cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (report,es,e_datoms,e__$1,temp__5737__auto__,vec__21399,op,e,a,v,vec__21394,seq__21395,first__21396,seq__21395__$1,entity,entities,db,map__21397,map__21397__$1,tempids){\nreturn (function (a__$1){\nreturn datascript.db._search(db,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,a__$1,e__$1], null));\n});})(report,es,e_datoms,e__$1,temp__5737__auto__,vec__21399,op,e,a,v,vec__21394,seq__21395,first__21396,seq__21395__$1,entity,entities,db,map__21397,map__21397__$1,tempids))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.db._attrs_by(db,new cljs.core.Keyword(\"db.type\",\"ref\",\"db.type/ref\",-1728373079))], 0)));\nvar G__22447 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.db.transact_retract_datom,report,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(e_datoms,v_datoms));\nvar G__22448 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(datascript.db.retract_components(db,e_datoms),entities);\nreport = G__22447;\nes = G__22448;\ncontinue;\n}\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown operation at \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([entity], 0)),\", expected :db/add, :db/retract, :db.fn/call, :db.fn/retractAttribute, :db.fn/retractEntity or an ident corresponding to an installed transaction function (e.g. {:db/ident <keyword> :db/fn <Ifn>}, usage of :db/ident requires {:db/unique :db.unique/identity} in schema)\"].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"operation\",\"operation\",-1267664310),op,new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),entity], null));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n} else {\nif(datascript.db.datom_QMARK_(entity)){\nvar vec__21408 = entity;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21408,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21408,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21408,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21408,(3),null);\nvar added = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21408,(4),null);\nif(cljs.core.truth_(added)){\nvar G__22455 = datascript.db.transact_add(report,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"add\",\"db/add\",235286841),e,a,v,tx], null));\nvar G__22456 = entities;\nreport = G__22455;\nes = G__22456;\ncontinue;\n} else {\nvar G__22457 = report;\nvar G__22458 = cljs.core.cons(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"db\",\"retract\",\"db/retract\",-1549825231),e,a,v], null),entities);\nreport = G__22457;\nes = G__22458;\ncontinue;\n}\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Bad entity type at \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([entity], 0)),\", expected map or vector\"].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"transact\",\"syntax\",\"transact/syntax\",-299207078),new cljs.core.Keyword(null,\"tx-data\",\"tx-data\",934159761),entity], null));\n\n}\n}\n}\n}\n}\nbreak;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","datascript/db.cljc","~:line",1,"~:column",24,"~:end-line",1,"~:end-column",37,"~:lean-ns",true,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$case-tree","~$datascript.db","~$combine-cmp","^H","~$raise","^H","~$defrecord-updatable","^H","~$cond+","^H"],"~:excludes",["~#set",["~$seqable?"]],"~:macros",["^ ","^L",["^ ","~:arglists",["~#list",[["~$&","~$clauses"]]],"^7",47,"^8",3,"^6","datascript/db.cljc","~:name","~$datascript.db/cond+","~:ns","^H","~:macro",true],"^G",["^ ","^Q",["^R",[["~$qs","~$vs"]]],"^7",311,"^8",4,"^6","datascript/db.cljc","^T","~$datascript.db/case-tree","^V","^H","^W",true],"^K",["^ ","^Q",["^R",[["~$name","~$fields","~$&","~$impls"]]],"^7",126,"^8",4,"^6","datascript/db.cljc","^T","~$datascript.db/defrecord-updatable","^V","^H","^W",true],"~$if-cljs",["^ ","^Q",["^R",[["~$then","~$else"]]],"~:doc","Return then if we are generating cljs code and else for Clojure code.\n     https://groups.google.com/d/msg/clojurescript/iBY5HaQda4A/w1lAQi9_AwsJ","^7",73,"^8",4,"^6","datascript/db.cljc","^T","~$datascript.db/if-cljs","^V","^H","^W",true],"~$some-of",["^ ","^Q",["^R",[[],["~$x"],["~$x","~$&","~$more"]]],"^7",54,"^8",1,"^6","datascript/db.cljc","^T","~$datascript.db/some-of","^V","^H","^W",true],"^J",["^ ","^Q",["^R",[["~$&","~$fragments"]]],"^7",28,"^8",3,"^6","datascript/db.cljc","^T","~$datascript.db/raise","^V","^H","^W",true],"^I",["^ ","^Q",["^R",[["~$&","~$comps"]]],"^7",288,"^8",3,"^6","datascript/db.cljc","^T","~$datascript.db/combine-cmp","^V","^H","^W",true]],"^T","^H","~:op","^V","~:imports",null,"~:requires",["^ ","~$set","~$me.tonsky.persistent-sorted-set","~$arrays","~$me.tonsky.persistent-sorted-set.arrays","~$cljs.core","^1F","~$garray","~$goog.array","~$goog","^1I","^1C","^1C","^1E","^1E","~$clojure.data","^1J","~$clojure.walk","^1K","^1H","^1H"],"~:seen",["^N",["~:require","~:require-macros"]],"~:uses",null,"^1N",["^ ","^H","^H","^1F","^1F","^1D","^1E","^1E","^1E"],"~:form",["^R",["~$ns","^H",["^R",["^1M",["^1H","~:as","^1G"],["^1K"],["^1J"],["^1C","^1R","^1B"],["^1E","^1R","^1D"]]],["^R",["^1N",["^H","~:refer",["^G","^I","^J","^K","^L"]]]],["^R",["~:refer-clojure","~:exclude",["^O"]]]]],"~:flags",["^ ","^1M",["^N",[]],"^1N",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^1I","^1F","^1H","^1K","^1J","^1C","^1E"]],"^V","^H","~:resource-id",["~:shadow.build.classpath/resource","datascript/db.cljc"],"~:compiled-at",1578419136959,"~:resource-name","datascript/db.cljc","~:warnings",[],"~:source","(ns ^:no-doc ^:lean-ns datascript.db\n  (:require\n    #?(:cljs [goog.array :as garray])\n    [clojure.walk]\n    [clojure.data]\n    [me.tonsky.persistent-sorted-set :as set]\n    [me.tonsky.persistent-sorted-set.arrays :as arrays])\n  #?(:cljs (:require-macros [datascript.db :refer [case-tree combine-cmp raise defrecord-updatable cond+]]))\n  (:refer-clojure :exclude [seqable?])) \n\n;; ----------------------------------------------------------------------------\n\n#?(:cljs\n   (do\n     (def Exception js/Error)\n     (def IllegalArgumentException js/Error)\n     (def UnsupportedOperationException js/Error)))\n\n(def ^:const e0    0)\n(def ^:const tx0   0x20000000)\n(def ^:const emax  0x7FFFFFFF)\n(def ^:const txmax 0x7FFFFFFF)\n(def ^:const implicit-schema {:db/ident {:db/unique :db.unique/identity}})\n\n;; ----------------------------------------------------------------------------\n\n#?(:clj\n  (defmacro raise [& fragments]\n    (let [msgs (butlast fragments)\n          data (last fragments)]\n      `(throw (ex-info (str ~@(map (fn [m#] (if (string? m#) m# (list 'pr-str m#))) msgs)) ~data)))))\n\n(defn #?@(:clj  [^Boolean seqable?]  \n          :cljs [^boolean seqable?])\n  [x]\n  (and (not (string? x))\n  #?(:cljs (or (cljs.core/seqable? x)\n               (arrays/array? x))\n     :clj  (or (seq? x)\n               (instance? clojure.lang.Seqable x)\n               (nil? x)\n               (instance? Iterable x)\n               (arrays/array? x)\n               (instance? java.util.Map x)))))\n\n#?(:clj\n  (defmacro cond+ [& clauses]\n    (when-some [[test expr & rest] clauses]\n      (case test\n        :let `(let ~expr (cond+ ~@rest))\n        `(if ~test ~expr (cond+ ~@rest))))))\n\n#?(:clj\n(defmacro some-of\n  ([] nil)\n  ([x] x)\n  ([x & more]\n    `(let [x# ~x] (if (nil? x#) (some-of ~@more) x#)))))\n\n;; ----------------------------------------------------------------------------\n;; macros and funcs to support writing defrecords and updating\n;; (replacing) builtins, i.e., Object/hashCode, IHashEq hasheq, etc.\n;; code taken from prismatic:\n;;  https://github.com/Prismatic/schema/commit/e31c419c56555c83ef9ee834801e13ef3c112597\n;;\n\n(defn- cljs-env?\n  \"Take the &env from a macro, and tell whether we are expanding into cljs.\"\n  [env]\n  (boolean (:ns env)))\n\n#?(:clj\n   (defmacro if-cljs\n     \"Return then if we are generating cljs code and else for Clojure code.\n     https://groups.google.com/d/msg/clojurescript/iBY5HaQda4A/w1lAQi9_AwsJ\"\n     [then else]\n     (if (cljs-env? &env) then else)))\n\n(defn combine-hashes [x y]\n  #?(:clj  (clojure.lang.Util/hashCombine x y)\n     :cljs (hash-combine x y)))\n\n#?(:clj\n   (defn- get-sig [method]\n     ;; expects something like '(method-symbol [arg arg arg] ...)\n     ;; if the thing matches, returns [fully-qualified-symbol arity], otherwise nil\n     (and (sequential? method)\n          (symbol? (first method))\n          (vector? (second method))\n          (let [sym (first method)\n                ns  (or (some->> sym resolve meta :ns str) \"clojure.core\")]\n            [(symbol ns (name sym)) (-> method second count)]))))\n\n#?(:clj\n   (defn- dedupe-interfaces [deftype-form]\n     ;; get the interfaces list, remove any duplicates, similar to remove-nil-implements in potemkin\n     ;; verified w/ deftype impl in compiler:\n     ;; (deftype* tagname classname [fields] :implements [interfaces] :tag tagname methods*)\n     (let [[deftype* tagname classname fields implements interfaces & rest] deftype-form]\n       (when (or (not= deftype* 'deftype*) (not= implements :implements))\n         (throw (IllegalArgumentException. \"deftype-form mismatch\")))\n       (list* deftype* tagname classname fields implements (vec (distinct interfaces)) rest))))\n\n#?(:clj\n   (defn- make-record-updatable-clj [name fields & impls]\n     (let [impl-map (->> impls (map (juxt get-sig identity)) (filter first) (into {}))\n           body     (macroexpand-1 (list* 'defrecord name fields impls))]\n       (clojure.walk/postwalk\n        (fn [form]\n          (if (and (sequential? form) (= 'deftype* (first form)))\n            (->> form\n                 dedupe-interfaces\n                 (remove (fn [method]\n                           (when-some [impl (-> method get-sig impl-map)]\n                             (not= method impl)))))\n            form))\n        body))))\n\n#?(:clj\n   (defn- make-record-updatable-cljs [name fields & impls]\n     `(do\n        (defrecord ~name ~fields)\n        (extend-type ~name ~@impls))))\n\n#?(:clj\n   (defmacro defrecord-updatable [name fields & impls]\n     `(if-cljs\n       ~(apply make-record-updatable-cljs name fields impls)\n       ~(apply make-record-updatable-clj  name fields impls))))\n\n;; ----------------------------------------------------------------------------\n\n(declare hash-datom equiv-datom seq-datom nth-datom assoc-datom val-at-datom)\n\n(defprotocol IDatom\n  (datom-tx [this])\n  (datom-added [this]))\n\n(deftype Datom #?(:clj [^int e a v ^int tx ^:unsynchronized-mutable ^int _hash]\n                  :cljs [^number e a v ^number tx ^:mutable ^number _hash])\n  IDatom\n  (datom-tx [d] (if (pos? tx) tx (- tx)))\n  (datom-added [d] (pos? tx))\n\n  #?@(:cljs\n       [IHash\n        (-hash [d] (if (zero? _hash)\n                     (set! _hash (hash-datom d))\n                     _hash))\n        IEquiv\n        (-equiv [d o] (and (instance? Datom o) (equiv-datom d o)))\n\n        ISeqable\n        (-seq [d] (seq-datom d))\n\n        ILookup\n        (-lookup [d k] (val-at-datom d k nil))\n        (-lookup [d k nf] (val-at-datom d k nf))\n\n        IIndexed\n        (-nth [this i] (nth-datom this i))\n        (-nth [this i not-found] (nth-datom this i not-found))\n        \n        IAssociative\n        (-assoc [d k v] (assoc-datom d k v))\n\n        IPrintWithWriter\n        (-pr-writer [d writer opts]\n                    (pr-sequential-writer writer pr-writer\n                                          \"#datascript/Datom [\" \" \" \"]\"\n                                          opts [(.-e d) (.-a d) (.-v d) (datom-tx d) (datom-added d)]))]\n      :clj\n       [Object\n        (hashCode [d]\n          (if (zero? _hash)\n            (let [h (int (hash-datom d))]\n              (set! _hash h)\n              h)\n            _hash))\n        (toString [d] (pr-str d))\n\n        clojure.lang.IHashEq\n        (hasheq [d] (.hashCode d))\n\n        clojure.lang.Seqable\n        (seq [d] (seq-datom d))\n\n        clojure.lang.IPersistentCollection\n        (equiv [d o] (and (instance? Datom o) (equiv-datom d o)))\n        (empty [d] (throw (UnsupportedOperationException. \"empty is not supported on Datom\")))\n        (count [d] 5)\n        (cons [d [k v]] (assoc-datom d k v))\n        \n        clojure.lang.Indexed\n        (nth [this i]           (nth-datom this i))\n        (nth [this i not-found] (nth-datom this i not-found))\n\n        clojure.lang.ILookup\n        (valAt [d k] (val-at-datom d k nil))\n        (valAt [d k nf] (val-at-datom d k nf))\n\n        clojure.lang.Associative\n        (entryAt [d k] (some->> (val-at-datom d k nil) (clojure.lang.MapEntry k)))\n        (containsKey [e k] (#{:e :a :v :tx :added} k))\n        (assoc [d k v] (assoc-datom d k v))]\n))\n\n#?(:cljs (goog/exportSymbol \"datascript.db.Datom\" Datom))\n\n(defn ^Datom datom\n  ([e a v] (Datom. e a v tx0 0))\n  ([e a v tx] (Datom. e a v tx 0))\n  ([e a v tx added] (Datom. e a v (if added tx (- tx)) 0)))\n\n(defn datom? [x] (instance? Datom x))\n\n(defn- hash-datom [^Datom d]\n  (-> (hash (.-e d))\n      (combine-hashes (hash (.-a d)))\n      (combine-hashes (hash (.-v d)))))\n\n(defn- equiv-datom [^Datom d ^Datom o]\n  (and (== (.-e d) (.-e o))\n       (= (.-a d) (.-a o))\n       (= (.-v d) (.-v o))))\n\n(defn- seq-datom [^Datom d]\n  (list (.-e d) (.-a d) (.-v d) (datom-tx d) (datom-added d)))\n\n;; keep it fast by duplicating for both keyword and string cases\n;; instead of using sets or some other matching func\n(defn- val-at-datom [^Datom d k not-found]\n  (case k\n    :e      (.-e d) \"e\"     (.-e d)\n    :a      (.-a d) \"a\"     (.-a d)\n    :v      (.-v d) \"v\"     (.-v d)\n    :tx     (datom-tx d)\n    \"tx\"    (datom-tx d)\n    :added  (datom-added d)\n    \"added\" (datom-added d)\n    not-found))\n\n(defn- nth-datom\n  ([^Datom d ^long i]\n    (case i\n      0 (.-e d)\n      1 (.-a d)\n      2 (.-v d)\n      3 (datom-tx d)\n      4 (datom-added d)\n        #?(:clj  (throw (IndexOutOfBoundsException.))\n           :cljs (throw (js/Error. (str \"Datom/-nth: Index out of bounds: \" i))))))\n  ([^Datom d ^long i not-found]\n    (case i\n      0 (.-e d)\n      1 (.-a d)\n      2 (.-v d)\n      3 (datom-tx d)\n      4 (datom-added d)\n        not-found)))\n\n(defn- ^Datom assoc-datom [^Datom d k v]\n  (case k\n    :e     (datom v       (.-a d) (.-v d) (datom-tx d) (datom-added d))\n    :a     (datom (.-e d) v       (.-v d) (datom-tx d) (datom-added d))\n    :v     (datom (.-e d) (.-a d) v       (datom-tx d) (datom-added d))\n    :tx    (datom (.-e d) (.-a d) (.-v d) v            (datom-added d))\n    :added (datom (.-e d) (.-a d) (.-v d) (datom-tx d) v)\n    (throw (IllegalArgumentException. (str \"invalid key for #datascript/Datom: \" k)))))\n\n;; printing and reading\n;; #datomic/DB {:schema <map>, :datoms <vector of [e a v tx]>}\n\n(defn ^Datom datom-from-reader [vec]\n  (apply datom vec))\n\n#?(:clj\n   (defmethod print-method Datom [^Datom d, ^java.io.Writer w]\n     (.write w (str \"#datascript/Datom \"))\n     (binding [*out* w]\n       (pr [(.-e d) (.-a d) (.-v d) (datom-tx d) (datom-added d)]))))\n\n;; ----------------------------------------------------------------------------\n;; datom cmp macros/funcs\n;;\n\n#?(:clj\n  (defmacro combine-cmp [& comps]\n    (loop [comps (reverse comps)\n           res   (num 0)]\n      (if (not-empty comps)\n        (recur\n          (next comps)\n          `(let [c# ~(first comps)]\n             (if (== 0 c#)\n               ~res\n               c#)))\n        res))))\n\n#?(:clj\n   (defn- -case-tree [queries variants]\n     (if queries\n       (let [v1 (take (/ (count variants) 2) variants)\n             v2 (drop (/ (count variants) 2) variants)]\n         (list 'if (first queries)\n               (-case-tree (next queries) v1)\n               (-case-tree (next queries) v2)))\n       (first variants))))\n\n#?(:clj\n   (defmacro case-tree [qs vs]\n     (-case-tree qs vs)))\n\n(defn cmp [o1 o2]\n  (if (nil? o1) 0\n    (if (nil? o2) 0\n      (compare o1 o2))))\n\n;; Slower cmp-* fns allows for datom fields to be nil.\n;; Such datoms come from slice method where they are used as boundary markers.\n\n(defn cmp-datoms-eavt [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (cmp (.-a d1) (.-a d2))\n    (cmp (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n(defn cmp-datoms-aevt [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (cmp (.-a d1) (.-a d2))\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (cmp (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n(defn cmp-datoms-avet [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (cmp (.-a d1) (.-a d2))\n    (cmp (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n;; fast versions without nil checks\n\n(defn- cmp-attr-quick [a1 a2]\n  ;; either both are keywords or both are strings\n  #?(:cljs\n     (if (keyword? a1)\n       (-compare a1 a2)\n       (garray/defaultCompare a1 a2))\n     :clj\n     (.compareTo ^Comparable a1 a2)))\n\n(defn cmp-datoms-eavt-quick [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (cmp-attr-quick (.-a d1) (.-a d2))\n    (compare (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n(defn cmp-datoms-aevt-quick [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (cmp-attr-quick (.-a d1) (.-a d2))\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (compare (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n(defn cmp-datoms-avet-quick [^Datom d1, ^Datom d2]\n  (combine-cmp\n    (cmp-attr-quick (.-a d1) (.-a d2))\n    (compare (.-v d1) (.-v d2))\n    (#?(:clj Integer/compare :cljs -) (.-e d1) (.-e d2))\n    (#?(:clj Integer/compare :cljs -) (datom-tx d1) (datom-tx d2))))\n\n(defn- diff-sorted [a b cmp]\n  (loop [only-a []\n         only-b []\n         both   []\n         a      a\n         b      b]\n    (cond\n      (empty? a) [(not-empty only-a) (not-empty (into only-b b)) (not-empty both)]\n      (empty? b) [(not-empty (into only-a a)) (not-empty only-b) (not-empty both)]\n      :else\n      (let [first-a (first a)\n            first-b (first b)\n            diff (cmp first-a first-b)]\n        (cond\n          (== diff 0) (recur only-a                only-b                (conj both first-a) (next a) (next b))\n          (< diff 0)  (recur (conj only-a first-a) only-b                both                (next a) b)\n          (> diff 0)  (recur only-a                (conj only-b first-b) both                a        (next b)))))))\n\n;; ----------------------------------------------------------------------------\n\n;;;;;;;;;; Searching\n\n(defprotocol ISearch\n  (-search [data pattern]))\n\n(defprotocol IIndexAccess\n  (-datoms [db index components])\n  (-seek-datoms [db index components])\n  (-rseek-datoms [db index components])\n  (-index-range [db attr start end]))\n\n(defprotocol IDB\n  (-schema [db])\n  (-attrs-by [db property]))\n\n;; ----------------------------------------------------------------------------\n\n(declare hash-db hash-fdb equiv-db empty-db resolve-datom validate-attr components->pattern indexing?)\n#?(:cljs (declare pr-db))\n\n(defn db-transient [db]\n  (-> db\n    (update :eavt transient)\n    (update :aevt transient)\n    (update :avet transient)))\n\n(defn db-persistent! [db]\n  (-> db\n    (update :eavt persistent!)\n    (update :aevt persistent!)\n    (update :avet persistent!)))\n\n(defrecord-updatable DB [schema eavt aevt avet max-eid max-tx rschema hash]\n  #?@(:cljs\n      [IHash                (-hash  [db]        (hash-db db))\n       IEquiv               (-equiv [db other]  (equiv-db db other))\n       ISeqable             (-seq   [db]        (-seq  (.-eavt db)))\n       IReversible          (-rseq  [db]        (-rseq (.-eavt db)))\n       ICounted             (-count [db]        (count (.-eavt db)))\n       IEmptyableCollection (-empty [db]        (with-meta (empty-db (.-schema db)) (meta db)))\n       IPrintWithWriter     (-pr-writer [db w opts] (pr-db db w opts))\n       IEditableCollection  (-as-transient [db] (db-transient db))\n       ITransientCollection (-conj! [db key] (throw (ex-info \"datascript.DB/conj! is not supported\" {})))\n                            (-persistent! [db] (db-persistent! db))]\n\n      :clj\n      [Object               (hashCode [db]      (hash-db db))\n       clojure.lang.IHashEq (hasheq [db]        (hash-db db))\n       clojure.lang.Seqable (seq [db]           (seq eavt))\n       clojure.lang.IPersistentCollection\n                            (count [db]         (count eavt))\n                            (equiv [db other]   (equiv-db db other))\n       clojure.lang.IEditableCollection \n                            (empty [db]         (with-meta (empty-db schema) (meta db)))\n                            (asTransient [db] (db-transient db))\n       clojure.lang.ITransientCollection\n                            (conj [db key] (throw (ex-info \"datascript.DB/conj! is not supported\" {})))\n                            (persistent [db] (db-persistent! db))])\n\n  IDB\n  (-schema [db] (.-schema db))\n  (-attrs-by [db property] ((.-rschema db) property))\n\n  ISearch\n  (-search [db pattern]\n    (let [[e a v tx] pattern\n          eavt (.-eavt db)\n          aevt (.-aevt db)\n          avet (.-avet db)]\n      (case-tree [e a (some? v) tx]\n        [(set/slice eavt (datom e a v tx) (datom e a v tx))                   ;; e a v tx\n         (set/slice eavt (datom e a v tx0) (datom e a v txmax))               ;; e a v _\n         (->> (set/slice eavt (datom e a nil tx0) (datom e a nil txmax))      ;; e a _ tx\n              (filter (fn [^Datom d] (= tx (datom-tx d)))))\n         (set/slice eavt (datom e a nil tx0) (datom e a nil txmax))           ;; e a _ _\n         (->> (set/slice eavt (datom e nil nil tx0) (datom e nil nil txmax))  ;; e _ v tx\n              (filter (fn [^Datom d] (and (= v (.-v d))\n                                          (= tx (datom-tx d))))))\n         (->> (set/slice eavt (datom e nil nil tx0) (datom e nil nil txmax))  ;; e _ v _\n              (filter (fn [^Datom d] (= v (.-v d)))))\n         (->> (set/slice eavt (datom e nil nil tx0) (datom e nil nil txmax))  ;; e _ _ tx\n              (filter (fn [^Datom d] (= tx (datom-tx d)))))\n         (set/slice eavt (datom e nil nil tx0) (datom e nil nil txmax))       ;; e _ _ _\n         (if (indexing? db a)                                                   ;; _ a v tx\n           (->> (set/slice avet (datom e0 a v tx0) (datom emax a v txmax))      \n                (filter (fn [^Datom d] (= tx (datom-tx d)))))\n           (->> (set/slice aevt (datom e0 a nil tx0) (datom emax a nil txmax))\n                (filter (fn [^Datom d] (and (= v (.-v d))\n                                            (= tx (datom-tx d)))))))\n         (if (indexing? db a)                                                   ;; _ a v _\n           (set/slice avet (datom e0 a v tx0) (datom emax a v txmax))\n           (->> (set/slice aevt (datom e0 a nil tx0) (datom emax a nil txmax))\n                (filter (fn [^Datom d] (= v (.-v d))))))\n         (->> (set/slice aevt (datom e0 a nil tx0) (datom emax a nil txmax))  ;; _ a _ tx\n              (filter (fn [^Datom d] (= tx (datom-tx d)))))\n         (set/slice aevt (datom e0 a nil tx0) (datom emax a nil txmax))       ;; _ a _ _\n         (filter (fn [^Datom d] (and (= v (.-v d))\n                                     (= tx (datom-tx d)))) eavt)                ;; _ _ v tx\n         (filter (fn [^Datom d] (= v (.-v d))) eavt)                            ;; _ _ v _\n         (filter (fn [^Datom d] (= tx (datom-tx d))) eavt)                      ;; _ _ _ tx\n         eavt])))                                                               ;; _ _ _ _\n\n  IIndexAccess\n  (-datoms [db index cs]\n    (set/slice (get db index) (components->pattern db index cs e0 tx0) (components->pattern db index cs emax txmax)))\n\n  (-seek-datoms [db index cs]\n    (set/slice (get db index) (components->pattern db index cs e0 tx0) (datom emax nil nil txmax)))\n\n  (-rseek-datoms [db index cs]\n    (set/rslice (get db index) (components->pattern db index cs emax txmax) (datom e0 nil nil tx0)))\n\n  (-index-range [db attr start end]\n    (when-not (indexing? db attr)\n      (raise \"Attribute \" attr \" should be marked as :db/index true\" {}))\n    (validate-attr attr (list '-index-range 'db attr start end))\n    (set/slice (.-avet db)\n      (resolve-datom db nil attr start nil e0 tx0)\n      (resolve-datom db nil attr end nil emax txmax)))\n                \n  clojure.data/EqualityPartition\n  (equality-partition [x] :datascript/db)\n\n  clojure.data/Diff\n  (diff-similar [a b]\n    (diff-sorted (:eavt a) (:eavt b) cmp-datoms-eavt-quick)))\n\n(defn db? [x]\n  (and (satisfies? ISearch x)\n       (satisfies? IIndexAccess x)\n       (satisfies? IDB x)))\n\n;; ----------------------------------------------------------------------------\n(defrecord-updatable FilteredDB [unfiltered-db pred hash]\n  #?@(:cljs\n      [IHash                (-hash  [db]        (hash-fdb db))\n       IEquiv               (-equiv [db other]  (equiv-db db other))\n       ISeqable             (-seq   [db]        (-datoms db :eavt []))\n       ICounted             (-count [db]        (count (-datoms db :eavt [])))\n       IPrintWithWriter     (-pr-writer [db w opts] (pr-db db w opts))\n\n       IEmptyableCollection (-empty [_]         (throw (js/Error. \"-empty is not supported on FilteredDB\")))\n\n       ILookup              (-lookup ([_ _]     (throw (js/Error. \"-lookup is not supported on FilteredDB\")))\n                                     ([_ _ _]   (throw (js/Error. \"-lookup is not supported on FilteredDB\"))))\n\n\n       IAssociative         (-contains-key? [_ _] (throw (js/Error. \"-contains-key? is not supported on FilteredDB\")))\n                            (-assoc [_ _ _]       (throw (js/Error. \"-assoc is not supported on FilteredDB\")))]\n\n      :clj\n      [Object               (hashCode [db]      (hash-fdb db))\n\n       clojure.lang.IHashEq (hasheq [db]        (hash-fdb db))\n\n       clojure.lang.IPersistentCollection\n                            (count [db]         (count (-datoms db :eavt [])))\n                            (equiv [db o]       (equiv-db db o))\n                            (cons [db [k v]]    (throw (UnsupportedOperationException. \"cons is not supported on FilteredDB\")))\n                            (empty [db]         (throw (UnsupportedOperationException. \"empty is not supported on FilteredDB\")))\n\n       clojure.lang.Seqable (seq [db]           (seq (-datoms db :eavt [])))\n\n       clojure.lang.ILookup (valAt [db k]       (throw (UnsupportedOperationException. \"valAt/2 is not supported on FilteredDB\")))\n                            (valAt [db k nf]    (throw (UnsupportedOperationException. \"valAt/3 is not supported on FilteredDB\")))\n       clojure.lang.IKeywordLookup (getLookupThunk [db k]\n                                                (throw (UnsupportedOperationException. \"getLookupThunk is not supported on FilteredDB\")))\n\n       clojure.lang.Associative\n                            (containsKey [e k]  (throw (UnsupportedOperationException. \"containsKey is not supported on FilteredDB\")))\n                            (entryAt [db k]     (throw (UnsupportedOperationException. \"entryAt is not supported on FilteredDB\")))\n                            (assoc [db k v]     (throw (UnsupportedOperationException. \"assoc is not supported on FilteredDB\")))])\n\n  IDB\n  (-schema [db] (-schema (.-unfiltered-db db)))\n  (-attrs-by [db property] (-attrs-by (.-unfiltered-db db) property))\n\n  ISearch\n  (-search [db pattern]\n           (filter (.-pred db) (-search (.-unfiltered-db db) pattern)))\n\n  IIndexAccess\n  (-datoms [db index cs]\n           (filter (.-pred db) (-datoms (.-unfiltered-db db) index cs)))\n\n  (-seek-datoms [db index cs]\n                (filter (.-pred db) (-seek-datoms (.-unfiltered-db db) index cs)))\n\n  (-rseek-datoms [db index cs]\n                (filter (.-pred db) (-rseek-datoms (.-unfiltered-db db) index cs)))\n\n  (-index-range [db attr start end]\n                (filter (.-pred db) (-index-range (.-unfiltered-db db) attr start end))))\n\n;; ----------------------------------------------------------------------------\n\n(defn attr->properties [k v]\n  (case v\n    :db.unique/identity  [:db/unique :db.unique/identity :db/index]\n    :db.unique/value     [:db/unique :db.unique/value :db/index]\n    :db.cardinality/many [:db.cardinality/many]\n    :db.type/ref         [:db.type/ref :db/index]\n    (when (true? v)\n      (case k\n        :db/isComponent [:db/isComponent]\n        :db/index       [:db/index]\n        []))))\n\n(defn- rschema [schema]\n  (reduce-kv\n    (fn [m attr keys->values]\n      (reduce-kv\n        (fn [m key value]\n          (reduce\n            (fn [m prop]\n              (assoc m prop (conj (get m prop #{}) attr)))\n            m (attr->properties key value)))\n        m keys->values))\n    {} schema))\n\n(defn- validate-schema-key [a k v expected]\n  (when-not (or (nil? v)\n                (contains? expected v))\n    (throw (ex-info (str \"Bad attribute specification for \" (pr-str {a {k v}}) \", expected one of \" expected)\n                    {:error :schema/validation\n                     :attribute a\n                     :key k\n                     :value v}))))\n\n(defn- validate-schema [schema]\n  (doseq [[a kv] schema]\n    (let [comp? (:db/isComponent kv false)]\n      (validate-schema-key a :db/isComponent (:db/isComponent kv) #{true false})\n      (when (and comp? (not= (:db/valueType kv) :db.type/ref))\n        (throw (ex-info (str \"Bad attribute specification for \" a \": {:db/isComponent true} should also have {:db/valueType :db.type/ref}\")\n                        {:error     :schema/validation\n                         :attribute a\n                         :key       :db/isComponent}))))\n    (validate-schema-key a :db/unique (:db/unique kv) #{:db.unique/value :db.unique/identity})\n    (validate-schema-key a :db/valueType (:db/valueType kv) #{:db.type/ref})\n    (validate-schema-key a :db/cardinality (:db/cardinality kv) #{:db.cardinality/one :db.cardinality/many})))\n\n(defn ^DB empty-db\n  ([] (empty-db nil))\n  ([schema]\n    {:pre [(or (nil? schema) (map? schema))]}\n    (validate-schema schema)\n    (map->DB\n      {:schema  schema\n       :rschema (rschema (merge implicit-schema schema))\n       :eavt    (set/sorted-set-by cmp-datoms-eavt)\n       :aevt    (set/sorted-set-by cmp-datoms-aevt)\n       :avet    (set/sorted-set-by cmp-datoms-avet)\n       :max-eid e0\n       :max-tx  tx0\n       :hash    (atom 0)})))\n\n(defn- init-max-eid [eavt]\n  (or (-> (set/rslice eavt (datom (dec tx0) nil nil txmax) (datom e0 nil nil tx0))\n        (first)\n        (:e))\n    e0))\n\n(defn ^DB init-db\n  ([datoms] (init-db datoms nil))\n  ([datoms schema]\n    (validate-schema schema)\n    (let [rschema     (rschema (merge implicit-schema schema))\n          indexed     (:db/index rschema)\n          arr         (cond-> datoms\n                        (not (arrays/array? datoms)) (arrays/into-array))\n          _           (arrays/asort arr cmp-datoms-eavt-quick)\n          eavt        (set/from-sorted-array cmp-datoms-eavt arr)\n          _           (arrays/asort arr cmp-datoms-aevt-quick)\n          aevt        (set/from-sorted-array cmp-datoms-aevt arr)\n          avet-datoms (filter (fn [^Datom d] (contains? indexed (.-a d))) datoms)\n          avet-arr    (to-array avet-datoms)\n          _           (arrays/asort avet-arr cmp-datoms-avet-quick)\n          avet        (set/from-sorted-array cmp-datoms-avet avet-arr)\n          max-eid     (init-max-eid eavt)\n          max-tx      (transduce (map (fn [^Datom d] (datom-tx d))) max tx0 eavt)]\n      (map->DB {\n        :schema  schema\n        :rschema rschema\n        :eavt    eavt\n        :aevt    aevt\n        :avet    avet\n        :max-eid max-eid\n        :max-tx  max-tx\n        :hash    (atom 0)}))))\n\n(defn- equiv-db-index [x y]\n  (loop [xs (seq x)\n         ys (seq y)]\n    (cond\n      (nil? xs) (nil? ys)\n      (= (first xs) (first ys)) (recur (next xs) (next ys))\n      :else false)))\n\n(defn- hash-db [^DB db]\n  (let [h @(.-hash db)]\n    (if (zero? h)\n      (reset! (.-hash db) (combine-hashes (hash (.-schema db))\n                                          (hash (.-eavt db))))\n      h)))\n\n(defn- hash-fdb [^FilteredDB db]\n  (let [h @(.-hash db)\n        datoms (or (-datoms db :eavt []) #{})]\n    (if (zero? h)\n      (let [datoms (or (-datoms db :eavt []) #{})]\n        (reset! (.-hash db) (combine-hashes (hash (-schema db))\n                                            (hash-unordered-coll datoms))))\n      h)))\n\n(defn- equiv-db [db other]\n  (and (or (instance? DB other) (instance? FilteredDB other))\n       (= (-schema db) (-schema other))\n       (equiv-db-index (-datoms db :eavt []) (-datoms other :eavt []))))\n\n#?(:cljs\n   (defn pr-db [db w opts]\n     (-write w \"#datascript/DB {\")\n     (-write w \":schema \")\n     (pr-writer (-schema db) w opts)\n     (-write w \", :datoms \")\n     (pr-sequential-writer w\n                           (fn [d w opts]\n                             (pr-sequential-writer w pr-writer \"[\" \" \" \"]\" opts [(.-e d) (.-a d) (.-v d) (datom-tx d)]))\n                           \"[\" \" \" \"]\" opts (-datoms db :eavt []))\n     (-write w \"}\")))\n\n#?(:clj\n   (do\n     (defn pr-db [db, ^java.io.Writer w]\n       (.write w (str \"#datascript/DB {\"))\n       (.write w \":schema \")\n       (binding [*out* w]\n         (pr (-schema db))\n         (.write w \", :datoms [\")\n         (apply pr (map (fn [^Datom d] [(.-e d) (.-a d) (.-v d) (datom-tx d)]) (-datoms db :eavt []))))\n       (.write w \"]}\"))\n\n     (defmethod print-method DB [db w] (pr-db db w))\n     (defmethod print-method FilteredDB [db w] (pr-db db w))     \n))\n\n(defn db-from-reader [{:keys [schema datoms]}]\n  (init-db (map (fn [[e a v tx]] (datom e a v tx)) datoms) schema))\n\n;; ----------------------------------------------------------------------------\n\n(declare entid-strict entid-some ref?)\n\n(defn- resolve-datom [db e a v t default-e default-tx]\n  (when a (validate-attr a (list 'resolve-datom 'db e a v t)))\n  (datom\n    (or (entid-some db e) default-e)  ;; e\n    a                                 ;; a\n    (if (and (some? v) (ref? db a))   ;; v\n      (entid-strict db v)\n      v)\n    (or (entid-some db t) default-tx))) ;; t\n\n(defn- components->pattern [db index [c0 c1 c2 c3] default-e default-tx]\n  (case index\n    :eavt (resolve-datom db c0 c1 c2 c3 default-e default-tx)\n    :aevt (resolve-datom db c1 c0 c2 c3 default-e default-tx)\n    :avet (resolve-datom db c2 c0 c1 c3 default-e default-tx)))\n\n;; ----------------------------------------------------------------------------\n\n(defrecord TxReport [db-before db-after tx-data tempids tx-meta])\n\n(defn #?@(:clj  [^Boolean is-attr?]\n          :cljs [^boolean is-attr?]) [db attr property]\n  (contains? (-attrs-by db property) attr))\n\n(defn #?@(:clj  [^Boolean multival?]\n          :cljs [^boolean multival?]) [db attr]\n  (is-attr? db attr :db.cardinality/many))\n\n(defn #?@(:clj  [^Boolean ref?]\n          :cljs [^boolean ref?]) [db attr]\n  (is-attr? db attr :db.type/ref))\n\n(defn #?@(:clj  [^Boolean component?]\n          :cljs [^boolean component?]) [db attr]\n  (is-attr? db attr :db/isComponent))\n\n(defn #?@(:clj  [^Boolean indexing?]\n          :cljs [^boolean indexing?]) [db attr]\n  (is-attr? db attr :db/index))\n\n(defn entid [db eid]\n  {:pre [(db? db)]}\n  (cond\n    (and (number? eid) (pos? eid))\n    eid\n    \n    (sequential? eid)\n    (let [[attr value] eid]\n      (cond\n        (not= (count eid) 2)\n          (raise \"Lookup ref should contain 2 elements: \" eid\n            {:error :lookup-ref/syntax, :entity-id eid})\n        (not (is-attr? db attr :db/unique))\n          (raise \"Lookup ref attribute should be marked as :db/unique: \" eid\n            {:error :lookup-ref/unique, :entity-id eid})\n        (nil? value)\n          nil\n        :else\n          (-> (-datoms db :avet eid) first :e)))\n    \n    #?@(:cljs [(array? eid) (recur db (array-seq eid))])\n    \n    (keyword? eid)\n    (-> (-datoms db :avet [:db/ident eid]) first :e)\n\n    :else\n    (raise \"Expected number or lookup ref for entity id, got \" eid\n      {:error :entity-id/syntax, :entity-id eid})))\n\n(defn entid-strict [db eid]\n  (or (entid db eid)\n      (raise \"Nothing found for entity id \" eid\n             {:error :entity-id/missing\n              :entity-id eid})))\n\n(defn entid-some [db eid]\n  (when eid\n    (entid-strict db eid)))\n\n;;;;;;;;;; Transacting\n\n(defn validate-datom [db ^Datom datom]\n  (when (and (datom-added datom)\n             (is-attr? db (.-a datom) :db/unique))\n    (when-some [found (not-empty (-datoms db :avet [(.-a datom) (.-v datom)]))]\n      (raise \"Cannot add \" datom \" because of unique constraint: \" found\n             {:error :transact/unique\n              :attribute (.-a datom)\n              :datom datom}))))\n\n(defn- validate-eid [eid at]\n  (when-not (number? eid)\n    (raise \"Bad entity id \" eid \" at \" at \", expected number\"\n           {:error :transact/syntax, :entity-id eid, :context at})))\n\n(defn- validate-attr [attr at]\n  (when-not (or (keyword? attr) (string? attr))\n    (raise \"Bad entity attribute \" attr \" at \" at \", expected keyword or string\"\n           {:error :transact/syntax, :attribute attr, :context at})))\n\n(defn- validate-val [v at]\n  (when (nil? v)\n    (raise \"Cannot store nil as a value at \" at\n           {:error :transact/syntax, :value v, :context at})))\n\n(defn- current-tx [report]\n  (inc (get-in report [:db-before :max-tx])))\n\n(defn- next-eid [db]\n  (inc (:max-eid db)))\n\n(defn- #?@(:clj  [^Boolean tx-id?]\n           :cljs [^boolean tx-id?])\n  [e]\n  (or (= e :db/current-tx)\n      (= e \":db/current-tx\") ;; for datascript.js interop\n      (= e \"datomic.tx\")\n      (= e \"datascript.tx\")))\n\n(defn- #?@(:clj  [^Boolean tempid?]\n           :cljs [^boolean tempid?])\n  [x]\n  (or (and (number? x) (neg? x)) (string? x)))\n\n(defn- advance-max-eid [db eid]\n  (cond-> db\n    (and (> eid (:max-eid db))\n         (< eid tx0)) ;; do not trigger advance if transaction id was referenced\n      (assoc :max-eid eid)))\n\n(defn- allocate-eid\n  ([report eid]\n    (update-in report [:db-after] advance-max-eid eid))\n  ([report e eid]\n    (cond-> report\n      (tx-id? e)\n        (assoc-in [:tempids e] eid)\n      (tempid? e)\n        (assoc-in [:tempids e] eid)\n      true\n        (update-in [:db-after] advance-max-eid eid))))\n\n;; In context of `with-datom` we can use faster comparators which\n;; do not check for nil (~10-15% performance gain in `transact`)\n\n(defn- with-datom [db ^Datom datom]\n  (validate-datom db datom)\n  (let [indexing? (indexing? db (.-a datom))]\n    (if (datom-added datom)\n      (cond-> db\n        true      (update-in [:eavt] set/conj datom cmp-datoms-eavt-quick)\n        true      (update-in [:aevt] set/conj datom cmp-datoms-aevt-quick)\n        indexing? (update-in [:avet] set/conj datom cmp-datoms-avet-quick)\n        true      (advance-max-eid (.-e datom))\n        true      (assoc :hash (atom 0)))\n      (if-some [removing (first (-search db [(.-e datom) (.-a datom) (.-v datom)]))]\n        (cond-> db\n          true      (update-in [:eavt] set/disj removing cmp-datoms-eavt-quick)\n          true      (update-in [:aevt] set/disj removing cmp-datoms-aevt-quick)\n          indexing? (update-in [:avet] set/disj removing cmp-datoms-avet-quick)\n          true      (assoc :hash (atom 0)))\n        db))))\n\n(defn- transact-report [report datom]\n  (-> report\n      (update-in [:db-after] with-datom datom)\n      (update-in [:tx-data] conj datom)))\n\n(defn #?@(:clj  [^Boolean reverse-ref?]\n          :cljs [^boolean reverse-ref?]) [attr]\n  (cond\n    (keyword? attr)\n    (= \\_ (nth (name attr) 0))\n    \n    (string? attr)\n    (boolean (re-matches #\"(?:([^/]+)/)?_([^/]+)\" attr))\n   \n    :else\n    (raise \"Bad attribute type: \" attr \", expected keyword or string\"\n           {:error :transact/syntax, :attribute attr})))\n\n(defn reverse-ref [attr]\n  (cond\n    (keyword? attr)\n    (if (reverse-ref? attr)\n      (keyword (namespace attr) (subs (name attr) 1))\n      (keyword (namespace attr) (str \"_\" (name attr))))\n\n   (string? attr)\n   (let [[_ ns name] (re-matches #\"(?:([^/]+)/)?([^/]+)\" attr)]\n     (if (= \\_ (nth name 0))\n       (if ns (str ns \"/\" (subs name 1)) (subs name 1))\n       (if ns (str ns \"/_\" name) (str \"_\" name))))\n   \n   :else\n    (raise \"Bad attribute type: \" attr \", expected keyword or string\"\n           {:error :transact/syntax, :attribute attr})))\n\n\n(defn- check-upsert-conflict [entity acc]\n  (let [[e a v] acc\n        _e (:db/id entity)]\n    (if (or (nil? _e)\n            (tempid? _e)\n            (nil? acc)\n            (== _e e))\n      acc\n      (raise \"Conflicting upsert: \" [a v] \" resolves to \" e\n             \", but entity already has :db/id \" _e\n             { :error :transact/upsert\n               :entity entity\n               :assertion acc }))))\n\n(defn- upsert-reduce-fn [db eav a v]\n  (let [e (:e (first (-datoms db :avet [a v])))]\n    (cond\n      (nil? e) ;; value not yet in db\n      eav\n\n      (nil? eav) ;; first upsert\n      [e a v]\n\n      (= (get eav 0) e) ;; second+ upsert, but does not conflict\n      eav\n\n      :else\n      (let [[_e _a _v] eav]\n        (raise \"Conflicting upserts: \" [_a _v] \" resolves to \" _e\n               \", but \" [a v] \" resolves to \" e\n               { :error     :transact/upsert\n                 :assertion [e a v]\n                 :conflict  [_e _a _v] })))))\n\n(defn- upsert-eid [db entity]\n  (when-some [idents (not-empty (-attrs-by db :db.unique/identity))]\n    (->>\n      (reduce-kv\n        (fn [eav a v] ;; eav = [e a v]\n          (cond\n            (not (contains? idents a))\n            eav\n\n            (and\n              (multival? db a)\n              (or\n                (arrays/array? v)\n                (and (coll? v) (not (map? v)))))\n            (reduce #(upsert-reduce-fn db %1 a %2) eav v)\n\n            :else\n            (upsert-reduce-fn db eav a v)))\n        nil\n        entity)\n     (check-upsert-conflict entity)\n     first))) ;; getting eid from eav\n\n\n;; multivals/reverse can be specified as coll or as a single value, trying to guess\n(defn- maybe-wrap-multival [db a vs]\n  (cond\n    ;; not a multival context\n    (not (or (reverse-ref? a)\n             (multival? db a)))\n    [vs]\n\n    ;; not a collection at all, so definitely a single value\n    (not (or (arrays/array? vs)\n             (and (coll? vs) (not (map? vs)))))\n    [vs]\n    \n    ;; probably lookup ref\n    (and (= (count vs) 2)\n         (is-attr? db (first vs) :db.unique/identity))\n    [vs]\n    \n    :else vs))\n\n\n(defn- explode [db entity]\n  (let [eid (:db/id entity)]\n    (for [[a vs] entity\n          :when  (not= a :db/id)\n          :let   [_          (validate-attr a {:db/id eid, a vs})\n                  reverse?   (reverse-ref? a)\n                  straight-a (if reverse? (reverse-ref a) a)\n                  _          (when (and reverse? (not (ref? db straight-a)))\n                               (raise \"Bad attribute \" a \": reverse attribute name requires {:db/valueType :db.type/ref} in schema\"\n                                      {:error :transact/syntax, :attribute a, :context {:db/id eid, a vs}}))]\n          v      (maybe-wrap-multival db a vs)]\n      (if (and (ref? db straight-a) (map? v)) ;; another entity specified as nested map\n        (assoc v (reverse-ref a) eid)\n        (if reverse?\n          [:db/add v   straight-a eid]\n          [:db/add eid straight-a v])))))\n\n(defn- transact-add [report [_ e a v tx :as ent]]\n  (validate-attr a ent)\n  (validate-val  v ent)\n  (let [tx        (or tx (current-tx report))\n        db        (:db-after report)\n        e         (entid-strict db e)\n        v         (if (ref? db a) (entid-strict db v) v)\n        new-datom (datom e a v tx)]\n    (if (multival? db a)\n      (if (empty? (-search db [e a v]))\n        (transact-report report new-datom)\n        report)\n      (if-some [^Datom old-datom (first (-search db [e a]))]\n        (if (= (.-v old-datom) v)\n          report\n          (-> report\n            (transact-report (datom e a (.-v old-datom) tx false))\n            (transact-report new-datom)))\n        (transact-report report new-datom)))))\n\n(defn- transact-retract-datom [report ^Datom d]\n  (let [tx (current-tx report)]\n    (transact-report report (datom (.-e d) (.-a d) (.-v d) tx false))))\n\n(defn- retract-components [db datoms]\n  (into #{} (comp\n              (filter (fn [^Datom d] (component? db (.-a d))))\n              (map (fn [^Datom d] [:db.fn/retractEntity (.-v d)]))) datoms))\n\n(declare transact-tx-data)\n\n(defn- retry-with-tempid [initial-report report es tempid upserted-eid]\n  (if (contains? (:tempids initial-report) tempid)\n    (raise \"Conflicting upsert: \" tempid \" resolves\"\n           \" both to \" upserted-eid \" and \" (get-in initial-report [:tempids tempid])\n      { :error :transact/upsert })\n    ;; try to re-run from the beginning\n    ;; but remembering that `tempid` will resolve to `upserted-eid`\n    (let [tempids' (-> (:tempids report)\n                     (assoc tempid upserted-eid))\n          report'  (assoc initial-report :tempids tempids')]\n      (transact-tx-data report' es))))\n\n(def builtin-fn?\n  #{:db.fn/call\n    :db.fn/cas\n    :db/cas\n    :db/add\n    :db/retract\n    :db.fn/retractAttribute\n    :db.fn/retractEntity\n    :db/retractEntity})\n\n(defn transact-tx-data [initial-report initial-es]\n  (when-not (or (nil? initial-es)\n                (sequential? initial-es))\n    (raise \"Bad transaction data \" initial-es \", expected sequential collection\"\n           {:error :transact/syntax, :tx-data initial-es}))\n  (loop [report (-> initial-report\n                  (update :db-after transient))\n         es     initial-es]\n    (let [[entity & entities] es\n          db                  (:db-after report)\n          {:keys [tempids]}   report]\n      (cond\n        (empty? es)\n        (-> report\n            (assoc-in  [:tempids :db/current-tx] (current-tx report))\n            (update-in [:db-after :max-tx] inc)\n            (update :db-after persistent!))\n\n        (nil? entity)\n        (recur report entities)\n\n        (map? entity)\n        (let [old-eid (:db/id entity)]\n          (cond+\n            ;; :db/current-tx / \"datomic.tx\" => tx\n            (tx-id? old-eid)\n            (let [id (current-tx report)]\n              (recur (allocate-eid report old-eid id)\n                     (cons (assoc entity :db/id id) entities)))\n           \n            ;; lookup-ref => resolved | error\n            (sequential? old-eid)\n            (let [id (entid-strict db old-eid)]\n              (recur report\n                     (cons (assoc entity :db/id id) entities)))\n           \n            ;; upserted => explode | error\n            :let [upserted-eid (upsert-eid db entity)]\n\n            (some? upserted-eid)\n            (if (and (tempid? old-eid)\n                     (contains? tempids old-eid)\n                     (not= upserted-eid (get tempids old-eid)))\n              (retry-with-tempid initial-report report initial-es old-eid upserted-eid)\n              (recur (allocate-eid report old-eid upserted-eid)\n                     (concat (explode db (assoc entity :db/id upserted-eid)) entities)))\n           \n            ;; resolved | allocated-tempid | tempid | nil => explode\n            (or (number? old-eid)\n                (nil?    old-eid)\n                (string? old-eid))\n            (let [new-eid (cond\n                            (nil? old-eid)    (next-eid db)\n                            (tempid? old-eid) (or (get tempids old-eid)\n                                                  (next-eid db))\n                            :else             old-eid)\n                  new-entity (assoc entity :db/id new-eid)]                \n              (recur (allocate-eid report old-eid new-eid)\n                     (concat (explode db new-entity) entities)))\n           \n            ;; trash => error\n            :else\n            (raise \"Expected number, string or lookup ref for :db/id, got \" old-eid\n              { :error :entity-id/syntax, :entity entity })))\n\n        (sequential? entity)\n        (let [[op e a v] entity]\n          (cond\n            (= op :db.fn/call)\n            (let [[_ f & args] entity]\n              (recur report (concat (apply f db args) entities)))\n            \n            (and (keyword? op)\n                 (not (builtin-fn? op)))\n            (if-some [ident (entid db op)]\n              (let [fun  (-> (-search db [ident :db/fn]) first :v)\n                    args (next entity)]\n                (if (fn? fun)\n                  (recur report (concat (apply fun db args) entities))\n                  (raise \"Entity \" op \" expected to have :db/fn attribute with fn? value\"\n                         {:error :transact/syntax, :operation :db.fn/call, :tx-data entity})))\n              (raise \"Can’t find entity for transaction fn \" op\n                     {:error :transact/syntax, :operation :db.fn/call, :tx-data entity}))\n            \n            (and (tempid? e) (not= op :db/add))\n            (raise \"Can't use tempid in '\" entity \"'. Tempids are allowed in :db/add only\"\n              { :error :transact/syntax, :op entity })\n\n            (or (= op :db.fn/cas)\n                (= op :db/cas))\n            (let [[_ e a ov nv] entity\n                  e (entid-strict db e)\n                  _ (validate-attr a entity)\n                  ov (if (ref? db a) (entid-strict db ov) ov)\n                  nv (if (ref? db a) (entid-strict db nv) nv)\n                  _ (validate-val nv entity)\n                  datoms (vec (-search db [e a]))]\n              (if (multival? db a)\n                (if (some (fn [^Datom d] (= (.-v d) ov)) datoms)\n                  (recur (transact-add report [:db/add e a nv]) entities)\n                  (raise \":db.fn/cas failed on datom [\" e \" \" a \" \" (map :v datoms) \"], expected \" ov\n                         {:error :transact/cas, :old datoms, :expected ov, :new nv}))\n                (let [v (:v (first datoms))]\n                  (if (= v ov)\n                    (recur (transact-add report [:db/add e a nv]) entities)\n                    (raise \":db.fn/cas failed on datom [\" e \" \" a \" \" v \"], expected \" ov\n                           {:error :transact/cas, :old (first datoms), :expected ov, :new nv })))))\n\n            (tx-id? e)\n            (recur (allocate-eid report e (current-tx report)) (cons [op (current-tx report) a v] entities))\n\n            (and (ref? db a) (tx-id? v))\n            (recur (allocate-eid report v (current-tx report)) (cons [op e a (current-tx report)] entities))\n\n            (and (ref? db a) (tempid? v))\n            (if-some [vid (get tempids v)]\n              (recur report (cons [op e a vid] entities))\n              (recur (allocate-eid report v (next-eid db)) es))\n\n            (tempid? e)\n            (let [upserted-eid  (when (is-attr? db a :db.unique/identity)\n                                  (:e (first (-datoms db :avet [a v]))))\n                  allocated-eid (get tempids e)]\n              (if (and upserted-eid allocated-eid (not= upserted-eid allocated-eid))\n                (retry-with-tempid initial-report report initial-es e upserted-eid)\n                (let [eid (or upserted-eid allocated-eid (next-eid db))]\n                  (recur (allocate-eid report e eid) (cons [op eid a v] entities)))))\n\n            (= op :db/add)\n            (recur (transact-add report entity) entities)\n\n            (= op :db/retract)\n            (if-some [e (entid db e)]\n              (let [v (if (ref? db a) (entid-strict db v) v)]\n                (validate-attr a entity)\n                (validate-val v entity)\n                (if-some [old-datom (first (-search db [e a v]))]\n                  (recur (transact-retract-datom report old-datom) entities)\n                  (recur report entities)))\n              (recur report entities))\n\n            (= op :db.fn/retractAttribute)\n            (if-some [e (entid db e)]\n              (let [_      (validate-attr a entity)\n                    datoms (vec (-search db [e a]))]\n                (recur (reduce transact-retract-datom report datoms)\n                       (concat (retract-components db datoms) entities)))\n              (recur report entities))\n\n            (or (= op :db.fn/retractEntity)\n                (= op :db/retractEntity))\n            (if-some [e (entid db e)]\n              (let [e-datoms (vec (-search db [e]))\n                    v-datoms (vec (mapcat (fn [a] (-search db [nil a e])) (-attrs-by db :db.type/ref)))]\n                (recur (reduce transact-retract-datom report (concat e-datoms v-datoms))\n                       (concat (retract-components db e-datoms) entities)))\n              (recur report entities))\n\n           :else\n           (raise \"Unknown operation at \" entity \", expected :db/add, :db/retract, :db.fn/call, :db.fn/retractAttribute, :db.fn/retractEntity or an ident corresponding to an installed transaction function (e.g. {:db/ident <keyword> :db/fn <Ifn>}, usage of :db/ident requires {:db/unique :db.unique/identity} in schema)\" {:error :transact/syntax, :operation op, :tx-data entity})))\n       \n       (datom? entity)\n       (let [[e a v tx added] entity]\n         (if added\n           (recur (transact-add report [:db/add e a v tx]) entities)\n           (recur report (cons [:db/retract e a v] entities))))\n\n       :else\n       (raise \"Bad entity type at \" entity \", expected map or vector\"\n              {:error :transact/syntax, :tx-data entity})))))\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["datascript.db/Exception","js/Error","datascript.db/IllegalArgumentException","datascript.db/UnsupportedOperationException","datascript.db/e0","datascript.db/tx0","datascript.db/emax","datascript.db/txmax","datascript.db/implicit-schema","datascript.db/seqable?","x","cljs.core/seqable?","me.tonsky.persistent-sorted-set.arrays/array?","datascript.db/cljs-env?","env","cljs.core/boolean","datascript.db/combine-hashes","y","cljs.core/hash-combine","x__4487__auto__","m__4488__auto__","datascript.db/datom-tx","goog/typeOf","m__4485__auto__","cljs.core/missing-protocol","datascript.db/datom-added","datascript.db/IDatom","this","cljs.core/PROTOCOL_SENTINEL","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","datascript.db/Datom","datascript.db/->Datom","e","a","v","tx","_hash","d","datascript.db/hash-datom","o","datascript.db/equiv-datom","datascript.db/seq-datom","k","datascript.db/val-at-datom","nf","i","datascript.db/nth-datom","not-found","datascript.db/assoc-datom","writer","opts","cljs.core/pr-sequential-writer","cljs.core/pr-writer","goog/exportSymbol","var_args","G__21204","datascript.db/datom","added","datascript.db/datom?","cljs.core/hash","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/List","G__21205","G__21207","G__21208","G__21209","G__21210","cljs.core/Keyword","datascript.db.datom.cljs$core$IFn$_invoke$arity$5","datascript.db/datom-from-reader","vec","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","datascript.db/cmp","o1","o2","cljs.core/compare","datascript.db/cmp-datoms-eavt","d1","d2","c__20612__auto__","datascript.db/cmp-datoms-aevt","datascript.db/cmp-datoms-avet","datascript.db/cmp-attr-quick","a1","a2","cljs.core/-compare","goog.array/defaultCompare","datascript.db/cmp-datoms-eavt-quick","datascript.db/cmp-datoms-aevt-quick","datascript.db/cmp-datoms-avet-quick","datascript.db/diff-sorted","b","cmp","only-a","only-b","both","cljs.core/empty?","cljs.core/not-empty","cljs.core.into.cljs$core$IFn$_invoke$arity$2","first-a","cljs.core/first","first-b","diff","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core/next","datascript.db/-search","datascript.db/ISearch","data","pattern","datascript.db/-datoms","datascript.db/-seek-datoms","datascript.db/-rseek-datoms","datascript.db/-index-range","datascript.db/IIndexAccess","db","index","components","attr","start","end","datascript.db/-schema","datascript.db/-attrs-by","datascript.db/IDB","property","datascript.db/db-transient","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/transient","datascript.db/db-persistent!","cljs.core/persistent!","this__4439__auto__","k__4440__auto__","this__4441__auto__","k21214","else__4442__auto__","G__21218","schema","eavt","aevt","avet","max-eid","max-tx","rschema","hash","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4458__auto__","f__4459__auto__","init__4460__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4461__auto__","p__21219","vec__21220","k__4462__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4463__auto__","this__4453__auto__","writer__4454__auto__","opts__4455__auto__","pr-pair__4456__auto__","keyval__4457__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__21213","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4437__auto__","__meta","this__4434__auto__","__hash","this__4443__auto__","cljs.core/count","this__4435__auto__","h__4297__auto__","fexpr__21223","coll__4436__auto__","cljs.core/hash-unordered-coll","this21215","other21216","this__4448__auto__","k__4449__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","this__4446__auto__","k__4447__auto__","pred__21224","cljs.core/keyword-identical?","expr__21225","G__21227","G__21228","G__21229","G__21230","G__21231","G__21232","G__21233","G__21234","G__21235","G__21236","G__21237","G__21238","G__21239","G__21240","G__21241","G__21242","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4451__auto__","cljs.core/seq","cljs.core/MapEntry","this__4438__auto__","this__4444__auto__","entry__4445__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","datascript.db/DB","this__4482__auto__","writer__4483__auto__","G__21217","extmap__4478__auto__","G__21243","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","datascript.db/->DB","datascript.db/map->DB","datascript.db/hash-db","other","datascript.db/equiv-db","cljs.core/-seq","cljs.core/-rseq","cljs.core/with-meta","G__21244","datascript.db/empty-db","cljs.core/meta","w","datascript.db/pr-db","key","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","fexpr__21247","vec__21248","me.tonsky.persistent_sorted_set.slice.cljs$core$IFn$_invoke$arity$3","datascript.db.datom.cljs$core$IFn$_invoke$arity$4","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","datascript.db/indexing?","cs","cljs.core.get.cljs$core$IFn$_invoke$arity$2","datascript.db/components->pattern","me.tonsky.persistent_sorted_set.rslice.cljs$core$IFn$_invoke$arity$3","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","G__21245","G__21246","datascript.db/validate-attr","datascript.db/resolve-datom","datascript.db/db?","cljs.core/native-satisfies?","k21262","G__21266","unfiltered-db","pred","p__21267","vec__21268","G__21261","fexpr__21271","this21263","other21264","pred__21272","expr__21273","G__21275","G__21276","G__21277","G__21278","G__21279","G__21280","datascript.db/FilteredDB","G__21265","G__21281","datascript.db/->FilteredDB","datascript.db/map->FilteredDB","datascript.db/hash-fdb","_","datascript.db/attr->properties","G__21282","G__21283","datascript.db/rschema","cljs.core/reduce-kv","m","keys->values","value","prop","datascript.db/validate-schema-key","expected","datascript.db/validate-schema","seq__21284","chunk__21285","count__21286","i__21287","vec__21294","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__21297","kv","comp?","and__4174__auto__","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","G__21301","datascript.db.empty_db.cljs$core$IFn$_invoke$arity$1","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","me.tonsky.persistent_sorted_set.sorted_set_by.cljs$core$IFn$_invoke$arity$1","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","datascript.db/init-max-eid","or__4185__auto__","G__21303","datascript.db/init-db","datoms","datascript.db.init_db.cljs$core$IFn$_invoke$arity$2","indexed","arr","G__21304","me.tonsky.persistent-sorted-set.arrays/into-array","me.tonsky.persistent-sorted-set.arrays/asort","me.tonsky.persistent-sorted-set/from-sorted-array","avet-datoms","avet-arr","cljs.core/to-array","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core/max","datascript.db/equiv-db-index","xs","ys","cljs.core/deref","h","cljs.core/reset!","p__21305","map__21306","cljs.core/hash-map","datascript.db/db-from-reader","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__21308","vec__21309","t","default-e","default-tx","G__21312","G__21313","datascript.db/entid-some","datascript.db/ref?","datascript.db/entid-strict","p__21314","vec__21315","c0","c1","c2","c3","G__21318","k21320","G__21324","db-before","db-after","tx-data","tempids","tx-meta","p__21325","vec__21326","G__21319","fexpr__21329","this21321","other21322","pred__21330","expr__21331","G__21333","G__21334","G__21335","G__21336","G__21337","G__21338","G__21339","G__21340","G__21341","G__21342","datascript.db/TxReport","G__21323","G__21343","datascript.db/->TxReport","datascript.db/map->TxReport","datascript.db/is-attr?","datascript.db/multival?","datascript.db/component?","datascript.db/entid","eid","cljs.core/sequential?","vec__21344","cljs.core/array?","cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1","datascript.db/validate-datom","datom","temp__5739__auto__","found","datascript.db/validate-eid","at","datascript.db/validate-val","datascript.db/current-tx","report","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","datascript.db/next-eid","datascript.db/tx-id?","datascript.db/tempid?","datascript.db/advance-max-eid","G__21347","G__21349","datascript.db/allocate-eid","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","G__21350","cljs.core/assoc-in","datascript.db/with-datom","indexing?","G__21351","cljs.core.update_in.cljs$core$IFn$_invoke$arity$5","me.tonsky.persistent-sorted-set/conj","temp__5737__auto__","removing","G__21352","me.tonsky.persistent-sorted-set/disj","datascript.db/transact-report","cljs.core/conj","datascript.db/reverse-ref?","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core/name","cljs.core/re-matches","datascript.db/reverse-ref","cljs.core.keyword.cljs$core$IFn$_invoke$arity$2","cljs.core/namespace","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","vec__21353","ns","name","datascript.db/check-upsert-conflict","entity","acc","vec__21356","_e","datascript.db/upsert-reduce-fn","eav","vec__21359","_a","_v","datascript.db/upsert-eid","idents","cljs.core/coll?","cljs.core/map?","p1__21362#","p2__21363#","datascript.db/maybe-wrap-multival","vs","datascript.db/explode","iter__4582__auto__","s__21365","cljs.core/LazySeq","xs__6292__auto__","vec__21370","iterys__4578__auto__","s__21367","c__4580__auto__","size__4581__auto__","b__21369","cljs.core/chunk-buffer","i__21368","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__21366","cljs.core/cons","cljs.core/rest","fs__4579__auto__","iter__21364","reverse?","straight-a","p__21373","vec__21374","datascript.db/transact-add","ent","new-datom","old-datom","datascript.db/transact-retract-datom","datascript.db/retract-components","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","datascript.db/retry-with-tempid","initial-report","es","tempid","upserted-eid","tempids'","report'","datascript.db/transact-tx-data","datascript.db/builtin-fn?","initial-es","vec__21394","seq__21395","first__21396","map__21397","entities","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core/inc","old-eid","id","datascript.db.allocate_eid.cljs$core$IFn$_invoke$arity$3","new-eid","new-entity","vec__21399","op","vec__21402","seq__21403","first__21404","f","args","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core/not","ident","fun","cljs.core/fn?","vec__21405","ov","nv","cljs.core/vec","cljs.core/some","vid","allocated-eid","e-datoms","v-datoms","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","vec__21408"]]],"~:cache-keys",["~#cmap",[["^1Z","datascript/db.cljc"],[1578170241590,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^1I","^1F","^1H","^1K","^1J","^1C","^1E"]]],["^1Z","goog/dom/tagname.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","~$goog.dom.HtmlElement"]]],["^1Z","goog/math/math.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","~$goog.asserts"]]],["^1Z","goog/html/trustedtypes.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/labs/useragent/browser.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1Z","goog/html/safeurl.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2C"]]],["^1Z","goog/array/array.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@"]]],["^1Z","goog/debug/error.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/dom/nodetype.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/string/typedstring.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/object/object.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/dom/asserts.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@"]]],"~:SHADOW-TIMESTAMP",[1577302212000,1574477009000],["^1Z","goog/math/long.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","~$goog.reflect"]]],["^1Z","goog/html/trustedresourceurl.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","~$goog.html.trustedtypes","^2F","^2G","^2H","^2I"]]],["^1Z","goog/string/internal.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/functions/functions.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/html/safestyle.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","~$goog.html.SafeUrl","^2H","^2I","^2C"]]],["^1Z","goog/dom/safe.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2M","^2E","~$goog.html.uncheckedconversions","^2H","^2C"]]],["^1Z","clojure/walk.cljs"],[1574477009594,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F"]]],["^1Z","goog/structs/map.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1Z","goog/html/safehtml.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","~$goog.dom.TagName","~$goog.dom.tags","^2Q","^2R","~$goog.html.SafeStyleSheet","^2M","^2E","^2L","^2F","^2G","~$goog.labs.userAgent.browser","^2B","^2H","^2I","^2C"]]],["^1Z","goog/dom/tags.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2B"]]],["^1Z","me/tonsky/persistent_sorted_set/arrays.cljc"],[1578170241726,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F","~$clojure.string"]]],["^1Z","goog/asserts/asserts.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Z","me/tonsky/persistent_sorted_set.cljs"],[1578170241726,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F","^1E"]]],["^1Z","goog/uri/uri.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Z","goog/i18n/bidi.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/fs/url.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/base.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",[]]],["^1Z","goog/structs/structs.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2B"]]],["^1Z","clojure/string.cljs"],[1574477009594,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F","^31","~$goog.string.StringBuffer"]]],["^1Z","goog/string/string.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","~$goog.dom.safe","^2S","^2H","^2C"]]],["^1Z","clojure/data.cljs"],[1574477009594,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F","~$clojure.set"]]],["^1Z","goog/reflect/reflect.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/labs/useragent/util.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2C"]]],["^1Z","goog/string/stringbuffer.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","goog/iter/iter.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","^2O","~$goog.math"]]],["^1Z","goog/html/uncheckedconversions.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","^2P","^2Q","^2R","^2X","^2M","^2E","^2H","^2C"]]],["^1Z","goog/dom/htmlelement.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I"]]],["^1Z","cljs/core.cljs"],[1574477009594,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["~$goog.math.Long","~$goog.math.Integer","^31","^2B","^1H","~$goog.Uri","^37"]]],["^1Z","goog/html/safescript.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","^2L","^2H","^2I"]]],["^1Z","goog/html/safestylesheet.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","^2R","^2B","^2H","^2I","^2C"]]],["^1Z","goog/math/integer.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2K"]]],["^1Z","clojure/set.cljs"],[1574477009594,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1F"]]],["^1Z","goog/uri/utils.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^1H","^2@","^31"]]],["^1Z","goog/string/const.js"],[1573417071133,"^2;",["^ ","^2<",null,"^2=",["^N",[]],"^2>",["^1I","^2@","^2I"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.2/persistent-sorted-set-0.1.2.jar!/me/tonsky/persistent_sorted_set.clj",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.2/persistent-sorted-set-0.1.2.jar!/me/tonsky/persistent_sorted_set/arrays.cljc",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/datascript/datascript/0.18.8/datascript-0.18.8.jar!/datascript/db.cljc",1578170241000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1559507883000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","datascript/db.cljc","^7",1,"^8",24,"^9",1,"^:",37,"^;",true,"^<",true],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E"],"~:shadow/protocol-prefixes",["^N",["datascript$db$IIndexAccess$","datascript$db$IDatom$","datascript$db$IDB$","datascript$db$ISearch$"]],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H"],"^M",["^N",["^O"]],"^P",["^ ","^L",["^ ","^Q",["^R",[["~$&","^S"]]],"^7",47,"^8",3,"^6","datascript/db.cljc","^T","^U","^V","^H","^W",true],"^G",["^ ","^Q",["^R",[["^X","^Y"]]],"^7",311,"^8",4,"^6","datascript/db.cljc","^T","^Z","^V","^H","^W",true],"^K",["^ ","^Q",["^R",[["^[","^10","~$&","^11"]]],"^7",126,"^8",4,"^6","datascript/db.cljc","^T","^12","^V","^H","^W",true],"^13",["^ ","^Q",["^R",[["^14","^15"]]],"^16","Return then if we are generating cljs code and else for Clojure code.\n     https://groups.google.com/d/msg/clojurescript/iBY5HaQda4A/w1lAQi9_AwsJ","^7",73,"^8",4,"^6","datascript/db.cljc","^T","^17","^V","^H","^W",true],"^18",["^ ","^Q",["^R",[[],["~$x"],["~$x","~$&","^19"]]],"^7",54,"^8",1,"^6","datascript/db.cljc","^T","^1:","^V","^H","^W",true],"^J",["^ ","^Q",["^R",[["~$&","^1;"]]],"^7",28,"^8",3,"^6","datascript/db.cljc","^T","^1<","^V","^H","^W",true],"^I",["^ ","^Q",["^R",[["~$&","^1="]]],"^7",288,"^8",3,"^6","datascript/db.cljc","^T","^1>","^V","^H","^W",true]],"^T","^H","^1@",null,"^1A",["^ ","^1B","^1C","^1D","^1E","^1F","^1F","^1G","^1H","^1I","^1I","^1C","^1C","^1E","^1E","^1J","^1J","^1K","^1K","^1H","^1H"],"^1L",["^N",["^1M","^1N"]],"~:shadow/js-access-global",["^N",["Error"]],"^1O",null,"~:defs",["^ ","~$explode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","datascript/db.cljc","^7",1027,"^8",8,"^9",1027,"^:",15,"~:private",true,"^Q",["^R",["~$quote",["^R",[["~$db","~$entity"]]]]]],"^44",true,"^T","~$datascript.db/explode","^6","datascript/db.cljc","^:",15,"~:method-params",["^R",[["^46","^47"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^8",1,"~:variadic?",false,"^7",1027,"~:ret-tag","~$cljs.core/LazySeq","^9",1027,"~:max-fixed-arity",2,"~:fn-var",true,"^Q",["^R",["^45",["^R",[["^46","^47"]]]]]],"~$cmp-datoms-aevt-quick",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",361,"^8",7,"^9",361,"^:",28,"^Q",["^R",["^45",["^R",[["~$d1","~$d2"]]]]]],"^T","~$datascript.db/cmp-datoms-aevt-quick","^6","datascript/db.cljc","^:",28,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",361,"^4=",["^N",["~$any","~$number"]],"^9",361,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$tempid?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",869,"^8",28,"^9",869,"^:",35,"~:tag","~$boolean","^44",true,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"^44",true,"^T","~$datascript.db/tempid?","^6","datascript/db.cljc","^:",35,"^49",["^R",[["~$x"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",868,"^4=","^4I","^9",869,"^4?",1,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"~$validate-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",830,"^8",7,"^9",830,"^:",21,"^Q",["^R",["^45",["^R",[["^46","~$datom"]]]]]],"^T","~$datascript.db/validate-datom","^6","datascript/db.cljc","^:",21,"^49",["^R",[["^46","^4L"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",830,"^4=","~$clj-nil","^9",830,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^4L"]]]]]],"~$rschema",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",603,"^8",8,"^9",603,"^:",15,"^44",true,"^Q",["^R",["^45",["^R",[["~$schema"]]]]]],"^44",true,"^T","~$datascript.db/rschema","^6","datascript/db.cljc","^:",15,"^49",["^R",[["^4P"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",603,"^4=",["^N",[null,"^4E"]],"^9",603,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^4P"]]]]]],"~$hash-fdb",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",701,"^8",8,"^9",701,"^:",16,"^44",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^44",true,"^T","~$datascript.db/hash-fdb","^6","datascript/db.cljc","^:",16,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",701,"^4=",["^N",[null,"^4E"]],"^9",701,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"~$validate-schema-key",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",615,"^8",8,"^9",615,"^:",27,"^44",true,"^Q",["^R",["^45",["^R",[["~$a","~$k","~$v","~$expected"]]]]]],"^44",true,"^T","~$datascript.db/validate-schema-key","^6","datascript/db.cljc","^:",27,"^49",["^R",[["~$a","~$k","~$v","^4U"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",615,"^4=","^4N","^9",615,"^4?",4,"^4@",true,"^Q",["^R",["^45",["^R",[["~$a","~$k","~$v","^4U"]]]]]],"~$builtin-fn?",["^ ","^T","~$datascript.db/builtin-fn?","^6","datascript/db.cljc","^7",1087,"^8",1,"^9",1087,"^:",17,"^5",["^ ","^6","datascript/db.cljc","^7",1087,"^8",6,"^9",1087,"^:",17],"^4H","~$cljs.core/ISet"],"~$cljs-env?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",67,"^8",8,"^9",67,"^:",17,"^44",true,"^Q",["^R",["^45",["^R",[["~$env"]]]]],"^16","Take the &env from a macro, and tell whether we are expanding into cljs."],"^44",true,"^T","~$datascript.db/cljs-env?","^6","datascript/db.cljc","^:",17,"^49",["^R",[["^4["]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",67,"^4=","^4I","^9",67,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^4["]]]]],"^16","Take the &env from a macro, and tell whether we are expanding into cljs."],"~$indexing?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",786,"^8",27,"^9",786,"^:",36,"^4H","^4I","^Q",["^R",["^45",["^R",[["^46","~$attr"]]]]]],"^T","~$datascript.db/indexing?","^6","datascript/db.cljc","^:",36,"^49",["^R",[["^46","^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",785,"^4=","^4I","^9",786,"^4?",2,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"~$emax",["^ ","^5",["^ ","^6","datascript/db.cljc","^7",21,"^8",14,"^9",21,"^:",18,"~:const",true],"^T","~$datascript.db/emax","^6","datascript/db.cljc","^:",18,"~:const-expr",["^ ","^1?","^55","~:val",2147483647,"~:env",["^ ","~:context","~:expr"],"^1P",2147483647,"^4H","^4F"],"^8",1,"^55",true,"^7",21,"^9",21,"^4H","^4F"],"~$init-max-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",652,"^8",8,"^9",652,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["~$eavt"]]]]]],"^44",true,"^T","~$datascript.db/init-max-eid","^6","datascript/db.cljc","^:",20,"^49",["^R",[["^5="]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",652,"^4=",["^N",["^4E","^4F"]],"^9",652,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^5="]]]]]],"~$->FilteredDB",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",32,"^8",22,"~:internal-ctor",true,"~:factory","~:positional","^7",528,"^9",528,"^Q",["^R",["^45",["^R",[["~$unfiltered-db","~$pred","~$hash"]]]]],"^16","Positional factory function for datascript.db/FilteredDB."],"^T","~$datascript.db/->FilteredDB","^6","datascript/db.cljc","^:",32,"^49",["^R",[["^5C","^5D","^5E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^5B","^7",528,"^4=","~$datascript.db/FilteredDB","^9",528,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^5C","^5D","^5E"]]]]],"^16","Positional factory function for datascript.db/FilteredDB."],"~$hash-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",217,"^8",8,"^9",217,"^:",18,"^44",true,"^Q",["^R",["^45",["^R",[["~$d"]]]]]],"^44",true,"^T","~$datascript.db/hash-datom","^6","datascript/db.cljc","^:",18,"^49",["^R",[["~$d"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",217,"^4=","^4F","^9",217,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["~$d"]]]]]],"~$is-attr?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",770,"^8",27,"^9",770,"^:",35,"^4H","^4I","^Q",["^R",["^45",["^R",[["^46","^52","~$property"]]]]]],"^T","~$datascript.db/is-attr?","^6","datascript/db.cljc","^:",35,"^49",["^R",[["^46","^52","^5K"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",769,"^4=","^4I","^9",770,"^4?",3,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52","^5K"]]]]]],"~$-attrs-by",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",408,"^8",4,"^9",408,"^:",13,"~:protocol","~$datascript.db/IDB","^16",null,"^Q",["^R",["^45",["^R",[["^46","^5K"]]]]]],"^5N","^5O","^T","~$datascript.db/-attrs-by","^6","datascript/db.cljc","^:",13,"^49",["^R",[["^46","^5K"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",406,"^4=","^4E","^9",408,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^5K"]]]]],"^16",null],"~$datom-added",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",137,"^8",4,"^9",137,"^:",15,"^5N","~$datascript.db/IDatom","^16",null,"^Q",["^R",["^45",["^R",[["~$this"]]]]]],"^5N","^5R","^T","~$datascript.db/datom-added","^6","datascript/db.cljc","^:",15,"^49",["^R",[["^5S"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",135,"^4=","^4E","^9",137,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^5S"]]]]],"^16",null],"~$-datoms",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",401,"^8",4,"^9",401,"^:",11,"^5N","~$datascript.db/IIndexAccess","^16",null,"^Q",["^R",["^45",["^R",[["^46","~$index","~$components"]]]]]],"^5N","^5V","^T","~$datascript.db/-datoms","^6","datascript/db.cljc","^:",11,"^49",["^R",[["^46","^5W","^5X"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",400,"^4=","^4E","^9",401,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^5W","^5X"]]]]],"^16",null],"~$-rseek-datoms",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",403,"^8",4,"^9",403,"^:",17,"^5N","^5V","^16",null,"^Q",["^R",["^45",["^R",[["^46","^5W","^5X"]]]]]],"^5N","^5V","^T","~$datascript.db/-rseek-datoms","^6","datascript/db.cljc","^:",17,"^49",["^R",[["^46","^5W","^5X"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",400,"^4=","^4E","^9",403,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^5W","^5X"]]]]],"^16",null],"~$init-db",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",658,"^8",11,"^9",658,"^:",18,"^4H","~$DB","^Q",["^R",["^45",["^R",[["~$datoms"],["^62","^4P"]]]]],"~:top-fn",["^ ","^4<",false,"~:fixed-arity",2,"^4?",2,"^49",["^R",[["^62"],["^62","^4P"]]],"^Q",["^R",[["^62"],["^62","^4P"]]],"^4;",["^R",[null,null]]]],"^T","~$datascript.db/init-db","^6","datascript/db.cljc","^:",18,"^63",["^ ","^4<",false,"^64",2,"^4?",2,"^49",["^R",[["^62"],["^62","^4P"]]],"^Q",["^R",[["^62"],["^62","^4P"]]],"^4;",["^R",[null,null]]],"^49",["^R",[["^62"],["^62","^4P"]]],"^4:",null,"^64",2,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"~:methods",[["^ ","^64",1,"^4<",false,"^4H","^61"],["^ ","^64",2,"^4<",false,"^4H","~$datascript.db/DB"]],"^7",658,"^4=","^61","^9",658,"^4?",2,"^4H","^61","^4@",true,"^Q",["^R",[["^62"],["^62","^4P"]]]],"~$val-at-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",232,"^8",8,"^9",232,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["~$d","~$k","~$not-found"]]]]]],"^44",true,"^T","~$datascript.db/val-at-datom","^6","datascript/db.cljc","^:",20,"^49",["^R",[["~$d","~$k","^69"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",232,"^4=",["^N",[null,"^4E"]],"^9",232,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["~$d","~$k","^69"]]]]]],"~$equiv-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",222,"^8",8,"^9",222,"^:",19,"^44",true,"^Q",["^R",["^45",["^R",[["~$d","~$o"]]]]]],"^44",true,"^T","~$datascript.db/equiv-datom","^6","datascript/db.cljc","^:",19,"^49",["^R",[["~$d","~$o"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",222,"^4=","^4I","^9",222,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["~$d","~$o"]]]]]],"~$multival?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",774,"^8",27,"^9",774,"^:",36,"^4H","^4I","^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"^T","~$datascript.db/multival?","^6","datascript/db.cljc","^:",36,"^49",["^R",[["^46","^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",773,"^4=","^4I","^9",774,"^4?",2,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"~$transact-add",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1044,"^8",8,"^9",1044,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["~$report",["~$_","~$e","~$a","~$v","~$tx","^1R","~$ent"]]]]]]],"^44",true,"^T","~$datascript.db/transact-add","^6","datascript/db.cljc","^:",20,"^49",["^R",[["^6@","~$p__21373"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1044,"^4=",["^N",[null,"~$clj","^4E"]],"^9",1044,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^6@",["~$_","~$e","~$a","~$v","^6A","^1R","^6B"]]]]]]],"~$transact-report",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",912,"^8",8,"^9",912,"^:",23,"^44",true,"^Q",["^R",["^45",["^R",[["^6@","^4L"]]]]]],"^44",true,"^T","~$datascript.db/transact-report","^6","datascript/db.cljc","^:",23,"^49",["^R",[["^6@","^4L"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",912,"^4=",["^N",["^6E","^4E"]],"^9",912,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^6@","^4L"]]]]]],"~$transact-tx-data",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1097,"^8",7,"^9",1097,"^:",23,"^Q",["^R",["^45",["^R",[["~$initial-report","~$initial-es"]]]]]],"^T","~$datascript.db/transact-tx-data","^6","datascript/db.cljc","^:",23,"^49",["^R",[["^6I","^6J"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1097,"^4=",["^N",["^6E","^4E"]],"^9",1097,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^6I","^6J"]]]]]],"~$pr-db",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",716,"^8",10,"^9",716,"^:",15,"^Q",["^R",["^45",["^R",[["^46","~$w","~$opts"]]]]]],"^T","~$datascript.db/pr-db","^6","datascript/db.cljc","^:",15,"^49",["^R",[["^46","~$w","^6M"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",4,"^4<",false,"^7",716,"^4=","^4E","^9",716,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","~$w","^6M"]]]]]],"~$diff-sorted",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",375,"^8",8,"^9",375,"^:",19,"^44",true,"^Q",["^R",["^45",["^R",[["~$a","~$b","~$cmp"]]]]]],"^44",true,"^T","~$datascript.db/diff-sorted","^6","datascript/db.cljc","^:",19,"^49",["^R",[["~$a","~$b","^6P"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",375,"^4=",["^N",["~$cljs.core/IVector","^4N"]],"^9",375,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["~$a","~$b","^6P"]]]]]],"~$datom-tx",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",136,"^8",4,"^9",136,"^:",12,"^5N","^5R","^16",null,"^Q",["^R",["^45",["^R",[["^5S"]]]]]],"^5N","^5R","^T","~$datascript.db/datom-tx","^6","datascript/db.cljc","^:",12,"^49",["^R",[["^5S"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",135,"^4=","^4E","^9",136,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^5S"]]]]],"^16",null],"~$nth-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",243,"^8",8,"^9",243,"^:",17,"^44",true,"^Q",["^R",["^45",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]]]],"^63",["^ ","^4<",false,"^64",3,"^4?",3,"^49",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]],"^Q",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]],"^4;",["^R",[null,null]]]],"^44",true,"^T","~$datascript.db/nth-datom","^6","datascript/db.cljc","^:",17,"^63",["^ ","^4<",false,"^64",3,"^4?",3,"^49",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]],"^Q",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]],"^4;",["^R",[null,null]]],"^49",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]],"^4:",null,"^64",3,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^66",[["^ ","^64",2,"^4<",false],["^ ","^64",3,"^4<",false]],"^7",243,"^9",243,"^4?",3,"^4@",true,"^Q",["^R",[["~$d","~$i"],["~$d","~$i","^69"]]]],"~$IllegalArgumentException",["^ ","^T","~$datascript.db/IllegalArgumentException","^6","datascript/db.cljc","^7",16,"^8",6,"^9",16,"^:",35,"^5",["^ ","^6","datascript/db.cljc","^7",16,"^8",11,"^9",16,"^:",35],"^4H","~$js"],"~$cmp-datoms-avet",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",336,"^8",7,"^9",336,"^:",22,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"^T","~$datascript.db/cmp-datoms-avet","^6","datascript/db.cljc","^:",22,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",336,"^4=","^4F","^9",336,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$next-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",857,"^8",8,"^9",857,"^:",16,"^44",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^44",true,"^T","~$datascript.db/next-eid","^6","datascript/db.cljc","^:",16,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",857,"^4=","^4F","^9",857,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"~$Datom",["^ ","~:num-fields",5,"~:protocols",["^N",["~$cljs.core/IIndexed","^5R","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ISeqable","~$cljs.core/IPrintWithWriter","~$cljs.core/IAssociative","~$cljs.core/ILookup"]],"^T","~$datascript.db/Datom","^6","datascript/db.cljc","^:",15,"~:type",true,"^8",10,"^7",139,"~:record",false,"^9",139,"^4H","~$function","~:skip-protocol-flag",["^N",["^75","^76","^77","^78","^79","^7:","^7;"]]],"~$db?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",522,"^8",7,"^9",522,"^:",10,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"^T","~$datascript.db/db?","^6","datascript/db.cljc","^:",10,"^49",["^R",[["~$x"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",522,"^4=","^4I","^9",522,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"~$check-upsert-conflict",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",948,"^8",8,"^9",948,"^:",29,"^44",true,"^Q",["^R",["^45",["^R",[["^47","~$acc"]]]]]],"^44",true,"^T","~$datascript.db/check-upsert-conflict","^6","datascript/db.cljc","^:",29,"^49",["^R",[["^47","^7D"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",948,"^9",948,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^47","^7D"]]]]]],"~$IDatom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","datascript/db.cljc","^:",20,"^8",14,"^7",135,"~:protocol-info",["^ ","^66",["^ ","^6S",[["^5S"]],"^5Q",[["^5S"]]]],"^9",135,"~:sigs",["^ ","~:datom-tx",["^ ","^T","^6S","^Q",["^R",[["^5S"]]],"^16",null],"~:datom-added",["^ ","^T","^5Q","^Q",["^R",[["^5S"]]],"^16",null]],"~:jsdoc",["^R",["@interface"]]],"^7G",true,"^T","^5R","^6","datascript/db.cljc","^:",20,"^8",1,"^7",135,"^7H",["^ ","^66",["^ ","^6S",[["^5S"]],"^5Q",[["^5S"]]]],"~:info",null,"^9",135,"^4H","^4E","^7I",["^ ","^7J",["^ ","^T","^6S","^Q",["^R",[["^5S"]]],"^16",null],"^7K",["^ ","^T","^5Q","^Q",["^R",[["^5S"]]],"^16",null]],"~:impls",["^N",["^7<"]],"^7L",["^R",["@interface"]]],"~$-search",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",398,"^8",4,"^9",398,"^:",11,"^5N","~$datascript.db/ISearch","^16",null,"^Q",["^R",["^45",["^R",[["~$data","~$pattern"]]]]]],"^5N","^7P","^T","~$datascript.db/-search","^6","datascript/db.cljc","^:",11,"^49",["^R",[["^7Q","^7R"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",397,"^4=","^4E","^9",398,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^7Q","^7R"]]]]],"^16",null],"~$equiv-db-index",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",686,"^8",8,"^9",686,"^:",22,"^44",true,"^Q",["^R",["^45",["^R",[["~$x","~$y"]]]]]],"^44",true,"^T","~$datascript.db/equiv-db-index","^6","datascript/db.cljc","^:",22,"^49",["^R",[["~$x","~$y"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",686,"^4=","^4I","^9",686,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["~$x","~$y"]]]]]],"~$combine-hashes",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^Q",["^R",["^45",["^R",[["~$x","~$y"]]]]]],"^T","~$datascript.db/combine-hashes","^6","datascript/db.cljc","^:",21,"^49",["^R",[["~$x","~$y"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",79,"^4=","^4F","^9",79,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["~$x","~$y"]]]]]],"^4L",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",210,"^8",14,"^9",210,"^:",19,"^4H","^72","^Q",["^R",["^45",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","~$added"]]]]],"^63",["^ ","^4<",false,"^64",5,"^4?",5,"^49",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]],"^Q",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]],"^4;",["^R",[null,null,null]]]],"^T","~$datascript.db/datom","^6","datascript/db.cljc","^:",19,"^63",["^ ","^4<",false,"^64",5,"^4?",5,"^49",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]],"^Q",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]],"^4;",["^R",[null,null,null]]],"^49",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]],"^4:",null,"^64",5,"^4;",["^R",[null,null,null]],"^8",1,"^4<",false,"^66",[["^ ","^64",3,"^4<",false,"^4H","^7<"],["^ ","^64",4,"^4<",false,"^4H","^7<"],["^ ","^64",5,"^4<",false,"^4H","^7<"]],"^7",210,"^4=","^72","^9",210,"^4?",5,"^4H","^72","^4@",true,"^Q",["^R",[["~$e","~$a","~$v"],["~$e","~$a","~$v","^6A"],["~$e","~$a","~$v","^6A","^7X"]]]],"^61",["^ ","^73",8,"^74",["^N",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","^76","^77","~$cljs.core/ICollection","~$cljs.core/ICounted","^78","~$cljs.core/IMeta","~$cljs.core/ICloneable","^79","~$cljs.core/IIterable","~$cljs.core/IWithMeta","^7:","~$cljs.core/IMap","^7;"]],"^T","^67","^6","datascript/db.cljc","^:",24,"^7=",true,"^8",22,"^5@",true,"^7",427,"^7>",true,"^9",427,"^4H","^7?","^7@",["^N",["^7Z","^7[","^76","^77","^80","^81","^78","^82","^83","^79","^84","^85","^7:","^86","^7;"]]],"~$map->TxReport",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",20,"^8",12,"^5@",true,"^5A","~:map","^7",767,"^9",767,"^Q",["^R",["^45",["^R",[["~$G__21323"]]]]],"^16","Factory function for datascript.db/TxReport, taking a map of keywords to field values."],"^T","~$datascript.db/map->TxReport","^6","datascript/db.cljc","^:",20,"^49",["^R",[["^89"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^88","^7",767,"^4=","~$datascript.db/TxReport","^9",767,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^89"]]]]],"^16","Factory function for datascript.db/TxReport, taking a map of keywords to field values."],"^6P",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",314,"^8",7,"^9",314,"^:",10,"^Q",["^R",["^45",["^R",[["~$o1","~$o2"]]]]]],"^T","~$datascript.db/cmp","^6","datascript/db.cljc","^:",10,"^49",["^R",[["^8<","^8="]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",314,"^4=","^4F","^9",314,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^8<","^8="]]]]]],"~$maybe-wrap-multival",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1007,"^8",8,"^9",1007,"^:",27,"^44",true,"^Q",["^R",["^45",["^R",[["^46","~$a","^Y"]]]]]],"^44",true,"^T","~$datascript.db/maybe-wrap-multival","^6","datascript/db.cljc","^:",27,"^49",["^R",[["^46","~$a","^Y"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1007,"^4=",["^N",[null,"^6R"]],"^9",1007,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","~$a","^Y"]]]]]],"~$retract-components",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1068,"^8",8,"^9",1068,"^:",26,"^44",true,"^Q",["^R",["^45",["^R",[["^46","^62"]]]]]],"^44",true,"^T","~$datascript.db/retract-components","^6","datascript/db.cljc","^:",26,"^49",["^R",[["^46","^62"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1068,"^4=",["^N",["^6E","^4E"]],"^9",1068,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^62"]]]]]],"~$retry-with-tempid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1075,"^8",8,"^9",1075,"^:",25,"^44",true,"^Q",["^R",["^45",["^R",[["^6I","^6@","~$es","~$tempid","~$upserted-eid"]]]]]],"^44",true,"^T","~$datascript.db/retry-with-tempid","^6","datascript/db.cljc","^:",25,"^49",["^R",[["^6I","^6@","^8D","^8E","^8F"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1075,"^4=","^4E","^9",1075,"^4?",5,"^4@",true,"^Q",["^R",["^45",["^R",[["^6I","^6@","^8D","^8E","^8F"]]]]]],"~$hash-db",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",694,"^8",8,"^9",694,"^:",15,"^44",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^44",true,"^T","~$datascript.db/hash-db","^6","datascript/db.cljc","^:",15,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",694,"^4=",["^N",[null,"^4E"]],"^9",694,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"~$tx0",["^ ","^5",["^ ","^6","datascript/db.cljc","^7",20,"^8",14,"^9",20,"^:",17,"^55",true],"^T","~$datascript.db/tx0","^6","datascript/db.cljc","^:",17,"^57",["^ ","^1?","^55","^58",536870912,"^59",["^ ","^5:","^5;"],"^1P",536870912,"^4H","^4F"],"^8",1,"^55",true,"^7",20,"^9",20,"^4H","^4F"],"~$tx-id?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",861,"^8",28,"^9",861,"^:",34,"^4H","^4I","^44",true,"^Q",["^R",["^45",["^R",[["~$e"]]]]]],"^44",true,"^T","~$datascript.db/tx-id?","^6","datascript/db.cljc","^:",34,"^49",["^R",[["~$e"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",860,"^4=","^4I","^9",861,"^4?",1,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["~$e"]]]]]],"~$db-persistent!",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",421,"^8",7,"^9",421,"^:",21,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^T","~$datascript.db/db-persistent!","^6","datascript/db.cljc","^:",21,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",421,"^4=",["^N",["^6E","^4E"]],"^9",421,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"~$reverse-ref?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",918,"^8",27,"^9",918,"^:",39,"^4H","^4I","^Q",["^R",["^45",["^R",[["^52"]]]]]],"^T","~$datascript.db/reverse-ref?","^6","datascript/db.cljc","^:",39,"^49",["^R",[["^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",917,"^4=","^4I","^9",918,"^4?",1,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^52"]]]]]],"~$implicit-schema",["^ ","^5",["^ ","^6","datascript/db.cljc","^7",23,"^8",14,"^9",23,"^:",29,"^55",true],"^T","~$datascript.db/implicit-schema","^6","datascript/db.cljc","^:",29,"^57",["^ ","^1?","^88","^59",["^ ","^5:","^5;"],"^1P",["^ ","~:db/ident",["^ ","~:db/unique","~:db.unique/identity"]],"~:keys",[["^ ","^1?","^55","^58","^8T","^59",["^ ","^5:","^5;"],"^1P","^8T","^4H","~$cljs.core/Keyword"]],"~:vals",[["^ ","^1?","^88","^59",["^ ","^5:","^5;"],"^1P",["^ ","^8U","^8V"],"^8W",[["^ ","^1?","^55","^58","^8U","^59",["^ ","^5:","^5;"],"^1P","^8U","^4H","^8X"]],"^8Y",[["^ ","^1?","^55","^58","^8V","^59",["^ ","^5:","^5;"],"^1P","^8V","^4H","^8X"]],"~:children",["^8W","^8Y"],"^4H","^86"]],"^8Z",["^8W","^8Y"],"^4H","^86"],"^8",1,"^55",true,"^7",23,"^9",23,"^4H","^86"],"~$upsert-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",982,"^8",8,"^9",982,"^:",18,"^44",true,"^Q",["^R",["^45",["^R",[["^46","^47"]]]]]],"^44",true,"^T","~$datascript.db/upsert-eid","^6","datascript/db.cljc","^:",18,"^49",["^R",[["^46","^47"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",982,"^4=",["^N",["^4E","^4N"]],"^9",982,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^47"]]]]]],"~$UnsupportedOperationException",["^ ","^T","~$datascript.db/UnsupportedOperationException","^6","datascript/db.cljc","^7",17,"^8",6,"^9",17,"^:",40,"^5",["^ ","^6","datascript/db.cljc","^7",17,"^8",11,"^9",17,"^:",40],"^4H","^6Y"],"~$validate-val",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",849,"^8",8,"^9",849,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["~$v","~$at"]]]]]],"^44",true,"^T","~$datascript.db/validate-val","^6","datascript/db.cljc","^:",20,"^49",["^R",[["~$v","^94"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",849,"^4=","^4N","^9",849,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["~$v","^94"]]]]]],"~$->TxReport",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",20,"^8",12,"^5@",true,"^5A","^5B","^7",767,"^9",767,"^Q",["^R",["^45",["^R",[["~$db-before","~$db-after","~$tx-data","~$tempids","~$tx-meta"]]]]],"^16","Positional factory function for datascript.db/TxReport."],"^T","~$datascript.db/->TxReport","^6","datascript/db.cljc","^:",20,"^49",["^R",[["^97","^98","^99","^9:","^9;"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^5B","^7",767,"^4=","^8;","^9",767,"^4?",5,"^4@",true,"^Q",["^R",["^45",["^R",[["^97","^98","^99","^9:","^9;"]]]]],"^16","Positional factory function for datascript.db/TxReport."],"~$map->DB",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",24,"^8",22,"^5@",true,"^5A","^88","^7",427,"^9",427,"^Q",["^R",["^45",["^R",[["~$G__21217"]]]]],"^16","Factory function for datascript.db/DB, taking a map of keywords to field values."],"^T","~$datascript.db/map->DB","^6","datascript/db.cljc","^:",24,"^49",["^R",[["^9>"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^88","^7",427,"^4=","^67","^9",427,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^9>"]]]]],"^16","Factory function for datascript.db/DB, taking a map of keywords to field values."],"~$cmp-datoms-eavt",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",322,"^8",7,"^9",322,"^:",22,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"^T","~$datascript.db/cmp-datoms-eavt","^6","datascript/db.cljc","^:",22,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",322,"^4=","^4F","^9",322,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$cmp-datoms-aevt",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",329,"^8",7,"^9",329,"^:",22,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"^T","~$datascript.db/cmp-datoms-aevt","^6","datascript/db.cljc","^:",22,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",329,"^4=","^4F","^9",329,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$entid-some",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",824,"^8",7,"^9",824,"^:",17,"^Q",["^R",["^45",["^R",[["^46","~$eid"]]]]]],"^T","~$datascript.db/entid-some","^6","datascript/db.cljc","^:",17,"^49",["^R",[["^46","^9E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",824,"^4=",["^N",["^4E","^4N"]],"^9",824,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"~$-seek-datoms",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",402,"^8",4,"^9",402,"^:",16,"^5N","^5V","^16",null,"^Q",["^R",["^45",["^R",[["^46","^5W","^5X"]]]]]],"^5N","^5V","^T","~$datascript.db/-seek-datoms","^6","datascript/db.cljc","^:",16,"^49",["^R",[["^46","^5W","^5X"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",400,"^4=","^4E","^9",402,"^4?",3,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^5W","^5X"]]]]],"^16",null],"~$cmp-datoms-avet-quick",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",368,"^8",7,"^9",368,"^:",28,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"^T","~$datascript.db/cmp-datoms-avet-quick","^6","datascript/db.cljc","^:",28,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",368,"^4=",["^N",["^4E","^4F"]],"^9",368,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$validate-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",839,"^8",8,"^9",839,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["^9E","^94"]]]]]],"^44",true,"^T","~$datascript.db/validate-eid","^6","datascript/db.cljc","^:",20,"^49",["^R",[["^9E","^94"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",839,"^4=","^4N","^9",839,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^9E","^94"]]]]]],"~$with-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",894,"^8",8,"^9",894,"^:",18,"^44",true,"^Q",["^R",["^45",["^R",[["^46","^4L"]]]]]],"^44",true,"^T","~$datascript.db/with-datom","^6","datascript/db.cljc","^:",18,"^49",["^R",[["^46","^4L"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",894,"^4=",["^N",[null,"^6E","^4E"]],"^9",894,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^4L"]]]]]],"~$empty-db",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",637,"^8",11,"^9",637,"^:",19,"^4H","^61","^Q",["^R",["^45",["^R",[[],["^4P"]]]]],"^63",["^ ","^4<",false,"^64",1,"^4?",1,"^49",["^R",[[],["^4P"]]],"^Q",["^R",[[],["^4P"]]],"^4;",["^R",[null,null]]]],"^T","~$datascript.db/empty-db","^6","datascript/db.cljc","^:",19,"^63",["^ ","^4<",false,"^64",1,"^4?",1,"^49",["^R",[[],["^4P"]]],"^Q",["^R",[[],["^4P"]]],"^4;",["^R",[null,null]]],"^49",["^R",[[],["^4P"]]],"^4:",null,"^64",1,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^66",[["^ ","^64",0,"^4<",false,"^4H","^61"],["^ ","^64",1,"^4<",false,"^4H","^67"]],"^7",637,"^4=","^61","^9",637,"^4?",1,"^4H","^61","^4@",true,"^Q",["^R",[[],["^4P"]]]],"~$datom?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",215,"^8",7,"^9",215,"^:",13,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"^T","~$datascript.db/datom?","^6","datascript/db.cljc","^:",13,"^49",["^R",[["~$x"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",215,"^4=","^4I","^9",215,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"~$attr->properties",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",591,"^8",7,"^9",591,"^:",23,"^Q",["^R",["^45",["^R",[["~$k","~$v"]]]]]],"^T","~$datascript.db/attr->properties","^6","datascript/db.cljc","^:",23,"^49",["^R",[["~$k","~$v"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",591,"^9",591,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["~$k","~$v"]]]]]],"~$resolve-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",749,"^8",8,"^9",749,"^:",21,"^44",true,"^Q",["^R",["^45",["^R",[["^46","~$e","~$a","~$v","~$t","~$default-e","~$default-tx"]]]]]],"^44",true,"^T","~$datascript.db/resolve-datom","^6","datascript/db.cljc","^:",21,"^49",["^R",[["^46","~$e","~$a","~$v","~$t","^9V","^9W"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",749,"^4=","^7<","^9",749,"^4?",7,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","~$e","~$a","~$v","~$t","^9V","^9W"]]]]]],"~$cmp-attr-quick",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",345,"^8",8,"^9",345,"^:",22,"^44",true,"^Q",["^R",["^45",["^R",[["~$a1","~$a2"]]]]]],"^44",true,"^T","~$datascript.db/cmp-attr-quick","^6","datascript/db.cljc","^:",22,"^49",["^R",[["^9Z","^9["]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",345,"^4=",["^N",["^4E","^4F"]],"^9",345,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^9Z","^9["]]]]]],"~$current-tx",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",854,"^8",8,"^9",854,"^:",18,"^44",true,"^Q",["^R",["^45",["^R",[["^6@"]]]]]],"^44",true,"^T","~$datascript.db/current-tx","^6","datascript/db.cljc","^:",18,"^49",["^R",[["^6@"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",854,"^4=","^4F","^9",854,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^6@"]]]]]],"~$allocate-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",879,"^8",8,"^9",879,"^:",20,"^44",true,"^Q",["^R",["^45",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]]]],"^63",["^ ","^4<",false,"^64",3,"^4?",3,"^49",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]],"^Q",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]],"^4;",["^R",[null,null]]]],"^44",true,"^T","~$datascript.db/allocate-eid","^6","datascript/db.cljc","^:",20,"^63",["^ ","^4<",false,"^64",3,"^4?",3,"^49",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]],"^Q",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]],"^4;",["^R",[null,null]]],"^49",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]],"^4:",null,"^64",3,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^66",[["^ ","^64",2,"^4<",false,"^4H",["^N",["^6E","^4E"]]],["^ ","^64",3,"^4<",false,"^4H",["^N",["^6E","^4E"]]]],"^7",879,"^9",879,"^4?",3,"^4@",true,"^Q",["^R",[["^6@","^9E"],["^6@","~$e","^9E"]]]],"~$TxReport",["^ ","^73",5,"^74",["^N",["^7Z","^7[","^76","^77","^80","^81","^78","^82","^83","^79","^84","^85","^7:","^86","^7;"]],"^T","^8;","^6","datascript/db.cljc","^:",20,"^7=",true,"^8",12,"^5@",true,"^7",767,"^7>",true,"^9",767,"^4H","^7?","^7@",["^N",["^7Z","^7[","^76","^77","^80","^81","^78","^82","^83","^79","^84","^85","^7:","^86","^7;"]]],"~$components->pattern",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",759,"^8",8,"^9",759,"^:",27,"^44",true,"^Q",["^R",["^45",["^R",[["^46","^5W",["~$c0","~$c1","~$c2","~$c3"],"^9V","^9W"]]]]]],"^44",true,"^T","~$datascript.db/components->pattern","^6","datascript/db.cljc","^:",27,"^49",["^R",[["^46","^5W","~$p__21314","^9V","^9W"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",759,"^9",759,"^4?",5,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^5W",["^:7","^:8","^:9","^::"],"^9V","^9W"]]]]]],"~$->DB",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",24,"^8",22,"^5@",true,"^5A","^5B","^7",427,"^9",427,"^Q",["^R",["^45",["^R",[["^4P","^5=","~$aevt","~$avet","~$max-eid","~$max-tx","^4O","^5E"]]]]],"^16","Positional factory function for datascript.db/DB."],"^T","~$datascript.db/->DB","^6","datascript/db.cljc","^:",24,"^49",["^R",[["^4P","^5=","^:>","^:?","^:@","^:A","^4O","^5E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^5B","^7",427,"^4=","^67","^9",427,"^4?",8,"^4@",true,"^Q",["^R",["^45",["^R",[["^4P","^5=","^:>","^:?","^:@","^:A","^4O","^5E"]]]]],"^16","Positional factory function for datascript.db/DB."],"~$datom-from-reader",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",274,"^8",14,"^9",274,"^:",31,"^4H","^72","^Q",["^R",["^45",["^R",[["~$vec"]]]]]],"^T","~$datascript.db/datom-from-reader","^6","datascript/db.cljc","^:",31,"^49",["^R",[["^:D"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",274,"^4=","^72","^9",274,"^4?",1,"^4H","^72","^4@",true,"^Q",["^R",["^45",["^R",[["^:D"]]]]]],"~$cmp-datoms-eavt-quick",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",354,"^8",7,"^9",354,"^:",28,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"^T","~$datascript.db/cmp-datoms-eavt-quick","^6","datascript/db.cljc","^:",28,"^49",["^R",[["^4B","^4C"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",354,"^4=",["^N",["^4E","^4F"]],"^9",354,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^4B","^4C"]]]]]],"~$reverse-ref",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",930,"^8",7,"^9",930,"^:",18,"^Q",["^R",["^45",["^R",[["^52"]]]]]],"^T","~$datascript.db/reverse-ref","^6","datascript/db.cljc","^:",18,"^49",["^R",[["^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",930,"^4=",["^N",["^8X","~$string"]],"^9",930,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^52"]]]]]],"~$entid-strict",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",818,"^8",7,"^9",818,"^:",19,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"^T","~$datascript.db/entid-strict","^6","datascript/db.cljc","^:",19,"^49",["^R",[["^46","^9E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",818,"^4=","^4E","^9",818,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"~$advance-max-eid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",873,"^8",8,"^9",873,"^:",23,"^44",true,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"^44",true,"^T","~$datascript.db/advance-max-eid","^6","datascript/db.cljc","^:",23,"^49",["^R",[["^46","^9E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",873,"^4=",["^N",[null,"^6E","^4E"]],"^9",873,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"~$->Datom",["^ ","^43",null,"^5",["^ ","^74",["^N",["^75","^5R","^76","^77","^78","^79","^7:","^7;"]],"^6","datascript/db.cljc","^:",15,"^8",10,"^5A","^5B","^7",139,"^9",139,"^Q",["^R",["^45",["^R",[["~$e","~$a","~$v","^6A","~$_hash"]]]]],"^7@",["^N",["^75","^76","^77","^78","^79","^7:","^7;"]],"^16","Positional factory function for datascript.db/Datom."],"^74",["^N",["^75","^5R","^76","^77","^78","^79","^7:","^7;"]],"^T","~$datascript.db/->Datom","^6","datascript/db.cljc","^:",15,"^49",["^R",[["~$e","~$a","~$v","^6A","^:P"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^5A","^5B","^7",139,"^4=","^7<","^9",139,"^4?",5,"^4@",true,"^Q",["^R",["^45",["^R",[["~$e","~$a","~$v","^6A","^:P"]]]]],"^7@",["^N",["^75","^76","^77","^78","^79","^7:","^7;"]],"^16","Positional factory function for datascript.db/Datom."],"~$Exception",["^ ","^T","~$datascript.db/Exception","^6","datascript/db.cljc","^7",15,"^8",6,"^9",15,"^:",20,"^5",["^ ","^6","datascript/db.cljc","^7",15,"^8",11,"^9",15,"^:",20],"^4H","^6Y"],"~$upsert-reduce-fn",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",962,"^8",8,"^9",962,"^:",24,"^44",true,"^Q",["^R",["^45",["^R",[["^46","~$eav","~$a","~$v"]]]]]],"^44",true,"^T","~$datascript.db/upsert-reduce-fn","^6","datascript/db.cljc","^:",24,"^49",["^R",[["^46","^:U","~$a","~$v"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",962,"^4=",["^N",[null,"^6R"]],"^9",962,"^4?",4,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^:U","~$a","~$v"]]]]]],"~$FilteredDB",["^ ","^73",3,"^74",["^N",["^7Z","^7[","^76","^77","^80","^81","^78","^82","^83","^79","^84","^85","^7:","^86","^7;"]],"^T","^5G","^6","datascript/db.cljc","^:",32,"^7=",true,"^8",22,"^5@",true,"^7",528,"^7>",true,"^9",528,"^4H","^7?","^7@",["^N",["^7Z","^7[","^76","^77","^80","^81","^78","^82","^83","^79","^84","^85","^7:","^86","^7;"]]],"~$validate-attr",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",844,"^8",8,"^9",844,"^:",21,"^44",true,"^Q",["^R",["^45",["^R",[["^52","^94"]]]]]],"^44",true,"^T","~$datascript.db/validate-attr","^6","datascript/db.cljc","^:",21,"^49",["^R",[["^52","^94"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",844,"^4=","^4N","^9",844,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^52","^94"]]]]]],"~$e0",["^ ","^5",["^ ","^6","datascript/db.cljc","^7",19,"^8",14,"^9",19,"^:",16,"^55",true],"^T","~$datascript.db/e0","^6","datascript/db.cljc","^:",16,"^57",["^ ","^1?","^55","^58",0,"^59",["^ ","^5:","^5;"],"^1P",0,"^4H","^4F"],"^8",1,"^55",true,"^7",19,"^9",19,"^4H","^4F"],"~$txmax",["^ ","^5",["^ ","^6","datascript/db.cljc","^7",22,"^8",14,"^9",22,"^:",19,"^55",true],"^T","~$datascript.db/txmax","^6","datascript/db.cljc","^:",19,"^57",["^ ","^1?","^55","^58",2147483647,"^59",["^ ","^5:","^5;"],"^1P",2147483647,"^4H","^4F"],"^8",1,"^55",true,"^7",22,"^9",22,"^4H","^4F"],"~$validate-schema",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",624,"^8",8,"^9",624,"^:",23,"^44",true,"^Q",["^R",["^45",["^R",[["^4P"]]]]]],"^44",true,"^T","~$datascript.db/validate-schema","^6","datascript/db.cljc","^:",23,"^49",["^R",[["^4P"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",624,"^4=","^4N","^9",624,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^4P"]]]]]],"~$-schema",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",407,"^8",4,"^9",407,"^:",11,"^5N","^5O","^16",null,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^5N","^5O","^T","~$datascript.db/-schema","^6","datascript/db.cljc","^:",11,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",406,"^4=","^4E","^9",407,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]],"^16",null],"~$equiv-db",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",710,"^8",8,"^9",710,"^:",16,"^44",true,"^Q",["^R",["^45",["^R",[["^46","~$other"]]]]]],"^44",true,"^T","~$datascript.db/equiv-db","^6","datascript/db.cljc","^:",16,"^49",["^R",[["^46","^;7"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",710,"^4=","^4I","^9",710,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^;7"]]]]]],"~$IIndexAccess",["^ ","^5",["^ ","^7G",true,"^6","datascript/db.cljc","^:",26,"^8",14,"^7",400,"^7H",["^ ","^66",["^ ","^5U",[["^46","^5W","^5X"]],"^9G",[["^46","^5W","^5X"]],"^5Z",[["^46","^5W","^5X"]],"~$-index-range",[["^46","^52","~$start","~$end"]]]],"^9",400,"^7I",["^ ","~:-datoms",["^ ","^T","^5U","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"~:-seek-datoms",["^ ","^T","^9G","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"~:-rseek-datoms",["^ ","^T","^5Z","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"~:-index-range",["^ ","^T","^;:","^Q",["^R",[["^46","^52","^;;","^;<"]]],"^16",null]],"^7L",["^R",["@interface"]]],"^7G",true,"^T","^5V","^6","datascript/db.cljc","^:",26,"^8",1,"^7",400,"^7H",["^ ","^66",["^ ","^5U",[["^46","^5W","^5X"]],"^9G",[["^46","^5W","^5X"]],"^5Z",[["^46","^5W","^5X"]],"^;:",[["^46","^52","^;;","^;<"]]]],"^7M",null,"^9",400,"^4H","^4E","^7I",["^ ","^;=",["^ ","^T","^5U","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"^;>",["^ ","^T","^9G","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"^;?",["^ ","^T","^5Z","^Q",["^R",[["^46","^5W","^5X"]]],"^16",null],"^;@",["^ ","^T","^;:","^Q",["^R",[["^46","^52","^;;","^;<"]]],"^16",null]],"^7N",["^N",["^5G","^67"]],"^7L",["^R",["@interface"]]],"~$component?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",782,"^8",27,"^9",782,"^:",37,"^4H","^4I","^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"^T","~$datascript.db/component?","^6","datascript/db.cljc","^:",37,"^49",["^R",[["^46","^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",781,"^4=","^4I","^9",782,"^4?",2,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"~$IDB",["^ ","^5",["^ ","^7G",true,"^6","datascript/db.cljc","^:",17,"^8",14,"^7",406,"^7H",["^ ","^66",["^ ","^;4",[["^46"]],"^5M",[["^46","^5K"]]]],"^9",406,"^7I",["^ ","~:-schema",["^ ","^T","^;4","^Q",["^R",[["^46"]]],"^16",null],"~:-attrs-by",["^ ","^T","^5M","^Q",["^R",[["^46","^5K"]]],"^16",null]],"^7L",["^R",["@interface"]]],"^7G",true,"^T","^5O","^6","datascript/db.cljc","^:",17,"^8",1,"^7",406,"^7H",["^ ","^66",["^ ","^;4",[["^46"]],"^5M",[["^46","^5K"]]]],"^7M",null,"^9",406,"^4H","^4E","^7I",["^ ","^;D",["^ ","^T","^;4","^Q",["^R",[["^46"]]],"^16",null],"^;E",["^ ","^T","^5M","^Q",["^R",[["^46","^5K"]]],"^16",null]],"^7N",["^N",["^5G","^67"]],"^7L",["^R",["@interface"]]],"~$db-from-reader",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",742,"^8",7,"^9",742,"^:",21,"^Q",["^R",["^45",["^R",[[["^ ","^8W",["^4P","^62"]]]]]]]],"^T","~$datascript.db/db-from-reader","^6","datascript/db.cljc","^:",21,"^49",["^R",[["~$p__21305"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",742,"^4=","^67","^9",742,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[[["^ ","^8W",["^4P","^62"]]]]]]]],"~$assoc-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",262,"^8",15,"^9",262,"^:",26,"^4H","^72","^44",true,"^Q",["^R",["^45",["^R",[["~$d","~$k","~$v"]]]]]],"^44",true,"^T","~$datascript.db/assoc-datom","^6","datascript/db.cljc","^:",26,"^49",["^R",[["~$d","~$k","~$v"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",262,"^4=","^72","^9",262,"^4?",3,"^4H","^72","^4@",true,"^Q",["^R",["^45",["^R",[["~$d","~$k","~$v"]]]]]],"~$db-transient",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",415,"^8",7,"^9",415,"^:",19,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"^T","~$datascript.db/db-transient","^6","datascript/db.cljc","^:",19,"^49",["^R",[["^46"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",415,"^4=",["^N",["^6E","^4E"]],"^9",415,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^46"]]]]]],"~$map->FilteredDB",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^:",32,"^8",22,"^5@",true,"^5A","^88","^7",528,"^9",528,"^Q",["^R",["^45",["^R",[["~$G__21265"]]]]],"^16","Factory function for datascript.db/FilteredDB, taking a map of keywords to field values."],"^T","~$datascript.db/map->FilteredDB","^6","datascript/db.cljc","^:",32,"^49",["^R",[["^;N"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^5@",true,"^4<",false,"^5A","^88","^7",528,"^4=","^5G","^9",528,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["^;N"]]]]],"^16","Factory function for datascript.db/FilteredDB, taking a map of keywords to field values."],"~$entid",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",789,"^8",7,"^9",789,"^:",12,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"^T","~$datascript.db/entid","^6","datascript/db.cljc","^:",12,"^49",["^R",[["^46","^9E"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",789,"^4=",["^N",[null,"^4E","^4N"]],"^9",789,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^9E"]]]]]],"^;:",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",404,"^8",4,"^9",404,"^:",16,"^5N","^5V","^16",null,"^Q",["^R",["^45",["^R",[["^46","^52","^;;","^;<"]]]]]],"^5N","^5V","^T","~$datascript.db/-index-range","^6","datascript/db.cljc","^:",16,"^49",["^R",[["^46","^52","^;;","^;<"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",400,"^4=","^4E","^9",404,"^4?",4,"^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52","^;;","^;<"]]]]],"^16",null],"^O",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",34,"^8",27,"^9",34,"^:",35,"^4H","^4I","^Q",["^R",["^45",["^R",[["~$x"]]]]]],"^T","~$datascript.db/seqable?","^6","datascript/db.cljc","^:",35,"^49",["^R",[["~$x"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",33,"^4=","^4I","^9",34,"^4?",1,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["~$x"]]]]]],"~$seq-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",227,"^8",8,"^9",227,"^:",17,"^44",true,"^Q",["^R",["^45",["^R",[["~$d"]]]]]],"^44",true,"^T","~$datascript.db/seq-datom","^6","datascript/db.cljc","^:",17,"^49",["^R",[["~$d"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",227,"^4=","~$cljs.core/List","^9",227,"^4?",1,"^4@",true,"^Q",["^R",["^45",["^R",[["~$d"]]]]]],"~$transact-retract-datom",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",1064,"^8",8,"^9",1064,"^:",30,"^44",true,"^Q",["^R",["^45",["^R",[["^6@","~$d"]]]]]],"^44",true,"^T","~$datascript.db/transact-retract-datom","^6","datascript/db.cljc","^:",30,"^49",["^R",[["^6@","~$d"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",1064,"^4=",["^N",["^6E","^4E"]],"^9",1064,"^4?",2,"^4@",true,"^Q",["^R",["^45",["^R",[["^6@","~$d"]]]]]],"~$ISearch",["^ ","^5",["^ ","^7G",true,"^6","datascript/db.cljc","^:",21,"^8",14,"^7",397,"^7H",["^ ","^66",["^ ","^7O",[["^7Q","^7R"]]]],"^9",397,"^7I",["^ ","~:-search",["^ ","^T","^7O","^Q",["^R",[["^7Q","^7R"]]],"^16",null]],"^7L",["^R",["@interface"]]],"^7G",true,"^T","^7P","^6","datascript/db.cljc","^:",21,"^8",1,"^7",397,"^7H",["^ ","^66",["^ ","^7O",[["^7Q","^7R"]]]],"^7M",null,"^9",397,"^4H","^4E","^7I",["^ ","^;Z",["^ ","^T","^7O","^Q",["^R",[["^7Q","^7R"]]],"^16",null]],"^7N",["^N",["^5G","^67"]],"^7L",["^R",["@interface"]]],"~$ref?",["^ ","^43",null,"^5",["^ ","^6","datascript/db.cljc","^7",778,"^8",27,"^9",778,"^:",31,"^4H","^4I","^Q",["^R",["^45",["^R",[["^46","^52"]]]]]],"^T","~$datascript.db/ref?","^6","datascript/db.cljc","^:",31,"^49",["^R",[["^46","^52"]]],"^4:",null,"^4;",["^R",[null,null]],"^8",1,"^4<",false,"^7",777,"^4=","^4I","^9",778,"^4?",2,"^4H","^4I","^4@",true,"^Q",["^R",["^45",["^R",[["^46","^52"]]]]]]],"^1N",["^ ","^H","^H","^1F","^1F","^1D","^1E","^1E","^1E"],"~:cljs.analyzer/constants",["^ ","^1L",["^N",["~:transact/unique","^5C","^9;","~:tempids","~:schema","^4O","~:attribute","~:transact/cas","~:lookup-ref/unique","^8V","~:db/fn","~:db/index","~:max-tx","~:v","^8U","~:hash","~:aevt","~$a","~:pred","~:key","~:datom","~:else","~:db-after","~:added","~:new","^9:","^V","~:db/valueType","~:avet","^4P","~:db.type/ref","~:value","^:A","~$v","~:operation","~:max-eid","^5E","^:>","^5D","^4F","~:entity-id","^98","^1?","^46","~:db/isComponent","~:db.fn/call","~:db/cas","~:transact/upsert","~:e","^:?","~:eavt","~:db.fn/retractEntity","~:db.unique/value","~:db-before","~:tx-data","~:db/retractEntity","~:db/retract","^:@","~:tx","~:db/current-tx","~:datascript/db","~:db.fn/retractAttribute","~:lookup-ref/syntax","~:db.fn/cas","~:entity-id/syntax","~$e","^9U","~:db/cardinality","~:expected","^5=","~:db/id","~:entity-id/missing","^97","^5:","^8T","^:P","~:error","^99","~:schema/validation","~:db/add","^6A","^4H","~:unfiltered-db","~:mutable","~:rschema","~:tx-meta","~:db.cardinality/many","~:transact/syntax","~:entity","~:conflict","~:db.cardinality/one","^;:","~:a","~:datoms","~:assertion","~:old"]],"~:order",["^8T","^8U","^8V","^V","~$e","^4H","^4F","~$a","~$v","^6A","^:P","^=9","~:v","^<B","~:e","^<V","~:a~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^2:",[["^=G","~:static-fns"],true,["^=G","~:shadow-tweaks"],null,["^=G","~:elide-asserts"],true,["^=G","~:optimize-constants"],null,["^=G","^21"],null,["^=G","~:external-config"],null,["^=G","~:tooling-config"],null,["^=G","~:emit-constants"],null,["^=G","~:load-tests"],false,["^=G","~:form-size-threshold"],null,["^=G","~:infer-externs"],true,["^=G","^23"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^=G","~:fn-invoke-direct"],null,["^=G","~:source-map"],null]]]