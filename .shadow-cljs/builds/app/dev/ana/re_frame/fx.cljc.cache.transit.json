["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('re_frame.router');\ngoog.require('re_frame.db');\ngoog.require('re_frame.interceptor');\ngoog.require('re_frame.interop');\ngoog.require('re_frame.events');\ngoog.require('re_frame.registrar');\ngoog.require('re_frame.loggers');\ngoog.require('re_frame.trace');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__42109 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__42110 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__42110);\n\ntry{try{var seq__42111 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__42112 = null;\nvar count__42113 = (0);\nvar i__42114 = (0);\nwhile(true){\nif((i__42114 < count__42113)){\nvar vec__42121 = chunk__42112.cljs$core$IIndexed$_nth$arity$2(null,i__42114);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42121,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42121,(1),null);\nvar temp__5733__auto___42210 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___42210)){\nvar effect_fn_42211 = temp__5733__auto___42210;\n(effect_fn_42211.cljs$core$IFn$_invoke$arity$1 ? effect_fn_42211.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_42211.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__42212 = seq__42111;\nvar G__42213 = chunk__42112;\nvar G__42214 = count__42113;\nvar G__42215 = (i__42114 + (1));\nseq__42111 = G__42212;\nchunk__42112 = G__42213;\ncount__42113 = G__42214;\ni__42114 = G__42215;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__42111);\nif(temp__5735__auto__){\nvar seq__42111__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__42111__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__42111__$1);\nvar G__42217 = cljs.core.chunk_rest(seq__42111__$1);\nvar G__42218 = c__4609__auto__;\nvar G__42219 = cljs.core.count(c__4609__auto__);\nvar G__42220 = (0);\nseq__42111 = G__42217;\nchunk__42112 = G__42218;\ncount__42113 = G__42219;\ni__42114 = G__42220;\ncontinue;\n} else {\nvar vec__42125 = cljs.core.first(seq__42111__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42125,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42125,(1),null);\nvar temp__5733__auto___42221 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___42221)){\nvar effect_fn_42222 = temp__5733__auto___42221;\n(effect_fn_42222.cljs$core$IFn$_invoke$arity$1 ? effect_fn_42222.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_42222.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__42223 = cljs.core.next(seq__42111__$1);\nvar G__42224 = null;\nvar G__42225 = (0);\nvar G__42226 = (0);\nseq__42111 = G__42223;\nchunk__42112 = G__42224;\ncount__42113 = G__42225;\ni__42114 = G__42226;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__41893__auto___42227 = re_frame.interop.now();\nvar duration__41894__auto___42228 = (end__41893__auto___42227 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__41894__auto___42228,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__41893__auto___42227);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__42109);\n}} else {\nvar seq__42129 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__42130 = null;\nvar count__42131 = (0);\nvar i__42132 = (0);\nwhile(true){\nif((i__42132 < count__42131)){\nvar vec__42147 = chunk__42130.cljs$core$IIndexed$_nth$arity$2(null,i__42132);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42147,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42147,(1),null);\nvar temp__5733__auto___42230 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___42230)){\nvar effect_fn_42231 = temp__5733__auto___42230;\n(effect_fn_42231.cljs$core$IFn$_invoke$arity$1 ? effect_fn_42231.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_42231.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__42232 = seq__42129;\nvar G__42233 = chunk__42130;\nvar G__42234 = count__42131;\nvar G__42235 = (i__42132 + (1));\nseq__42129 = G__42232;\nchunk__42130 = G__42233;\ncount__42131 = G__42234;\ni__42132 = G__42235;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__42129);\nif(temp__5735__auto__){\nvar seq__42129__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__42129__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__42129__$1);\nvar G__42245 = cljs.core.chunk_rest(seq__42129__$1);\nvar G__42246 = c__4609__auto__;\nvar G__42247 = cljs.core.count(c__4609__auto__);\nvar G__42248 = (0);\nseq__42129 = G__42245;\nchunk__42130 = G__42246;\ncount__42131 = G__42247;\ni__42132 = G__42248;\ncontinue;\n} else {\nvar vec__42154 = cljs.core.first(seq__42129__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42154,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__42154,(1),null);\nvar temp__5733__auto___42249 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___42249)){\nvar effect_fn_42250 = temp__5733__auto___42249;\n(effect_fn_42250.cljs$core$IFn$_invoke$arity$1 ? effect_fn_42250.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_42250.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__42251 = cljs.core.next(seq__42129__$1);\nvar G__42252 = null;\nvar G__42253 = (0);\nvar G__42254 = (0);\nseq__42129 = G__42251;\nchunk__42130 = G__42252;\ncount__42131 = G__42253;\ni__42132 = G__42254;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__42157 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__42158 = null;\nvar count__42159 = (0);\nvar i__42160 = (0);\nwhile(true){\nif((i__42160 < count__42159)){\nvar map__42167 = chunk__42158.cljs$core$IIndexed$_nth$arity$2(null,i__42160);\nvar map__42167__$1 = (((((!((map__42167 == null))))?(((((map__42167.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42167.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42167):map__42167);\nvar effect = map__42167__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42167__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42167__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__42157,chunk__42158,count__42159,i__42160,map__42167,map__42167__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__42157,chunk__42158,count__42159,i__42160,map__42167,map__42167__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__42260 = seq__42157;\nvar G__42261 = chunk__42158;\nvar G__42262 = count__42159;\nvar G__42263 = (i__42160 + (1));\nseq__42157 = G__42260;\nchunk__42158 = G__42261;\ncount__42159 = G__42262;\ni__42160 = G__42263;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__42157);\nif(temp__5735__auto__){\nvar seq__42157__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__42157__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__42157__$1);\nvar G__42264 = cljs.core.chunk_rest(seq__42157__$1);\nvar G__42265 = c__4609__auto__;\nvar G__42266 = cljs.core.count(c__4609__auto__);\nvar G__42267 = (0);\nseq__42157 = G__42264;\nchunk__42158 = G__42265;\ncount__42159 = G__42266;\ni__42160 = G__42267;\ncontinue;\n} else {\nvar map__42169 = cljs.core.first(seq__42157__$1);\nvar map__42169__$1 = (((((!((map__42169 == null))))?(((((map__42169.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__42169.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__42169):map__42169);\nvar effect = map__42169__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42169__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__42169__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__42157,chunk__42158,count__42159,i__42160,map__42169,map__42169__$1,effect,ms,dispatch,seq__42157__$1,temp__5735__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__42157,chunk__42158,count__42159,i__42160,map__42169,map__42169__$1,effect,ms,dispatch,seq__42157__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__42268 = cljs.core.next(seq__42157__$1);\nvar G__42269 = null;\nvar G__42270 = (0);\nvar G__42271 = (0);\nseq__42157 = G__42268;\nchunk__42158 = G__42269;\ncount__42159 = G__42270;\ni__42160 = G__42271;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__42174 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__42175 = null;\nvar count__42176 = (0);\nvar i__42177 = (0);\nwhile(true){\nif((i__42177 < count__42176)){\nvar event = chunk__42175.cljs$core$IIndexed$_nth$arity$2(null,i__42177);\nre_frame.router.dispatch(event);\n\n\nvar G__42275 = seq__42174;\nvar G__42276 = chunk__42175;\nvar G__42277 = count__42176;\nvar G__42278 = (i__42177 + (1));\nseq__42174 = G__42275;\nchunk__42175 = G__42276;\ncount__42176 = G__42277;\ni__42177 = G__42278;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__42174);\nif(temp__5735__auto__){\nvar seq__42174__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__42174__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__42174__$1);\nvar G__42279 = cljs.core.chunk_rest(seq__42174__$1);\nvar G__42280 = c__4609__auto__;\nvar G__42281 = cljs.core.count(c__4609__auto__);\nvar G__42282 = (0);\nseq__42174 = G__42279;\nchunk__42175 = G__42280;\ncount__42176 = G__42281;\ni__42177 = G__42282;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__42174__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__42283 = cljs.core.next(seq__42174__$1);\nvar G__42284 = null;\nvar G__42285 = (0);\nvar G__42286 = (0);\nseq__42174 = G__42283;\nchunk__42175 = G__42284;\ncount__42176 = G__42285;\ni__42177 = G__42286;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__42179 = cljs.core.seq(value);\nvar chunk__42180 = null;\nvar count__42181 = (0);\nvar i__42182 = (0);\nwhile(true){\nif((i__42182 < count__42181)){\nvar event = chunk__42180.cljs$core$IIndexed$_nth$arity$2(null,i__42182);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__42291 = seq__42179;\nvar G__42292 = chunk__42180;\nvar G__42293 = count__42181;\nvar G__42294 = (i__42182 + (1));\nseq__42179 = G__42291;\nchunk__42180 = G__42292;\ncount__42181 = G__42293;\ni__42182 = G__42294;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__42179);\nif(temp__5735__auto__){\nvar seq__42179__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__42179__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__42179__$1);\nvar G__42295 = cljs.core.chunk_rest(seq__42179__$1);\nvar G__42296 = c__4609__auto__;\nvar G__42297 = cljs.core.count(c__4609__auto__);\nvar G__42298 = (0);\nseq__42179 = G__42295;\nchunk__42180 = G__42296;\ncount__42181 = G__42297;\ni__42182 = G__42298;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__42179__$1);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__42300 = cljs.core.next(seq__42179__$1);\nvar G__42301 = null;\nvar G__42302 = (0);\nvar G__42303 = (0);\nseq__42179 = G__42300;\nchunk__42180 = G__42301;\ncount__42181 = G__42302;\ni__42182 = G__42303;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn (clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(value) : clear_event.call(null,value));\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^U","~$re-frame.interceptor","^V","~$re-frame.events","^W","~$re-frame.trace","^X","~$re-frame.registrar","^Y","~$cljs.core","^Z","~$goog","^[","~$router","~$re-frame.router","^11","^11","~$trace","^X","~$events","^W","~$re-frame.loggers","^14","~$re-frame.db","^15"],"~:seen",["^N",["~:require"]],"~:uses",["^ ","~$app-db","^15","~$->interceptor","^V","~$set-timeout!","^U","~$get-handler","^Y","~$clear-handlers","^Y","~$register-handler","^Y","~$console","^14"],"~:require-macros",["^ ","^X","^X","^12","^X","^Z","^Z"],"~:form",["~#list",["~$ns","^P",["^1B",["^17",["^11","~:as","^10"],["^15","~:refer",["^19"]],["^V","^1E",["^1:"]],["^U","^1E",["^1;"]],["^W","^1D","^13"],["^Y","^1E",["^1<","^1=","^1>"]],["^14","^1E",["^1?"]],["^X","^1D","^12","~:include-macros",true]]]]],"~:flags",["^ ","^17",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1577462025657,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__42109","re-frame.trace/*current-trace*","*current-trace*-temp-val__42110","re-frame.trace/start-trace","end__41893__auto__","re-frame.interop/now","duration__41894__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","re-frame.trace/run-tracing-callbacks!","seq__42111","cljs.core/seq","chunk__42112","count__42113","i__42114","vec__42121","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__42125","cljs.core/first","cljs.core/next","seq__42129","chunk__42130","count__42131","i__42132","vec__42147","vec__42154","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3","re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","value","seq__42157","chunk__42158","count__42159","i__42160","map__42167","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__42169","ms","dispatch","effect","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__42174","chunk__42175","count__42176","i__42177","event","clear-event","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__42179","chunk__42180","count__42181","i__42182","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1577302212000,1577302212000,1574878438492,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1K","reagent/impl/batching.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^1K","goog/dom/tagname.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.dom.HtmlElement"]]],["^1K","goog/labs/useragent/platform.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.labs.userAgent.util","~$goog.string"]]],["^1K","goog/math/math.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.array","~$goog.asserts"]]],["^1K","goog/html/trustedtypes.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/labs/useragent/browser.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^29","~$goog.object","~$goog.string.internal"]]],["^1K","goog/html/safeurl.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2>"]]],["^1K","re_frame/loggers.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$clojure.set"]]],["^1K","goog/array/array.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<"]]],["^1X","node_modules/prop-types/checkPropTypes.js"],[1577302212000,1577302212000,1549836454000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1K","reagent/impl/util.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^24","^25","^27"]]],["^1K","goog/useragent/useragent.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^29","~$goog.reflect","^2:"]]],["^1K","re_frame/router.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^W","^U","^14","^X"]]],["^1X","node_modules/fbjs/lib/emptyFunction.js"],[1577302212000,1577302212000,1528785402000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","goog/debug/error.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","re_frame/registrar.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U","^14"]]],["^1X","node_modules/fbjs/lib/emptyObject.js"],[1577302212000,1577302212000,1528785402000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","goog/dom/nodetype.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/cjs/scheduler.development.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","reagent/ratom.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^26","^24","~$reagent.impl.batching","^2E"]]],["^1X","node_modules/scheduler/cjs/scheduler.production.min.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/interop.cljs"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1K","goog/string/typedstring.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1X","node_modules/create-react-class/factory.js"],[1577302212000,1577302212000,1574878436132,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1X","node_modules/react/index.js"],[1577302212000,1577302212000,1574878438250,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1K","shadow/js.js"],[1577302212298,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/object/object.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","reagent/impl/template.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^?","^27","~$clojure.walk","^26","~$reagent.impl.component","^2K","^2N","^25","^24"]]],["^1K","goog/dom/asserts.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<"]]],["^1X","node_modules/react-dom/cjs/react-dom.production.min.js"],[1577302212000,1577302212000,1574878438492,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","^2O","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1577302212000,1574477009000],["^1X","node_modules/react/cjs/react.development.js"],[1577302212000,1577302212000,1574878438250,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^2O","~$module$node_modules$prop_types$checkPropTypes"]]],["^1K","re_frame/events.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^15","~$re-frame.utils","^U","^Y","^14","^V","^X"]]],["^1K","goog/math/long.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","^2J"]]],["^1K","goog/html/trustedresourceurl.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","~$goog.html.trustedtypes","^2A","^2B","^2C","^2D"]]],["^1K","goog/string/internal.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1X","node_modules/fbjs/lib/warning.js"],[1577302212000,1577302212000,1528785401000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1K","goog/functions/functions.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/html/safestyle.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","~$goog.html.SafeUrl","^2C","^2D","^2>"]]],["^1K","goog/dom/safe.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^31","^2@","~$goog.html.uncheckedconversions","^2C","^2>"]]],["^1K","reagent/impl/component.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^A","^?","^26","^2K","^2N","^25","^24"]]],["^1K","clojure/walk.cljs"],[1574477009594,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/structs/map.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1K","goog/html/safehtml.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","~$goog.dom.TagName","~$goog.dom.tags","^35","^36","~$goog.html.SafeStyleSheet","^31","^2@","^2[","^2A","^2B","^2G","^2=","^2C","^2D","^2>"]]],["^1K","goog/dom/tags.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2="]]],["^1K","goog/math/size.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/scheduler/index.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1K","goog/labs/useragent/engine.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^29","^2:"]]],["^1K","goog/dom/dom.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3:","~$goog.dom.safe","^34","^37","~$goog.math.Coordinate","~$goog.math.Size","^2=","^2:","~$goog.string.Unicode","~$goog.userAgent"]]],["^1K","goog/asserts/asserts.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.debug.Error","^3@"]]],["^1K","goog/uri/uri.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","^2:","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","goog/i18n/bidi.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1X","node_modules/object-assign/index.js"],[1577302212000,1577302212000,1484580833000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/db.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U"]]],["^1K","goog/fs/url.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/base.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",[]]],["^1K","goog/structs/structs.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2="]]],["^1K","clojure/string.cljs"],[1574477009594,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^2:","~$goog.string.StringBuffer"]]],["^1X","node_modules/create-react-class/index.js"],[1577302212000,1577302212000,1574878436132,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","~$module$node_modules$create_react_class$factory"]]],["^1X","node_modules/react/cjs/react.production.min.js"],[1577302212000,1577302212000,1574878438250,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^2O"]]],["^1K","goog/debug/entrypointregistry.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<"]]],["^1K","goog/string/string.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^3A","^37","^2C","^2>"]]],["^1K","re_frame/interceptor.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^14","^U","^X","^2E"]]],["^1K","goog/reflect/reflect.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/labs/useragent/util.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2>"]]],["^1K","reagent/core.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^?","~$reagent.impl.template","^2V","^26","^2K","^2N","^24","^25","~$reagent.dom"]]],["^1K","goog/string/stringbuffer.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","goog/math/coordinate.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.math"]]],["^1K","goog/iter/iter.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","^33","^3P"]]],["^1K","goog/async/nexttick.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","~$goog.debug.entryPointRegistry","~$goog.dom","^3:","^3A","^33","^34","^2@","^2G","^2H","^2C"]]],["^1K","goog/html/uncheckedconversions.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","^34","^35","^36","^3<","^31","^2@","^2C","^2>"]]],["^1K","re_frame/utils.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^14"]]],["^1K","reagent/dom.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^C","^26","^3N","^2K","^2N","^24","^25"]]],["^1K","re_frame/fx.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]]],["^1X","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1577302212000,1577302212000,1549571078000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","reagent/interop.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/dom/htmlelement.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^["]]],["^1K","cljs/core.cljs"],[1574477009594,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["~$goog.math.Long","~$goog.math.Integer","^2:","^2=","^2;","~$goog.Uri","^3L"]]],["^1K","goog/html/safescript.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","^2[","^2C","^2D"]]],["^1K","reagent/debug.cljs"],[1558312810021,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/html/safestylesheet.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","^36","^2=","^2C","^2D","^2>"]]],["^1K","goog/math/integer.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2J"]]],["^1K","goog/dom/browserfeature.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^3E"]]],["^1X","node_modules/scheduler/tracing.js"],[1577302212000,1577302212000,499162500000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1X","node_modules/react-dom/cjs/react-dom.development.js"],[1577302212000,1577302212000,1574878438492,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21","^?","^2O","^2Y","^2W","~$module$node_modules$scheduler$tracing"]]],["^1K","clojure/set.cljs"],[1574477009594,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z"]]],["^1K","goog/uri/utils.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2;","^2<","^2:"]]],["^1K","goog/string/const.js"],[1573417071133,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^2<","^2D"]]],["^1X","node_modules/fbjs/lib/invariant.js"],[1577302212000,1577302212000,1528785400000,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^21"]]],["^1K","re_frame/trace.cljc"],[1568955171884,"^1Y",["^ ","^1Z",null,"^1[",["^N",[]],"^20",["^[","^Z","^U","^14","^33"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1556141640000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/core.clj",1558312810000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1558312810000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1558312810000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/trace.cljc",1568955171000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/re-frame/re-frame/0.10.9/re-frame-0.10.9.jar!/re_frame/interop.clj",1568955171000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1558312810000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1559507883000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",null,"^M",["^N",[]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^[","^10","^11","^11","^11","^12","^X","^13","^W","^14","^14","^15","^15"],"^16",["^N",["^17"]],"~:shadow/js-access-global",["^N",["Error"]],"^18",["^ ","^19","^15","^1:","^V","^1;","^U","^1<","^Y","^1=","^Y","^1>","^Y","^1?","^14"],"~:defs",["^ ","~$kind",["^ ","^O","~$re-frame.fx/kind","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1B",["~$quote",["^1B",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^O","~$re-frame.fx/reg-fx","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1B",[["^4X","^4Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^1B",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^4V",["^1B",["^4W",["^1B",[["^4X","^4Y"]]]]],"^4Z","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^O","~$re-frame.fx/do-fx","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^4R","~$cljs.core/IMap","^4Z","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^1@",["^ ","^X","^X","^12","^X","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^16",["^N",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^5J","^5E","^5=","^5C","^5K","^5D","^5>","^5@","^5H","^5F","^5G","^5L","^5I","^5B","^5?","^5A","^5<"]],"^1G",["^ ","^17",["^N",[]]],"^1H",["^ "],"^1I",["^[","^Z","^11","^15","^V","^U","^W","^Y","^14","^X"]],"^R","^P","~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^1W",[["^5P","~:static-fns"],true,["^5P","~:shadow-tweaks"],null,["^5P","~:elide-asserts"],false,["^5P","~:optimize-constants"],null,["^5P","^1N"],null,["^5P","~:external-config"],null,["^5P","~:tooling-config"],null,["^5P","~:emit-constants"],null,["^5P","~:load-tests"],null,["^5P","~:form-size-threshold"],null,["^5P","~:infer-externs"],true,["^5P","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5P","~:fn-invoke-direct"],null,["^5P","~:source-map"],"/dev/null"]]]