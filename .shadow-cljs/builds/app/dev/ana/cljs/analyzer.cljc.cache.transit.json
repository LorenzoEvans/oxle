["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ngoog.require('cljs.core');\ngoog.require('goog.string');\ngoog.require('clojure.string');\ngoog.require('clojure.set');\ngoog.require('cljs.env');\ngoog.require('cljs.tagged_literals');\ngoog.require('cljs.tools.reader');\ngoog.require('cljs.tools.reader.reader_types');\ngoog.require('cljs.reader');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__60110 = arguments.length;\nswitch (G__60110) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$lang$maxFixedArity = 5);\n\ncljs.analyzer.CLJ_NIL_SYM = new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null);\ncljs.analyzer.NUMBER_SYM = new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\ncljs.analyzer.STRING_SYM = new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null);\ncljs.analyzer.BOOLEAN_SYM = new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null);\ncljs.analyzer.JS_STAR_SYM = new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null);\ncljs.analyzer.DOT_SYM = new cljs.core.Symbol(null,\".\",\".\",1975675962,null);\ncljs.analyzer.NEW_SYM = new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null);\ncljs.analyzer.CLJS_CORE_SYM = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\ncljs.analyzer.CLJS_CORE_MACROS_SYM = new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null);\ncljs.analyzer.IGNORE_SYM = new cljs.core.Symbol(null,\"ignore\",\"ignore\",8989494,null);\ncljs.analyzer.ANY_SYM = new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\ncljs.analyzer.cljs_seq_QMARK_ = (function cljs$analyzer$cljs_seq_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_map_QMARK_ = (function cljs$analyzer$cljs_map_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (1024))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_vector_QMARK_ = (function cljs$analyzer$cljs_vector_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (16384))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_set_QMARK_ = (function cljs$analyzer$cljs_set_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (4096))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__60116 = arguments.length;\nswitch (G__60116) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\"),\".\",cljs.core.name(ext)].join('');\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__60118 = arguments.length;\nswitch (G__60118) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n}));\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__60119_61090 = cljs.core.seq(deps);\nvar chunk__60120_61091 = null;\nvar count__60121_61092 = (0);\nvar i__60122_61093 = (0);\nwhile(true){\nif((i__60122_61093 < count__60121_61092)){\nvar dep_61095 = chunk__60120_61091.cljs$core$IIndexed$_nth$arity$2(null,i__60122_61093);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_61095,(depth + (1)),state,memo_get_deps);\n\n\nvar G__61096 = seq__60119_61090;\nvar G__61097 = chunk__60120_61091;\nvar G__61098 = count__60121_61092;\nvar G__61099 = (i__60122_61093 + (1));\nseq__60119_61090 = G__61096;\nchunk__60120_61091 = G__61097;\ncount__60121_61092 = G__61098;\ni__60122_61093 = G__61099;\ncontinue;\n} else {\nvar temp__5735__auto___61100 = cljs.core.seq(seq__60119_61090);\nif(temp__5735__auto___61100){\nvar seq__60119_61101__$1 = temp__5735__auto___61100;\nif(cljs.core.chunked_seq_QMARK_(seq__60119_61101__$1)){\nvar c__4609__auto___61102 = cljs.core.chunk_first(seq__60119_61101__$1);\nvar G__61103 = cljs.core.chunk_rest(seq__60119_61101__$1);\nvar G__61104 = c__4609__auto___61102;\nvar G__61105 = cljs.core.count(c__4609__auto___61102);\nvar G__61106 = (0);\nseq__60119_61090 = G__61103;\nchunk__60120_61091 = G__61104;\ncount__60121_61092 = G__61105;\ni__60122_61093 = G__61106;\ncontinue;\n} else {\nvar dep_61107 = cljs.core.first(seq__60119_61101__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_61107,(depth + (1)),state,memo_get_deps);\n\n\nvar G__61108 = cljs.core.next(seq__60119_61101__$1);\nvar G__61109 = null;\nvar G__61110 = (0);\nvar G__61111 = (0);\nseq__60119_61090 = G__61108;\nchunk__60120_61091 = G__61109;\ncount__60121_61092 = G__61110;\ni__60122_61093 = G__61111;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__60123_61112 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__60124_61113 = null;\nvar count__60125_61114 = (0);\nvar i__60126_61115 = (0);\nwhile(true){\nif((i__60126_61115 < count__60125_61114)){\nvar vec__60133_61117 = chunk__60124_61113.cljs$core$IIndexed$_nth$arity$2(null,i__60126_61115);\nvar _LT_depth_61118 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60133_61117,(0),null);\nvar __61119 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60133_61117,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_61118], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__61121 = seq__60123_61112;\nvar G__61122 = chunk__60124_61113;\nvar G__61123 = count__60125_61114;\nvar G__61124 = (i__60126_61115 + (1));\nseq__60123_61112 = G__61121;\nchunk__60124_61113 = G__61122;\ncount__60125_61114 = G__61123;\ni__60126_61115 = G__61124;\ncontinue;\n} else {\nvar temp__5735__auto___61125 = cljs.core.seq(seq__60123_61112);\nif(temp__5735__auto___61125){\nvar seq__60123_61126__$1 = temp__5735__auto___61125;\nif(cljs.core.chunked_seq_QMARK_(seq__60123_61126__$1)){\nvar c__4609__auto___61127 = cljs.core.chunk_first(seq__60123_61126__$1);\nvar G__61128 = cljs.core.chunk_rest(seq__60123_61126__$1);\nvar G__61129 = c__4609__auto___61127;\nvar G__61130 = cljs.core.count(c__4609__auto___61127);\nvar G__61131 = (0);\nseq__60123_61112 = G__61128;\nchunk__60124_61113 = G__61129;\ncount__60125_61114 = G__61130;\ni__60126_61115 = G__61131;\ncontinue;\n} else {\nvar vec__60136_61132 = cljs.core.first(seq__60123_61126__$1);\nvar _LT_depth_61133 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60136_61132,(0),null);\nvar __61134 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60136_61132,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_61133], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__61135 = cljs.core.next(seq__60123_61126__$1);\nvar G__61136 = null;\nvar G__61137 = (0);\nvar G__61138 = (0);\nseq__60123_61112 = G__61135;\nchunk__60124_61113 = G__61136;\ncount__60125_61114 = G__61137;\ni__60126_61115 = G__61138;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4);\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60139 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60139.cljs$core$IFn$_invoke$arity$0 ? fexpr__60139.cljs$core$IFn$_invoke$arity$0() : fexpr__60139.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),(function() { \nvar G__61141__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__61141 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__61142__i = 0, G__61142__a = new Array(arguments.length -  1);\nwhile (G__61142__i < G__61142__a.length) {G__61142__a[G__61142__i] = arguments[G__61142__i + 1]; ++G__61142__i;}\n  _ = new cljs.core.IndexedSeq(G__61142__a,0,null);\n} \nreturn G__61141__delegate.call(this,warning_type,_);};\nG__61141.cljs$lang$maxFixedArity = 1;\nG__61141.cljs$lang$applyTo = (function (arglist__61144){\nvar warning_type = cljs.core.first(arglist__61144);\nvar _ = cljs.core.rest(arglist__61144);\nreturn G__61141__delegate(warning_type,_);\n});\nG__61141.cljs$core$IFn$_invoke$arity$variadic = G__61141__delegate;\nreturn G__61141;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__60140){\nvar map__60141 = p__60140;\nvar map__60141__$1 = (((((!((map__60141 == null))))?(((((map__60141.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60141.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60141):map__60141);\nvar info = map__60141__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60141__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60141__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__60143){\nvar map__60144 = p__60143;\nvar map__60144__$1 = (((((!((map__60144 == null))))?(((((map__60144.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60144.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60144):map__60144);\nvar info = map__60144__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60144__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60144__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),(function (warning_type,info){\nvar overwritten_protocol = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"existing\",\"existing\",-340796094).cljs$core$IFn$_invoke$arity$1(info));\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is overwriting \",(cljs.core.truth_(overwritten_protocol)?\"method\":\"function\"),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),(cljs.core.truth_(overwritten_protocol)?[\" of protocol \",cljs.core.name(overwritten_protocol)].join(''):null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__60146){\nvar map__60147 = p__60146;\nvar map__60147__$1 = (((((!((map__60147 == null))))?(((((map__60147.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60147.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60147):map__60147);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60147__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60147__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__60149 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__60149)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__60149)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__60149)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__60149)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60149)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__60151){\nvar map__60152 = p__60151;\nvar map__60152__$1 = (((((!((map__60152 == null))))?(((((map__60152.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60152.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60152):map__60152);\nvar info = map__60152__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60152__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60150_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__60150_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__60150_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__60150_SHARP_),\"$\"].join('');\n} else {\nreturn p1__60150_SHARP_;\n}\n}),clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__60154){\nvar map__60155 = p__60154;\nvar map__60155__$1 = (((((!((map__60155 == null))))?(((((map__60155.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60155.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60155):map__60155);\nvar info = map__60155__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60155__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60155__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__60157){\nvar map__60158 = p__60157;\nvar map__60158__$1 = (((((!((map__60158 == null))))?(((((map__60158.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60158.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60158):map__60158);\nvar info = map__60158__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60158__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__60160){\nvar map__60161 = p__60160;\nvar map__60161__$1 = (((((!((map__60161 == null))))?(((((map__60161.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60161.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60161):map__60161);\nvar info = map__60161__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60161__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60161__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__60163){\nvar map__60164 = p__60163;\nvar map__60164__$1 = (((((!((map__60164 == null))))?(((((map__60164.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60164.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60164):map__60164);\nvar info = map__60164__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60164__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60164__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__60166){\nvar map__60167 = p__60166;\nvar map__60167__$1 = (((((!((map__60167 == null))))?(((((map__60167.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60167.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60167):map__60167);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60167__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60167__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__60169){\nvar map__60170 = p__60169;\nvar map__60170__$1 = (((((!((map__60170 == null))))?(((((map__60170.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60170.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60170):map__60170);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60170__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__60172){\nvar map__60173 = p__60172;\nvar map__60173__$1 = (((((!((map__60173 == null))))?(((((map__60173.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60173.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60173):map__60173);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60173__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60173__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60173__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60173__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__60175 = warn_type;\nvar G__60175__$1 = (((G__60175 instanceof cljs.core.Keyword))?G__60175.fqn:null);\nswitch (G__60175__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60175__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5735__auto__ = (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra) : cljs.analyzer.error_message.call(null,warning_type,extra));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nvar _STAR_print_fn_STAR__orig_val__60176 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__60177 = cljs.core._STAR_print_err_fn_STAR_;\n(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__60177);\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__60178 = env;\nvar G__60179 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__60178,G__60179) : cljs.analyzer.message.call(null,G__60178,G__60179));\n})()], 0));\n}finally {(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__60176);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__61172 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__61173 = (n__$1 - (1));\nret = G__61172;\nn__$1 = G__61173;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,(function (p1__60180_SHARP_){\nreturn cljs.analyzer.hex_format(p1__60180_SHARP_,(4));\n})));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,name__$1].join(''));\n});\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__60182 = arguments.length;\nswitch (G__60182) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__60183 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60183,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),(function (p__60184){\nvar map__60185 = p__60184;\nvar map__60185__$1 = (((((!((map__60185 == null))))?(((((map__60185.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60185.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60185):map__60185);\nvar constants = map__60185__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__60185__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__60185__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__60187 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__60187,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__60187;\n}\n}));\n} else {\nreturn G__60183;\n}\n}));\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer60188 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer60188 = (function (meta60189){\nthis.meta60189 = meta60189;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(cljs.analyzer.t_cljs$analyzer60188.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_60190,meta60189__$1){\nvar self__ = this;\nvar _60190__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer60188(meta60189__$1));\n}));\n\n(cljs.analyzer.t_cljs$analyzer60188.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_60190){\nvar self__ = this;\nvar _60190__$1 = this;\nreturn self__.meta60189;\n}));\n\n(cljs.analyzer.t_cljs$analyzer60188.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n}));\n\n(cljs.analyzer.t_cljs$analyzer60188.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta60189\",\"meta60189\",-1307025524,null)], null);\n}));\n\n(cljs.analyzer.t_cljs$analyzer60188.cljs$lang$type = true);\n\n(cljs.analyzer.t_cljs$analyzer60188.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer60188\");\n\n(cljs.analyzer.t_cljs$analyzer60188.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"cljs.analyzer/t_cljs$analyzer60188\");\n}));\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer60188.\n */\ncljs.analyzer.__GT_t_cljs$analyzer60188 = (function cljs$analyzer$__GT_t_cljs$analyzer60188(meta60189){\nreturn (new cljs.analyzer.t_cljs$analyzer60188(meta60189));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer60188(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__60192 = arguments.length;\nswitch (G__60192) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n}));\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5737__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5737__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5737__auto__;\nreturn ns;\n}\n}));\n\n(cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__60194 = arguments.length;\nswitch (G__60194) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n}));\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4185__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__60195){\nvar vec__60196 = p__60195;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60196,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60196,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60199){\nvar vec__60200 = p__60199;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60200,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60200,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2);\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__60045__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__60045__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0());\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60203_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__60203_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__60203_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n}),cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__60045__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = null);\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__60206){\nvar map__60207 = p__60206;\nvar map__60207__$1 = (((((!((map__60207 == null))))?(((((map__60207.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60207.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60207):map__60207);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60207__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60207__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60207__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__60210 = arguments.length;\nswitch (G__60210) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__60211 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__60211,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__60211;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__60212 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__60213 = null;\nvar count__60214 = (0);\nvar i__60215 = (0);\nwhile(true){\nif((i__60215 < count__60214)){\nvar handler = chunk__60213.cljs$core$IIndexed$_nth$arity$2(null,i__60215);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__61207 = seq__60212;\nvar G__61208 = chunk__60213;\nvar G__61209 = count__60214;\nvar G__61210 = (i__60215 + (1));\nseq__60212 = G__61207;\nchunk__60213 = G__61208;\ncount__60214 = G__61209;\ni__60215 = G__61210;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60212);\nif(temp__5735__auto__){\nvar seq__60212__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60212__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60212__$1);\nvar G__61211 = cljs.core.chunk_rest(seq__60212__$1);\nvar G__61212 = c__4609__auto__;\nvar G__61213 = cljs.core.count(c__4609__auto__);\nvar G__61214 = (0);\nseq__60212 = G__61211;\nchunk__60213 = G__61212;\ncount__60214 = G__61213;\ni__60215 = G__61214;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__60212__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__61215 = cljs.core.next(seq__60212__$1);\nvar G__61216 = null;\nvar G__61217 = (0);\nvar G__61218 = (0);\nseq__60212 = G__61215;\nchunk__60213 = G__61216;\ncount__60214 = G__61217;\ni__60215 = G__61218;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__60216_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__60216_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__60218 = arguments.length;\nswitch (G__60218) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n}));\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n}));\n\n(cljs.analyzer.error_data.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__60220 = arguments.length;\nswitch (G__60220) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n}));\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n}));\n\n(cljs.analyzer.error.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__60222 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__60223 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__60222,G__60223) : cljs.analyzer.get_expander.call(null,G__60222,G__60223));\n})() == null)))], null));\n});\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__60224){\nvar vec__60225 = p__60224;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60225,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60225,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nvar G__60228 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null));\nvar G__60229 = module;\nreturn (cljs.analyzer.js_module_exists_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_module_exists_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(G__60228,G__60229) : cljs.analyzer.js_module_exists_QMARK__STAR_.call(null,G__60228,G__60229));\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$(require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module)))));\n}catch (e60230){var _ = e60230;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module))));\n});\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__60232 = arguments.length;\nswitch (G__60232) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__60234 = arguments.length;\nswitch (G__60234) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__60236 = arguments.length;\nswitch (G__60236) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nif((function (){var or__4185__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar temp__5737__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5737__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})()){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn false;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4185__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__60241 = arguments.length;\nswitch (G__60241) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___61267 = arguments.length;\nvar i__4790__auto___61268 = (0);\nwhile(true){\nif((i__4790__auto___61268 < len__4789__auto___61267)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___61268]));\n\nvar G__61269 = (i__4790__auto___61268 + (1));\ni__4790__auto___61268 = G__61269;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4811__auto__);\n\n}\n});\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n}));\n\n/** @this {Function} */\n(cljs.analyzer.add_types.cljs$lang$applyTo = (function (seq60238){\nvar G__60239 = cljs.core.first(seq60238);\nvar seq60238__$1 = cljs.core.next(seq60238);\nvar G__60240 = cljs.core.first(seq60238__$1);\nvar seq60238__$2 = cljs.core.next(seq60238__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__60239,G__60240,seq60238__$2);\n}));\n\n(cljs.analyzer.add_types.cljs$lang$maxFixedArity = (2));\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__60243 = arguments.length;\nswitch (G__60243) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5737__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5737__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5737__auto__;\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5737__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5737__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__60244 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60244,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60244,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta)))?new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta):false))){\nvar or__4185__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__61286 = cljs.core.next(pre);\nvar G__61287 = externs_SINGLEQUOTE_;\nvar G__61288 = top;\npre = G__61286;\nexterns = G__61287;\ntop = G__61288;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__60248 = arguments.length;\nswitch (G__60248) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4185__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4185__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__60250 = arguments.length;\nswitch (G__60250) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5735__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar vec__60251 = temp__5735__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60251,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60251,(1),null);\nvar me = vec__60251;\nvar tag = (function (){var G__60254 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__60254) : tag_type.call(null,G__60254));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns))?(function (){var and__4174__auto__ = (function (){var fexpr__60258 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__60258.cljs$core$IFn$_invoke$arity$1 ? fexpr__60258.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__60258.call(null,sym));\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4174__auto__;\n}\n})():false))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60259 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60259.cljs$core$IFn$_invoke$arity$0 ? fexpr__60259.cljs$core$IFn$_invoke$arity$0() : fexpr__60259.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),(function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns))?(function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.not(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4174__auto__;\n}\n})():false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nif(cljs.analyzer.required_QMARK_(ns__$1,env)){\nvar or__4185__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__60260 = module_type;\nvar G__60260__$1 = (((G__60260 instanceof cljs.core.Keyword))?G__60260.fqn:null);\nswitch (G__60260__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4185__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60260__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__60262 = arguments.length;\nswitch (G__60262) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5735__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ret_tag = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4185__auto__ = (function (){var and__4174__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4174__auto__;\n}\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__60263_61375 = env;\nvar G__60264_61376 = full_ns;\nvar G__60265_61377 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__60263_61375,G__60264_61376,G__60265_61377) : confirm.call(null,G__60263_61375,G__60264_61376,G__60265_61377));\n} else {\n}\n\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym,full_ns,current_ns));\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5737__auto__ = cljs.analyzer.handle_symbol_local(prefix,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,prefix));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),prefix);\nif((temp__5737__auto____$1 == null)){\nvar temp__5737__auto____$2 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),prefix);\nif((temp__5737__auto____$2 == null)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",prefix))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix):cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),suffix)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),prefix], null)], 0));\n} else {\nvar info = temp__5737__auto____$2;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([info,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n}\n} else {\nvar full_ns = temp__5737__auto____$1;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),suffix)], null);\n}\n} else {\nvar lb__$1 = temp__5737__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(lb__$1)),\".\",suffix].join(''))], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym,full_ns,current_ns));\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn (cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns) : cljs.analyzer.resolve_STAR_.call(null,env,sym__$1,full_ns,current_ns));\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__61395 = env;\nvar G__61396 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__61397 = confirm;\nenv = G__61395;\nsym = G__61396;\nconfirm = G__61397;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nif((!((confirm == null)))){\nvar G__60266_61400 = env;\nvar G__60267_61401 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__60268_61402 = sym;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__60266_61400,G__60267_61401,G__60268_61402) : confirm.call(null,G__60266_61400,G__60267_61401,G__60268_61402));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__60269 = cljs.core.seq(names);\nvar chunk__60270 = null;\nvar count__60271 = (0);\nvar i__60272 = (0);\nwhile(true){\nif((i__60272 < count__60271)){\nvar name = chunk__60270.cljs$core$IIndexed$_nth$arity$2(null,i__60272);\nvar env_61419__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_61420 = cljs.analyzer.resolve_existing_var(env_61419__$1,name);\nif(cljs.core.truth_((function (){var and__4174__auto__ = ev_61420;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_61420));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_61419__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_61420,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_61420)], null));\n} else {\n}\n\n\nvar G__61424 = seq__60269;\nvar G__61425 = chunk__60270;\nvar G__61426 = count__60271;\nvar G__61427 = (i__60272 + (1));\nseq__60269 = G__61424;\nchunk__60270 = G__61425;\ncount__60271 = G__61426;\ni__60272 = G__61427;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60269);\nif(temp__5735__auto__){\nvar seq__60269__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60269__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60269__$1);\nvar G__61428 = cljs.core.chunk_rest(seq__60269__$1);\nvar G__61429 = c__4609__auto__;\nvar G__61430 = cljs.core.count(c__4609__auto__);\nvar G__61431 = (0);\nseq__60269 = G__61428;\nchunk__60270 = G__61429;\ncount__60271 = G__61430;\ni__60272 = G__61431;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__60269__$1);\nvar env_61433__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_61434 = cljs.analyzer.resolve_existing_var(env_61433__$1,name);\nif(cljs.core.truth_((function (){var and__4174__auto__ = ev_61434;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_61434));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_61433__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_61434,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_61434)], null));\n} else {\n}\n\n\nvar G__61440 = cljs.core.next(seq__60269__$1);\nvar G__61441 = null;\nvar G__61442 = (0);\nvar G__61443 = (0);\nseq__60269 = G__61440;\nchunk__60270 = G__61441;\ncount__60271 = G__61442;\ni__60272 = G__61443;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some((function (m){\nvar and__4174__auto__ = (function (){var or__4185__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn m;\n} else {\nreturn and__4174__auto__;\n}\n}),methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5737__auto____$1 == null)){\nvar temp__5737__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5737__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5737__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5737__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null),\"null\",new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),\"null\"], null), null);\ncljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),\"null\",new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\"], null), null);\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__60273){\nvar map__60274 = p__60273;\nvar map__60274__$1 = (((((!((map__60274 == null))))?(((((map__60274.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60274.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60274):map__60274);\nvar expr = map__60274__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60274__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__60276 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__60276__$1 = (((((!((map__60276 == null))))?(((((map__60276.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60276.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60276):map__60276);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60276__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60276__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__60278 = env;\nvar G__60279 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60278,G__60279) : cljs.analyzer.infer_tag.call(null,G__60278,G__60279));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((!((form == null)))) && ((!(form === false))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__60280 = env;\nvar G__60281 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60280,G__60281) : cljs.analyzer.infer_tag.call(null,G__60280,G__60281));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__60282){\nvar map__60283 = p__60282;\nvar map__60283__$1 = (((((!((map__60283 == null))))?(((((map__60283.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60283.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60283):map__60283);\nvar e = map__60283__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60283__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60283__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5737__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5737__auto__ == null)){\nvar map__60285 = f;\nvar map__60285__$1 = (((((!((map__60285 == null))))?(((((map__60285.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60285.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60285):map__60285);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60285__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5737__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5737__auto____$1 == null)){\nreturn cljs.analyzer.ANY_SYM;\n} else {\nvar ret_tag = temp__5737__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5737__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5737__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5737__auto__ == null)){\nvar G__60287 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__60287__$1 = (((G__60287 instanceof cljs.core.Keyword))?G__60287.fqn:null);\nswitch (G__60287__$1) {\ncase \"recur\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__60288 = env;\nvar G__60289 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60288,G__60289) : cljs.analyzer.infer_tag.call(null,G__60288,G__60289));\n\nbreak;\ncase \"loop\":\nvar G__60290 = env;\nvar G__60291 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60290,G__60291) : cljs.analyzer.infer_tag.call(null,G__60290,G__60291));\n\nbreak;\ncase \"do\":\nvar G__60292 = env;\nvar G__60293 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60292,G__60293) : cljs.analyzer.infer_tag.call(null,G__60292,G__60293));\n\nbreak;\ncase \"fn-method\":\nvar G__60294 = env;\nvar G__60295 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60294,G__60295) : cljs.analyzer.infer_tag.call(null,G__60294,G__60295));\n\nbreak;\ncase \"def\":\nvar G__60296 = env;\nvar G__60297 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60296,G__60297) : cljs.analyzer.infer_tag.call(null,G__60296,G__60297));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__60298 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__60298)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__60298)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__60299 = env;\nvar G__60300 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60299,G__60300) : cljs.analyzer.infer_tag.call(null,G__60299,G__60300));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nvar G__60301 = env;\nvar G__60302 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__60301,G__60302) : cljs.analyzer.infer_tag.call(null,G__60301,G__60302));\n} else {\nvar init = temp__5737__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60303 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60303.cljs$core$IFn$_invoke$arity$0 ? fexpr__60303.cljs$core$IFn$_invoke$arity$0() : fexpr__60303.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),(function() { \nvar G__61497__delegate = function (op,rest){\nreturn op;\n};\nvar G__61497 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__61498__i = 0, G__61498__a = new Array(arguments.length -  1);\nwhile (G__61498__i < G__61498__a.length) {G__61498__a[G__61498__i] = arguments[G__61498__i + 1]; ++G__61498__i;}\n  rest = new cljs.core.IndexedSeq(G__61498__a,0,null);\n} \nreturn G__61497__delegate.call(this,op,rest);};\nG__61497.cljs$lang$maxFixedArity = 1;\nG__61497.cljs$lang$applyTo = (function (arglist__61500){\nvar op = cljs.core.first(arglist__61500);\nvar rest = cljs.core.rest(arglist__61500);\nreturn G__61497__delegate(op,rest);\n});\nG__61497.cljs$core$IFn$_invoke$arity$variadic = G__61497__delegate;\nreturn G__61497;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__60307 = arguments.length;\nswitch (G__60307) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n}));\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60304_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__60304_SHARP_),null,(1),null)),(2),null));\n}),uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60305_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__60305_SHARP_),null,(1),null)),(2),null));\n}),ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n}));\n\n(cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__60308 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__60309 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__60309);\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5739__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__60310 = expr_env;\nvar G__60311 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60310,G__60311) : cljs.analyzer.analyze.call(null,G__60310,G__60311));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__60308);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__60312,_,___$1){\nvar vec__60313 = p__60312;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60313,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60313,(1),null);\nvar form = vec__60313;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-ident?\",\"cljs.core/qualified-ident?\",-1863492566,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"simple-ident?\",\"cljs.core/simple-ident?\",1674885558,null),new cljs.core.Symbol(\"cljs.core\",\"simple-keyword?\",\"cljs.core/simple-keyword?\",39474330,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__60316 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60317 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60317);\n\ntry{var G__60318 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60319 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60318,G__60319) : cljs.analyzer.analyze.call(null,G__60318,G__60319));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60316);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5735__auto__ = (function (){var G__60320 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__60320) : cljs.analyzer.predicate__GT_tag.call(null,G__60320));\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n *   instance? on a local, as in (instance? UUID x) or implements? on a local, as\n *   in (implements? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((3) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.specials,cljs.core.first(test))))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__60321 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60322 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60322);\n\ntry{var G__60323 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60324 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60323,G__60324) : cljs.analyzer.analyze.call(null,G__60323,G__60324));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60321);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__60326 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__60325 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__60325.cljs$core$IFn$_invoke$arity$1 ? fexpr__60325.cljs$core$IFn$_invoke$arity$1(G__60326) : fexpr__60325.call(null,G__60326));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__60327 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60328 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60328);\n\ntry{var G__60329 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60330 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60329,G__60330) : cljs.analyzer.analyze.call(null,G__60329,G__60330));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60327);\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type)))?(((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a local.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif(cljs.core.truth_((((test instanceof cljs.core.Symbol))?(((cljs.core.namespace(test) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),test], null)):false):false))){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__60331 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60332 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60332);\n\ntry{var G__60333 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60334 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60333,G__60334) : cljs.analyzer.analyze.call(null,G__60333,G__60334));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60331);\n}})();\nvar temp__5735__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__60335 = (function (){var or__4185__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60335,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60335,(1),null);\nvar G__60338 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__60338,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__60338;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__60339,name,_){\nvar vec__60340 = p__60339;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60340,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60340,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60340,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60340,(3),null);\nvar form = vec__60340;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__60343 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60344 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60344);\n\ntry{var G__60345 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60346 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60345,G__60346) : cljs.analyzer.analyze.call(null,G__60345,G__60346));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60343);\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__60347 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__60348 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__60348);\n\ntry{var G__60349 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__60350 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60349,G__60350) : cljs.analyzer.analyze.call(null,G__60349,G__60350));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__60347);\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__60351 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__60352 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__60352);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__60351);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__60355,name,_){\nvar vec__60356 = p__60355;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60356,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60356,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60356,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60356,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60356,(4),null);\nvar form = vec__60356;\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* must switch on symbol\",\"\\n\",\"(symbol? sym)\"].join('')));\n}\n\nif(cljs.core.every_QMARK_(cljs.core.vector_QMARK_,tests)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be grouped in vectors\",\"\\n\",\"(every? vector? tests)\"].join('')));\n}\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__60359 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60360 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60360);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60359);\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60353_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n}),p1__60353_SHARP_);\n}),tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60354_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__60354_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__60354_SHARP_));\n}),thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n}),tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n}),tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\nif(cljs.core.every_QMARK_((function (t){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(t));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(t))){\nvar G__60364 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(t);\nvar fexpr__60363 = cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_,cljs.core.string_QMARK_,cljs.core.char_QMARK_);\nreturn (fexpr__60363.cljs$core$IFn$_invoke$arity$1 ? fexpr__60363.cljs$core$IFn$_invoke$arity$1(G__60364) : fexpr__60363.call(null,G__60364));\n} else {\nreturn false;\n}\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,tests__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be numbers, strings, or constants\",\"\\n\",\"(every? (fn [t] (or (-> t :info :const) (and (= :const (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))\"].join('')));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__60365,name,_){\nvar vec__60366 = p__60365;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60366,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60366,(1),null);\nvar form = vec__60366;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__60369 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60370 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60370);\n\ntry{var G__60371 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60372 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60371,G__60372) : cljs.analyzer.analyze.call(null,G__60371,G__60372));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60369);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__60377,name,_){\nvar vec__60378 = p__60377;\nvar seq__60379 = cljs.core.seq(vec__60378);\nvar first__60380 = cljs.core.first(seq__60379);\nvar seq__60379__$1 = cljs.core.next(seq__60379);\nvar ___$1 = first__60380;\nvar body = seq__60379__$1;\nvar form = vec__60378;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),(function (p1__60373_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__60373_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__60373_SHARP_;\n}\n}));\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__60374_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__60374_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n}));\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,(function (p1__60375_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__60375_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n}));\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__60376_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__60376_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n}));\nvar map__60381 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__60386 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__60387 = cljs.core.seq(vec__60386);\nvar first__60388 = cljs.core.first(seq__60387);\nvar seq__60387__$1 = cljs.core.next(seq__60387);\nvar form__$1 = first__60388;\nvar forms_STAR_ = seq__60387__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__60389 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__60389__$1 = (((G__60389 instanceof cljs.core.Keyword))?G__60389.fqn:null);\nswitch (G__60389__$1) {\ncase \"start\":\nif(cljs.core.truth_((catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null,form__$1)))){\nvar G__61622 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__61622;\ncontinue;\n} else {\nif(cljs.core.truth_((finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null,form__$1)))){\nvar G__61623 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__61623;\ncontinue;\n} else {\nvar G__61624 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__61624;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_((default_QMARK_.cljs$core$IFn$_invoke$arity$1 ? default_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : default_QMARK_.call(null,form__$1)))){\nvar G__61629 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__61629;\ncontinue;\n} else {\nif(cljs.core.truth_((catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null,form__$1)))){\nvar G__61631 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__61631;\ncontinue;\n} else {\nif(cljs.core.truth_((finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null,form__$1)))){\nvar G__61632 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__61632;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__61634 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__61634;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60389__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__60381__$1 = (((((!((map__60381 == null))))?(((((map__60381.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60381.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60381):map__60381);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60381__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60381__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60381__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60381__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__60391 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60392 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60392);\n\ntry{var G__60393 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__60394 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60393,G__60394) : cljs.analyzer.analyze.call(null,G__60393,G__60394));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60391);\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4185__auto__ = cljs.core.seq(cblocks);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5733__auto__ = dblock;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar vec__60395 = temp__5733__auto__;\nvar seq__60396 = cljs.core.seq(vec__60395);\nvar first__60397 = cljs.core.first(seq__60396);\nvar seq__60396__$1 = cljs.core.next(seq__60396);\nvar ___$2 = first__60397;\nvar first__60397__$1 = cljs.core.first(seq__60396__$1);\nvar seq__60396__$2 = cljs.core.next(seq__60396__$1);\nvar ___$3 = first__60397__$1;\nvar first__60397__$2 = cljs.core.first(seq__60396__$2);\nvar seq__60396__$3 = cljs.core.next(seq__60396__$2);\nvar name__$1 = first__60397__$2;\nvar cb = seq__60396__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__60398){\nvar vec__60399 = p__60398;\nvar seq__60400 = cljs.core.seq(vec__60399);\nvar first__60401 = cljs.core.first(seq__60400);\nvar seq__60400__$1 = cljs.core.next(seq__60400);\nvar ___$2 = first__60401;\nvar first__60401__$1 = cljs.core.first(seq__60400__$1);\nvar seq__60400__$2 = cljs.core.next(seq__60400__$1);\nvar type = first__60401__$1;\nvar first__60401__$2 = cljs.core.first(seq__60400__$2);\nvar seq__60400__$3 = cljs.core.next(seq__60400__$2);\nvar name__$1 = first__60401__$2;\nvar cb = seq__60400__$3;\nif(cljs.core.truth_(name__$1)){\nif(cljs.core.not(cljs.core.namespace(name__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Can't qualify symbol in catch\",\"\\n\",\"(not (namespace name))\"].join('')));\n}\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__60402 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60403 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60403);\n\ntry{var G__60404 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__60405 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60404,G__60405) : cljs.analyzer.analyze.call(null,G__60404,G__60405));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60402);\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__60406 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60407 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60407);\n\ntry{var G__60408 = (cljs.core.truth_((function (){var or__4185__auto__ = e;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__60409 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60408,G__60409) : cljs.analyzer.analyze.call(null,G__60408,G__60409));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60406);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__60410){\nvar map__60411 = p__60410;\nvar map__60411__$1 = (((((!((map__60411 == null))))?(((((map__60411.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60411.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60411):map__60411);\nvar ast = map__60411__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60411__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4185__auto__ = (function (){var fexpr__60414 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__60414.cljs$core$IFn$_invoke$arity$1 ? fexpr__60414.cljs$core$IFn$_invoke$arity$1(op) : fexpr__60414.call(null,op));\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = (function (){var fexpr__60417 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__60417.cljs$core$IFn$_invoke$arity$1 ? fexpr__60417.cljs$core$IFn$_invoke$arity$1(op) : fexpr__60417.call(null,op));\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4174__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__60418){\nvar map__60419 = p__60418;\nvar map__60419__$1 = (((((!((map__60419 == null))))?(((((map__60419.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60419.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60419):map__60419);\nvar e = map__60419__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60419__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__60421 = op;\nvar G__60421__$1 = (((G__60421 instanceof cljs.core.Keyword))?G__60421.fqn:null);\nswitch (G__60421__$1) {\ncase \"quote\":\nvar G__60422 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__60422) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__60422));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60421__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((((s).length) > (2))) && (clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__61721 = null;\nvar G__61721__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__61721__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__61721__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__61721 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__61721__2.call(this,___$2,sym);\ncase 3:\nreturn G__61721__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__61721__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__61721.cljs$core$IFn$_invoke$arity$2 = G__61721__2;\nG__61721.cljs$core$IFn$_invoke$arity$3 = G__61721__3;\nG__61721.cljs$core$IFn$_invoke$arity$4 = G__61721__4;\nreturn G__61721;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4174__auto__ = sym_ns;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4174__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5739__auto___61732 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5739__auto___61732 == null)){\n} else {\nvar doc_61733 = temp__5739__auto___61732;\nif(typeof doc_61733 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5739__auto___61734 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___61734 == null)){\n} else {\nvar v_61735 = temp__5739__auto___61734;\nif(cljs.core.truth_(((cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_61735)))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta)))?(function (){var and__4174__auto__ = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4174__auto__;\n}\n})():false):false):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_61735)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_61735);\nif(cljs.core.truth_(and__4174__auto__)){\nvar and__4174__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_61735);\nif(cljs.core.truth_(and__4174__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_61735),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4174__auto____$1;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_61735)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__60424 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60425 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60425);\n\ntry{var _STAR_allow_ns_STAR__orig_val__60426 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__60427 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__60427);\n\ntry{var G__60428 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60429 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__60430 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__60428,G__60429,G__60430) : cljs.analyzer.analyze.call(null,G__60428,G__60429,G__60430));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__60426);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60424);\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = tag;\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(cljs.core.truth_(tag)?tag:(cljs.core.truth_(dynamic)?cljs.analyzer.ANY_SYM:new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr)\n)));\nvar export_as = (function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar export_val = temp__5735__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5739__auto___61743 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___61743 == null)){\n} else {\nvar v_61746 = temp__5739__auto___61743;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_61746) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__60431 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__60431,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__60431;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),(function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n}))], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__60432 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__60433 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__60433);\n\ntry{var G__60434 = env__$1;\nvar G__60435 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60434,G__60435) : cljs.analyzer.analyze.call(null,G__60434,G__60435));\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__60432);\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar protocol_symbol = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60423_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__60423_SHARP_)));\n}),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5737__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5737__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4174__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__60436 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__60437 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60436,G__60437) : cljs.analyzer.analyze.call(null,G__60436,G__60437));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5739__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__60438 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60439 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60438,G__60439) : cljs.analyzer.analyze.call(null,G__60438,G__60439));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__60440,p__60441){\nvar vec__60442 = p__60440;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60442,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60442,(1),null);\nvar vec__60445 = p__60441;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60445,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60445,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__60448 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60449 = recur_frames;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60449);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60448);\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__60450 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60450,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60453_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__60453_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__60455,name,_){\nvar vec__60456 = p__60455;\nvar seq__60457 = cljs.core.seq(vec__60456);\nvar first__60458 = cljs.core.first(seq__60457);\nvar seq__60457__$1 = cljs.core.next(seq__60457);\nvar ___$1 = first__60458;\nvar args = seq__60457__$1;\nvar form = vec__60456;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__60459 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60459,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60459,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((function (){var G__60462 = env__$1;\nif((cljs.core.count(meths__$1) > (1))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__60462,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\n} else {\nreturn G__60462;\n}\n})(),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60454_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__60463 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__60464 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__60464);\n\ntry{return cljs.analyzer.analyze_fn_method(menv,locals__$1,p1__60454_SHARP_,type,(name__$1 == null));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__60463);\n}}),meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__60465 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__60466 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__60466);\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv,locals__$2,type,meths__$1);\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__60465);\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246).cljs$core$IFn$_invoke$arity$1(env__$1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_61907 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_61908 = (((cljs.core.count(variadic_methods_61907) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_61907,(0)))):(0));\nvar param_counts_61909 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_61907))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_61908 === (0))) || ((variadic_params_61908 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_61909),param_counts_61909)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__60467,name,_){\nvar vec__60468 = p__60467;\nvar seq__60469 = cljs.core.seq(vec__60468);\nvar first__60470 = cljs.core.first(seq__60469);\nvar seq__60469__$1 = cljs.core.next(seq__60469);\nvar ___$1 = first__60470;\nvar first__60470__$1 = cljs.core.first(seq__60469__$1);\nvar seq__60469__$2 = cljs.core.next(seq__60469__$1);\nvar bindings = first__60470__$1;\nvar exprs = seq__60469__$2;\nvar form = vec__60468;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__60471 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__60477,n){\nvar vec__60478 = p__60477;\nvar map__60481 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60478,(0),null);\nvar map__60481__$1 = (((((!((map__60481 == null))))?(((((map__60481.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60481.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60481):map__60481);\nvar env__$1 = map__60481__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60481__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60478,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__60483 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60484 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60484);\n\ntry{var G__60485 = env__$1;\nvar G__60486 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60485,G__60486) : cljs.analyzer.analyze.call(null,G__60485,G__60486));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60483);\n}})();\nvar be = (function (){var G__60487 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__60487,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__60487;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60471,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60471,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__60474 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__60488,p__60489){\nvar vec__60490 = p__60488;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60490,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60490,(1),null);\nvar map__60493 = p__60489;\nvar map__60493__$1 = (((((!((map__60493 == null))))?(((((map__60493.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60493.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60493):map__60493);\nvar be = map__60493__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60493__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60493__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__60495 = env__$1;\nvar G__60496 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60495,G__60496) : cljs.analyzer.analyze.call(null,G__60495,G__60496));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60474,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60474,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__60497 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__60498 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60497,G__60498) : cljs.analyzer.analyze.call(null,G__60497,G__60498));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60499_SHARP_){\nvar G__60500 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__60501 = p1__60499_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60500,G__60501) : cljs.analyzer.analyze.call(null,G__60500,G__60501));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__60502 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60503 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60503);\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60502);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__60504,_,___$1){\nvar vec__60505 = p__60504;\nvar seq__60506 = cljs.core.seq(vec__60505);\nvar first__60507 = cljs.core.first(seq__60506);\nvar seq__60506__$1 = cljs.core.next(seq__60506);\nvar ___$2 = first__60507;\nvar exprs = seq__60506__$1;\nvar form = vec__60505;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__60508 = env;\nvar G__60509 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60508,G__60509) : cljs.analyzer.analyze.call(null,G__60508,G__60509));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__60510 = ret_env;\nvar G__60511 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60510,G__60511) : cljs.analyzer.analyze.call(null,G__60510,G__60511));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__60512 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__60513 = loop_lets;\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__60513);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__60512);\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(bindings__$1);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__60522 = temp__5737__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60522,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60522,(1),null);\nif(cljs.core.truth_((function (){var or__4185__auto__ = (!((cljs.core.namespace(name) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar G__60527 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nvar G__60528 = \".\";\nreturn goog.string.contains(G__60527,G__60528);\n}\n})())){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__60522,name,init,temp__5737__auto__){\nreturn (function (p1__60514_SHARP_){\nreturn cljs.core.select_keys(p1__60514_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__60522,name,init,temp__5737__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar G__62002 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$1);\nvar G__62003 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$1);\nvar G__62004 = cljs.core.next(bindings__$1);\nbes = G__62002;\nenv = G__62003;\nbindings__$1 = G__62004;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__60529 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60530 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60530);\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60529);\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__60531 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__60532 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60531,G__60532) : cljs.analyzer.analyze.call(null,G__60531,G__60532));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__60533 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__60534 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60535 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__60536 = loop_lets;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60535);\n\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__60536);\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__60534);\n\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60533);\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__60537,is_loop,widened_tags){\nwhile(true){\nvar vec__60538 = p__60537;\nvar seq__60539 = cljs.core.seq(vec__60538);\nvar first__60540 = cljs.core.first(seq__60539);\nvar seq__60539__$1 = cljs.core.next(seq__60539);\nvar _ = first__60540;\nvar first__60540__$1 = cljs.core.first(seq__60539__$1);\nvar seq__60539__$2 = cljs.core.next(seq__60539__$1);\nvar bindings = first__60540__$1;\nvar exprs = seq__60539__$2;\nvar form = vec__60538;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__60537,is_loop,widened_tags,context,op,vec__60538,seq__60539,first__60540,seq__60539__$1,_,first__60540__$1,seq__60539__$2,bindings,exprs,form){\nreturn (function (p__60544,widened_tag){\nvar vec__60545 = p__60544;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60545,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60545,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__60537,is_loop,widened_tags,context,op,vec__60538,seq__60539,first__60540,seq__60539__$1,_,first__60540__$1,seq__60539__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__60541 = cljs.analyzer.analyze_let_bindings((function (){var G__60548 = encl_env;\nif(is_loop === true){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__60548,new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),true);\n} else {\nreturn G__60548;\n}\n})(),bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60541,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60541,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4174__auto__ = is_loop;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__60549 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__60550 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\n(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__60550);\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__60549);\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4174__auto__ = is_loop;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4174__auto__;\n}\n})())){\nvar G__62029 = encl_env;\nvar G__62030 = form;\nvar G__62031 = is_loop;\nvar G__62032 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__62029;\np__60537 = G__62030;\nis_loop = G__62031;\nwidened_tags = G__62032;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__60552,_,___$1){\nvar vec__60553 = p__60552;\nvar seq__60554 = cljs.core.seq(vec__60553);\nvar first__60555 = cljs.core.first(seq__60554);\nvar seq__60554__$1 = cljs.core.next(seq__60554);\nvar ___$2 = first__60555;\nvar exprs = seq__60554__$1;\nvar form = vec__60553;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4174__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__60556 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__60556);\n} else {\nreturn G__60556;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__60557 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60558 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60558);\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60551_SHARP_){\nvar G__60559 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__60560 = p1__60551_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60559,G__60560) : cljs.analyzer.analyze.call(null,G__60559,G__60560));\n}),exprs__$1));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60557);\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),(function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tag,expr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724).cljs$core$IFn$_invoke$arity$1(expr))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n}\n}),tags,exprs__$2);\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__60561 = (function (){var G__60562 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__60563 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60562,G__60563) : cljs.analyzer.analyze.call(null,G__60562,G__60563));\n})();\nvar map__60561__$1 = (((((!((map__60561 == null))))?(((((map__60561.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60561.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60561):map__60561);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60561__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__60565,___$1,___$2){\nvar vec__60566 = p__60565;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60566,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60566,(1),null);\nvar form = vec__60566;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__60570,___$1,___$2){\nvar vec__60571 = p__60570;\nvar seq__60572 = cljs.core.seq(vec__60571);\nvar first__60573 = cljs.core.first(seq__60572);\nvar seq__60572__$1 = cljs.core.next(seq__60572);\nvar ___$3 = first__60573;\nvar first__60573__$1 = cljs.core.first(seq__60572__$1);\nvar seq__60572__$2 = cljs.core.next(seq__60572__$1);\nvar ctor = first__60573__$1;\nvar args = seq__60572__$2;\nvar form = vec__60571;\nvar _STAR_recur_frames_STAR__orig_val__60574 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60575 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60575);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__60577 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__60576 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__60576.cljs$core$IFn$_invoke$arity$1 ? fexpr__60576.cljs$core$IFn$_invoke$arity$1(G__60577) : fexpr__60576.call(null,G__60577));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60569_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__60569_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__60569_SHARP_));\n}),args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4185__auto__ = (function (){var fexpr__60579 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__60579.cljs$core$IFn$_invoke$arity$1 ? fexpr__60579.cljs$core$IFn$_invoke$arity$1(name) : fexpr__60579.call(null,name));\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60574);\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__60580,___$1,___$2){\nvar vec__60581 = p__60580;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60581,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60581,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60581,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60581,(3),null);\nvar form = vec__60581;\nvar vec__60584 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60584,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60584,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__60587 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60588 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60588);\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__60589 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__60590 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__60590);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1));\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_62053 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__60591 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__60591) : target__$1.call(null,G__60591));\n})());\nif(cljs.core.truth_((function (){var or__4185__auto__ = (local_62053 == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_62053);\nif(cljs.core.truth_(and__4174__auto__)){\nvar or__4185__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_62053);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nvar or__4185__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_62053);\nif(cljs.core.truth_(or__4185__auto____$2)){\nreturn or__4185__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_62053);\n}\n}\n} else {\nreturn and__4174__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_62054 = (function (){var G__60592 = target__$1;\nif((G__60592 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__60592);\n}\n})();\nvar meta_62055 = cljs.core.meta(sym_62054);\nvar temp__5735__auto___62056 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr)))?new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_62055):false);\nif(cljs.core.truth_(temp__5735__auto___62056)){\nvar info_62057 = temp__5735__auto___62056;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_62054,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_62057,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__60594 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__60594.cljs$core$IFn$_invoke$arity$1 ? fexpr__60594.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__60594.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__60589);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60587);\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5737__auto__ = cljs.core.find(js_index,cljs.core.name(dep));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar vec__60595 = temp__5737__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60595,(0),null);\nvar map__60598 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60595,(1),null);\nvar map__60598__$1 = (((((!((map__60598 == null))))?(((((map__60598.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60598.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60598):map__60598);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60598__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__60602 = arguments.length;\nswitch (G__60602) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__60603 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__60604 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\n(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__60604);\n\ntry{if(cljs.core.every_QMARK_((function (p1__60600_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_,p1__60600_SHARP_)));\n}),deps)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Circular dependency detected, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" -> \",cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)),cljs.core.some(cljs.analyzer._STAR_cljs_dep_set_STAR_,deps)))))].join(''),\"\\n\",\"(every? (fn* [p1__60600#] (not (contains? *cljs-dep-set* p1__60600#))) deps)\"].join('')));\n}\n\nvar seq__60605 = cljs.core.seq(deps);\nvar chunk__60606 = null;\nvar count__60607 = (0);\nvar i__60608 = (0);\nwhile(true){\nif((i__60608 < count__60607)){\nvar dep = chunk__60606.cljs$core$IIndexed$_nth$arity$2(null,i__60608);\nif(cljs.core.truth_((function (){var or__4185__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_62060 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_62060,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60613 = new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812);\nvar G__60614 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60613,G__60614) : cljs.analyzer.error_message.call(null,G__60613,G__60614));\n})());\n}\n}\n\n\nvar G__62062 = seq__60605;\nvar G__62063 = chunk__60606;\nvar G__62064 = count__60607;\nvar G__62065 = (i__60608 + (1));\nseq__60605 = G__62062;\nchunk__60606 = G__62063;\ncount__60607 = G__62064;\ni__60608 = G__62065;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60605);\nif(temp__5735__auto__){\nvar seq__60605__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60605__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60605__$1);\nvar G__62066 = cljs.core.chunk_rest(seq__60605__$1);\nvar G__62067 = c__4609__auto__;\nvar G__62068 = cljs.core.count(c__4609__auto__);\nvar G__62069 = (0);\nseq__60605 = G__62066;\nchunk__60606 = G__62067;\ncount__60607 = G__62068;\ni__60608 = G__62069;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__60605__$1);\nif(cljs.core.truth_((function (){var or__4185__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_62070 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_62070,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60615 = new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812);\nvar G__60616 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60615,G__60616) : cljs.analyzer.error_message.call(null,G__60615,G__60616));\n})());\n}\n}\n\n\nvar G__62071 = cljs.core.next(seq__60605__$1);\nvar G__62072 = null;\nvar G__62073 = (0);\nvar G__62074 = (0);\nseq__60605 = G__62071;\nchunk__60606 = G__62072;\ncount__60607 = G__62073;\ni__60608 = G__62074;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__60603);\n}}));\n\n(cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60617){\nvar vec__60618 = p__60617;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60618,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60618,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n}),uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60621){\nvar vec__60622 = p__60621;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60622,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60622,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n}),renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60625){\nvar vec__60626 = p__60625;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60626,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60626,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n}),use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60629){\nvar vec__60630 = p__60629;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60630,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60630,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n}),use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__60633){\nvar vec__60634 = p__60633;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60634,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60634,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__60637 = cljs.core.seq(uses);\nvar chunk__60638 = null;\nvar count__60639 = (0);\nvar i__60640 = (0);\nwhile(true){\nif((i__60640 < count__60639)){\nvar vec__60651 = chunk__60638.cljs$core$IIndexed$_nth$arity$2(null,i__60640);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60651,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60651,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60654 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__60655 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60654,G__60655) : cljs.analyzer.error_message.call(null,G__60654,G__60655));\n})());\n} else {\n}\n\n\nvar G__62075 = seq__60637;\nvar G__62076 = chunk__60638;\nvar G__62077 = count__60639;\nvar G__62078 = (i__60640 + (1));\nseq__60637 = G__62075;\nchunk__60638 = G__62076;\ncount__60639 = G__62077;\ni__60640 = G__62078;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60637);\nif(temp__5735__auto__){\nvar seq__60637__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60637__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60637__$1);\nvar G__62079 = cljs.core.chunk_rest(seq__60637__$1);\nvar G__62080 = c__4609__auto__;\nvar G__62081 = cljs.core.count(c__4609__auto__);\nvar G__62082 = (0);\nseq__60637 = G__62079;\nchunk__60638 = G__62080;\ncount__60639 = G__62081;\ni__60640 = G__62082;\ncontinue;\n} else {\nvar vec__60656 = cljs.core.first(seq__60637__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60656,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60656,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60659 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__60660 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60659,G__60660) : cljs.analyzer.error_message.call(null,G__60659,G__60660));\n})());\n} else {\n}\n\n\nvar G__62083 = cljs.core.next(seq__60637__$1);\nvar G__62084 = null;\nvar G__62085 = (0);\nvar G__62086 = (0);\nseq__60637 = G__62083;\nchunk__60638 = G__62084;\ncount__60639 = G__62085;\ni__60640 = G__62086;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__60662 = arguments.length;\nswitch (G__60662) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__60663_62088 = cljs.core.seq(use_macros);\nvar chunk__60664_62089 = null;\nvar count__60665_62090 = (0);\nvar i__60666_62091 = (0);\nwhile(true){\nif((i__60666_62091 < count__60665_62090)){\nvar vec__60677_62092 = chunk__60664_62089.cljs$core$IIndexed$_nth$arity$2(null,i__60666_62091);\nvar sym_62093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60677_62092,(0),null);\nvar lib_62094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60677_62092,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_62094,sym_62093))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60680 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__60681 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_62094,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_62093], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60680,G__60681) : cljs.analyzer.error_message.call(null,G__60680,G__60681));\n})());\n} else {\n}\n\n\nvar G__62095 = seq__60663_62088;\nvar G__62096 = chunk__60664_62089;\nvar G__62097 = count__60665_62090;\nvar G__62098 = (i__60666_62091 + (1));\nseq__60663_62088 = G__62095;\nchunk__60664_62089 = G__62096;\ncount__60665_62090 = G__62097;\ni__60666_62091 = G__62098;\ncontinue;\n} else {\nvar temp__5735__auto___62099 = cljs.core.seq(seq__60663_62088);\nif(temp__5735__auto___62099){\nvar seq__60663_62100__$1 = temp__5735__auto___62099;\nif(cljs.core.chunked_seq_QMARK_(seq__60663_62100__$1)){\nvar c__4609__auto___62101 = cljs.core.chunk_first(seq__60663_62100__$1);\nvar G__62102 = cljs.core.chunk_rest(seq__60663_62100__$1);\nvar G__62103 = c__4609__auto___62101;\nvar G__62104 = cljs.core.count(c__4609__auto___62101);\nvar G__62105 = (0);\nseq__60663_62088 = G__62102;\nchunk__60664_62089 = G__62103;\ncount__60665_62090 = G__62104;\ni__60666_62091 = G__62105;\ncontinue;\n} else {\nvar vec__60682_62106 = cljs.core.first(seq__60663_62100__$1);\nvar sym_62107 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60682_62106,(0),null);\nvar lib_62108 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60682_62106,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_62108,sym_62107))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,(function (){var G__60685 = new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137);\nvar G__60686 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_62108,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_62107], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60685,G__60686) : cljs.analyzer.error_message.call(null,G__60685,G__60686));\n})());\n} else {\n}\n\n\nvar G__62109 = cljs.core.next(seq__60663_62100__$1);\nvar G__62110 = null;\nvar G__62111 = (0);\nvar G__62112 = (0);\nseq__60663_62088 = G__62109;\nchunk__60664_62089 = G__62110;\ncount__60665_62090 = G__62111;\ni__60666_62091 = G__62112;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__60690,env){\nvar map__60691 = p__60690;\nvar map__60691__$1 = (((((!((map__60691 == null))))?(((((map__60691.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60691.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60691):map__60691);\nvar ast = map__60691__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60691__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60691__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60691__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = (cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.seq(uses);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = (function (p1__60687_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__60687_SHARP_,cljs.core.keys(missing_uses));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),(function (p1__60688_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__60688_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__60689_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__60689_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__60696,env){\nvar map__60697 = p__60696;\nvar map__60697__$1 = (((((!((map__60697 == null))))?(((((map__60697.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60697.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60697):map__60697);\nvar ast = map__60697__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60697__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60697__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = (cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.seq(renames);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = (function (p1__60693_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__60693_SHARP_,cljs.core.keys(missing_renames));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),(function (p1__60694_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__60694_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__60695_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__60695_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((function (){var G__60703 = new cljs.core.Keyword(null,\"as\",\"as\",1148689641);\nvar G__60704 = (0);\nreturn (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(G__60703,G__60704) : fs.call(null,G__60703,G__60704));\n})() <= (1))) && (((function (){var G__60705 = new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\nvar G__60706 = (0);\nreturn (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(G__60705,G__60706) : fs.call(null,G__60705,G__60706));\n})() <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__60708){\nvar vec__60709 = p__60708;\nvar seq__60710 = cljs.core.seq(vec__60709);\nvar first__60711 = cljs.core.first(seq__60710);\nvar seq__60710__$1 = cljs.core.next(seq__60710);\nvar k = first__60711;\nvar filters = seq__60710__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__60709,seq__60710,first__60711,seq__60710__$1,k,filters){\nreturn (function (p1__60707_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__60707_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__60709,seq__60710,first__60711,seq__60710__$1,k,filters))\n,refs)))))))){\nvar G__62113 = fs;\nvar G__62114 = ret;\nvar G__62115 = true;\nfs = G__62113;\nret = G__62114;\nerr = G__62115;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__62116 = cljs.core.nnext(fs);\nvar G__62117 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__62118 = false;\nfs = G__62116;\nret = G__62117;\nerr = G__62118;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__62119 = cljs.core.nnext(fs);\nvar G__62120 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__62121 = false;\nfs = G__62119;\nret = G__62120;\nerr = G__62121;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__62122 = fs;\nvar G__62123 = ret;\nvar G__62124 = true;\nfs = G__62122;\nret = G__62123;\nerr = G__62124;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__60713){\nvar vec__60714 = p__60713;\nvar seq__60715 = cljs.core.seq(vec__60714);\nvar first__60716 = cljs.core.first(seq__60715);\nvar seq__60715__$1 = cljs.core.next(seq__60715);\nvar lib = first__60716;\nvar filters = seq__60715__$1;\nvar spec = vec__60714;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__60714,seq__60715,first__60716,seq__60715__$1,lib,filters,spec){\nreturn (function (p1__60712_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__60712_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__60714,seq__60715,first__60716,seq__60715__$1,lib,filters,spec))\n,refs)))))))){\nvar G__62125 = fs;\nvar G__62126 = ret;\nvar G__62127 = true;\nfs = G__62125;\nret = G__62126;\nerr = G__62127;\ncontinue;\n} else {\nvar G__62128 = cljs.core.nnext(fs);\nvar G__62129 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__62130 = false;\nfs = G__62128;\nret = G__62129;\nerr = G__62130;\ncontinue;\n}\n}\n} else {\nvar G__62131 = fs;\nvar G__62132 = ret;\nvar G__62133 = true;\nfs = G__62131;\nret = G__62132;\nerr = G__62133;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__62134 = fs;\nvar G__62135 = ret;\nvar G__62136 = true;\nfs = G__62134;\nret = G__62135;\nerr = G__62136;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__62137 = env;\nvar G__62138 = macros_QMARK_;\nvar G__62139 = deps;\nvar G__62140 = aliases;\nvar G__62141 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__62137;\nmacros_QMARK_ = G__62138;\ndeps = G__62139;\naliases = G__62140;\nspec = G__62141;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__60717 = spec;\nvar seq__60718 = cljs.core.seq(vec__60717);\nvar first__60719 = cljs.core.first(seq__60718);\nvar seq__60718__$1 = cljs.core.next(seq__60718);\nvar lib = first__60719;\nvar opts = seq__60718__$1;\nvar vec__60720 = (function (){var temp__5737__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5737__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60720,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60720,(1),null);\nvar map__60723 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__60723__$1 = (((((!((map__60723 == null))))?(((((map__60723.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60723.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60723):map__60723);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__60723__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60723__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60723__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__60724 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60724,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60724,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60724,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_62142 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__62143 = (function (){var fexpr__60728 = alias_type_62142.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__60728.cljs$core$IFn$_invoke$arity$1 ? fexpr__60728.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__60728.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__62143 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__62143)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_62142], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__60717,seq__60718,first__60719,seq__60718__$1,lib,opts,vec__60720,lib__$1,js_module_provides,map__60723,map__60723__$1,alias,referred,renamed,referred_without_renamed,vec__60724,rk,uk,renk){\nreturn (function (m,p__60729){\nvar vec__60730 = p__60729;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60730,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60730,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__60717,seq__60718,first__60719,seq__60718__$1,lib,opts,vec__60720,lib__$1,js_module_provides,map__60723,map__60723__$1,alias,referred,renamed,referred_without_renamed,vec__60724,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60733_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__60733_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__60733_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]));\nvar seq__60734_62144 = cljs.core.seq(import_map);\nvar chunk__60735_62145 = null;\nvar count__60736_62146 = (0);\nvar i__60737_62147 = (0);\nwhile(true){\nif((i__60737_62147 < count__60736_62146)){\nvar vec__60744_62148 = chunk__60735_62145.cljs$core$IIndexed$_nth$arity$2(null,i__60737_62147);\nvar __62149 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60744_62148,(0),null);\nvar spec_62150__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60744_62148,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_62150__$1);\n\n\nvar G__62151 = seq__60734_62144;\nvar G__62152 = chunk__60735_62145;\nvar G__62153 = count__60736_62146;\nvar G__62154 = (i__60737_62147 + (1));\nseq__60734_62144 = G__62151;\nchunk__60735_62145 = G__62152;\ncount__60736_62146 = G__62153;\ni__60737_62147 = G__62154;\ncontinue;\n} else {\nvar temp__5735__auto___62155 = cljs.core.seq(seq__60734_62144);\nif(temp__5735__auto___62155){\nvar seq__60734_62156__$1 = temp__5735__auto___62155;\nif(cljs.core.chunked_seq_QMARK_(seq__60734_62156__$1)){\nvar c__4609__auto___62157 = cljs.core.chunk_first(seq__60734_62156__$1);\nvar G__62158 = cljs.core.chunk_rest(seq__60734_62156__$1);\nvar G__62159 = c__4609__auto___62157;\nvar G__62160 = cljs.core.count(c__4609__auto___62157);\nvar G__62161 = (0);\nseq__60734_62144 = G__62158;\nchunk__60735_62145 = G__62159;\ncount__60736_62146 = G__62160;\ni__60737_62147 = G__62161;\ncontinue;\n} else {\nvar vec__60747_62162 = cljs.core.first(seq__60734_62156__$1);\nvar __62163 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60747_62162,(0),null);\nvar spec_62164__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60747_62162,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_62164__$1);\n\n\nvar G__62165 = cljs.core.next(seq__60734_62156__$1);\nvar G__62166 = null;\nvar G__62167 = (0);\nvar G__62168 = (0);\nseq__60734_62144 = G__62165;\nchunk__60735_62145 = G__62166;\ncount__60736_62146 = G__62167;\ni__60737_62147 = G__62168;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__60750 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__60750__$1 = (((((!((map__60750 == null))))?(((((map__60750.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60750.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60750):map__60750);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60750__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60750__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4185__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__60753 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__60754){\nvar vec__60755 = p__60754;\nvar seq__60756 = cljs.core.seq(vec__60755);\nvar first__60757 = cljs.core.first(seq__60756);\nvar seq__60756__$1 = cljs.core.next(seq__60756);\nvar k = first__60757;\nvar specs = seq__60756__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__60753__$1 = (((((!((map__60753 == null))))?(((((map__60753.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60753.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60753):map__60753);\nvar indexed = map__60753__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60753__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = (function (pred,spec){\nwhile(true){\nif(cljs.core.not(((cljs.core.sequential_QMARK_(spec))?cljs.core.some(pred,spec):false))){\nreturn spec;\n} else {\nvar vec__60759 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60759,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60759,(1),null);\nvar G__62169 = pred;\nvar G__62170 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__62169;\nspec = G__62170;\ncontinue;\n}\nbreak;\n}\n});\nvar replace_refer_macros = (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n}),spec);\n}\n});\nvar reload_spec_QMARK_ = (function (p1__60752_SHARP_){\nvar fexpr__60762 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__60762.cljs$core$IFn$_invoke$arity$1 ? fexpr__60762.cljs$core$IFn$_invoke$arity$1(p1__60752_SHARP_) : fexpr__60762.call(null,p1__60752_SHARP_));\n});\nvar to_macro_specs = (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (x){\nvar or__4185__auto__ = ((cljs.core.sequential_QMARK_(x))?cljs.core.some(sugar_keys,x):false);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n}),specs));\n});\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5737__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5737__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5737__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__60763 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60763,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60763,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n}),cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__60766 = cljs.core.seq(to_check);\nvar chunk__60767 = null;\nvar count__60768 = (0);\nvar i__60769 = (0);\nwhile(true){\nif((i__60769 < count__60768)){\nvar vec__60776 = chunk__60767.cljs$core$IIndexed$_nth$arity$2(null,i__60769);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60776,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60776,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__62171 = seq__60766;\nvar G__62172 = chunk__60767;\nvar G__62173 = count__60768;\nvar G__62174 = (i__60769 + (1));\nseq__60766 = G__62171;\nchunk__60767 = G__62172;\ncount__60768 = G__62173;\ni__60769 = G__62174;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60766);\nif(temp__5735__auto__){\nvar seq__60766__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60766__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60766__$1);\nvar G__62175 = cljs.core.chunk_rest(seq__60766__$1);\nvar G__62176 = c__4609__auto__;\nvar G__62177 = cljs.core.count(c__4609__auto__);\nvar G__62178 = (0);\nseq__60766 = G__62175;\nchunk__60767 = G__62176;\ncount__60768 = G__62177;\ni__60769 = G__62178;\ncontinue;\n} else {\nvar vec__60779 = cljs.core.first(seq__60766__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60779,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60779,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__62179 = cljs.core.next(seq__60766__$1);\nvar G__62180 = null;\nvar G__62181 = (0);\nvar G__62182 = (0);\nseq__60766 = G__62179;\nchunk__60767 = G__62180;\ncount__60768 = G__62181;\ni__60769 = G__62182;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__60784,___$1,opts){\nvar vec__60785 = p__60784;\nvar seq__60786 = cljs.core.seq(vec__60785);\nvar first__60787 = cljs.core.first(seq__60786);\nvar seq__60786__$1 = cljs.core.next(seq__60786);\nvar ___$2 = first__60787;\nvar first__60787__$1 = cljs.core.first(seq__60786__$1);\nvar seq__60786__$2 = cljs.core.next(seq__60786__$1);\nvar name = first__60787__$1;\nvar args = seq__60786__$2;\nvar form = vec__60785;\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__60788 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__60788);\n} else {\nreturn G__60788;\n}\n})();\nvar segments_62183 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_62183))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_62184 = cljs.core.some(cljs.analyzer.js_reserved,segments_62183);\nif((!((segment_62184 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_62183);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__60789 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__60789__$1 = (((((!((map__60789 == null))))?(((((map__60789.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60789.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60789):map__60789);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60789__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60789__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__60795){\nvar vec__60796 = p__60795;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60796,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60796,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__60790 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__60799){\nvar vec__60800 = p__60799;\nvar seq__60801 = cljs.core.seq(vec__60800);\nvar first__60802 = cljs.core.first(seq__60801);\nvar seq__60801__$1 = cljs.core.next(seq__60801);\nvar k = first__60802;\nvar libs = seq__60801__$1;\nvar libspec = vec__60800;\nif(cljs.core.truth_((function (){var fexpr__60803 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__60803.cljs$core$IFn$_invoke$arity$1 ? fexpr__60803.cljs$core$IFn$_invoke$arity$1(k) : fexpr__60803.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__60804 = cljs.core.deref(valid_forms);\nreturn (fexpr__60804.cljs$core$IFn$_invoke$arity$1 ? fexpr__60804.cljs$core$IFn$_invoke$arity$1(k) : fexpr__60804.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5735__auto___62185 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__60782_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__60782_SHARP_));\n}),libs));\nif(temp__5735__auto___62185){\nvar xs_62186 = temp__5735__auto___62185;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_62186),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60783_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__60783_SHARP_));\n}),xs_62186)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__60805){\nvar vec__60806 = p__60805;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60806,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args__$2));\nvar map__60790__$1 = (((((!((map__60790 == null))))?(((((map__60790.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60790.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60790):map__60790);\nvar params = map__60790__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60790__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__60791 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(((cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)).length) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__60810){\nvar vec__60811 = p__60810;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60811,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60811,(1),null);\nvar G__60814 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__60814,k,v);\n} else {\nreturn G__60814;\n}\n}),cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60791,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60791,(1),null);\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2);\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4185__auto__ = docstring;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__60815 = ns_info;\nvar G__60815__$1 = (cljs.core.truth_((function (){var G__60817 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__60816 = cljs.core.deref(reload);\nreturn (fexpr__60816.cljs$core$IFn$_invoke$arity$1 ? fexpr__60816.cljs$core$IFn$_invoke$arity$1(G__60817) : fexpr__60816.call(null,G__60817));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60815,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__60819 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__60818 = cljs.core.deref(reload);\nreturn (fexpr__60818.cljs$core$IFn$_invoke$arity$1 ? fexpr__60818.cljs$core$IFn$_invoke$arity$1(G__60819) : fexpr__60818.call(null,G__60819));\n})(),true]));\n})):G__60815);\nif(cljs.core.truth_((function (){var G__60821 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__60820 = cljs.core.deref(reload);\nreturn (fexpr__60820.cljs$core$IFn$_invoke$arity$1 ? fexpr__60820.cljs$core$IFn$_invoke$arity$1(G__60821) : fexpr__60820.call(null,G__60821));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60815__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__60823 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__60822 = cljs.core.deref(reload);\nreturn (fexpr__60822.cljs$core$IFn$_invoke$arity$1 ? fexpr__60822.cljs$core$IFn$_invoke$arity$1(G__60823) : fexpr__60822.call(null,G__60823));\n})(),true]));\n}));\n} else {\nreturn G__60815__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__60824 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__60825 = null;\nvar count__60826 = (0);\nvar i__60827 = (0);\nwhile(true){\nif((i__60827 < count__60826)){\nvar k = chunk__60825.cljs$core$IIndexed$_nth$arity$2(null,i__60827);\nvar old_aliases_62187 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_62188 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___62189 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_62188)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__60824,chunk__60825,count__60826,i__60827,old_aliases_62187,new_aliases_62188,k,ns_name){\nreturn (function (p__60836){\nvar vec__60837 = p__60836;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60837,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60837,(1),null);\nvar entry = vec__60837;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_62188,k__$1))));\n});})(seq__60824,chunk__60825,count__60826,i__60827,old_aliases_62187,new_aliases_62188,k,ns_name))\n,old_aliases_62187)));\nif((temp__5739__auto___62189 == null)){\n} else {\nvar alias_62190 = temp__5739__auto___62189;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_62190),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_62187,alias_62190))].join(''));\n}\n\n\nvar G__62191 = seq__60824;\nvar G__62192 = chunk__60825;\nvar G__62193 = count__60826;\nvar G__62194 = (i__60827 + (1));\nseq__60824 = G__62191;\nchunk__60825 = G__62192;\ncount__60826 = G__62193;\ni__60827 = G__62194;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__60824);\nif(temp__5735__auto__){\nvar seq__60824__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__60824__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__60824__$1);\nvar G__62195 = cljs.core.chunk_rest(seq__60824__$1);\nvar G__62196 = c__4609__auto__;\nvar G__62197 = cljs.core.count(c__4609__auto__);\nvar G__62198 = (0);\nseq__60824 = G__62195;\nchunk__60825 = G__62196;\ncount__60826 = G__62197;\ni__60827 = G__62198;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__60824__$1);\nvar old_aliases_62199 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_62200 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___62201 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_62200)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__60824,chunk__60825,count__60826,i__60827,old_aliases_62199,new_aliases_62200,k,seq__60824__$1,temp__5735__auto__,ns_name){\nreturn (function (p__60840){\nvar vec__60841 = p__60840;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60841,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60841,(1),null);\nvar entry = vec__60841;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_62200,k__$1))));\n});})(seq__60824,chunk__60825,count__60826,i__60827,old_aliases_62199,new_aliases_62200,k,seq__60824__$1,temp__5735__auto__,ns_name))\n,old_aliases_62199)));\nif((temp__5739__auto___62201 == null)){\n} else {\nvar alias_62202 = temp__5739__auto___62201;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_62202),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_62199,alias_62202))].join(''));\n}\n\n\nvar G__62203 = cljs.core.next(seq__60824__$1);\nvar G__62204 = null;\nvar G__62205 = (0);\nvar G__62206 = (0);\nseq__60824 = G__62203;\nchunk__60825 = G__62204;\ncount__60826 = G__62205;\ni__60827 = G__62206;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__60847,___$1,opts){\nvar vec__60848 = p__60847;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60848,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60848,(1),null);\nvar form = vec__60848;\nvar temp__5735__auto___62207 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__60844_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__60844_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__60844_SHARP_))));\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5735__auto___62207)){\nvar not_quoted_62208 = temp__5735__auto___62207;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_62208)].join(''));\n} else {\n}\n\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__60851 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__60851__$1 = (((((!((map__60851 == null))))?(((((map__60851.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60851.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60851):map__60851);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60851__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60851__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__60854){\nvar vec__60855 = p__60854;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60855,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60855,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__60852 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__60858){\nvar vec__60859 = p__60858;\nvar seq__60860 = cljs.core.seq(vec__60859);\nvar first__60861 = cljs.core.first(seq__60860);\nvar seq__60860__$1 = cljs.core.next(seq__60860);\nvar k = first__60861;\nvar libs = seq__60860__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5739__auto___62209 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__60845_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__60845_SHARP_));\n}),libs));\nif((temp__5739__auto___62209 == null)){\n} else {\nvar xs_62210 = temp__5739__auto___62209;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_62210),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60846_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__60846_SHARP_));\n}),xs_62210)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__60862){\nvar vec__60863 = p__60862;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60863,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args));\nvar map__60852__$1 = (((((!((map__60852 == null))))?(((((map__60852.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60852.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60852):map__60852);\nvar params = map__60852__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60852__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name);\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\nvar ns_info = (function (){var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null));\nif((cljs.core.count(ns_info_SINGLEQUOTE_) > (0))){\nvar merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info_SINGLEQUOTE_,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),excludes], null),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(ns_info_SINGLEQUOTE_,merge_keys),cljs.core.select_keys(require_info,merge_keys)], 0))], 0));\n} else {\nreturn require_info;\n}\n})();\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__60867 = require_info;\nvar G__60867__$1 = (cljs.core.truth_((function (){var G__60869 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__60868 = cljs.core.deref(reload);\nreturn (fexpr__60868.cljs$core$IFn$_invoke$arity$1 ? fexpr__60868.cljs$core$IFn$_invoke$arity$1(G__60869) : fexpr__60868.call(null,G__60869));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60867,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__60871 = new cljs.core.Keyword(null,\"use\",\"use\",-1846382424);\nvar fexpr__60870 = cljs.core.deref(reload);\nreturn (fexpr__60870.cljs$core$IFn$_invoke$arity$1 ? fexpr__60870.cljs$core$IFn$_invoke$arity$1(G__60871) : fexpr__60870.call(null,G__60871));\n})(),true]));\n})):G__60867);\nif(cljs.core.truth_((function (){var G__60873 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__60872 = cljs.core.deref(reload);\nreturn (fexpr__60872.cljs$core$IFn$_invoke$arity$1 ? fexpr__60872.cljs$core$IFn$_invoke$arity$1(G__60873) : fexpr__60872.call(null,G__60873));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__60867__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var G__60875 = new cljs.core.Keyword(null,\"require\",\"require\",-468001333);\nvar fexpr__60874 = cljs.core.deref(reload);\nreturn (fexpr__60874.cljs$core$IFn$_invoke$arity$1 ? fexpr__60874.cljs$core$IFn$_invoke$arity$1(G__60875) : fexpr__60874.call(null,G__60875));\n})(),true]));\n}));\n} else {\nreturn G__60867__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__60876){\nvar vec__60877 = p__60876;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60877,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60877,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60877,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60877,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60877,(4),null);\nvar form = vec__60877;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n}),cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),(function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4185__auto__ = m;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n}));\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__60880 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__60881 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60880,G__60881) : cljs.analyzer.analyze.call(null,G__60880,G__60881));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__60882_SHARP_){\nreturn cljs.core.boolean$((((p1__60882_SHARP_ instanceof cljs.core.Symbol))?cljs.core.re_matches(/^-.*/,cljs.core.name(p1__60882_SHARP_)):false));\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__60883){\nvar vec__60884 = p__60883;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60884,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60884,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60884,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__60888 = cljs.core.get_global_hierarchy;\nreturn (fexpr__60888.cljs$core$IFn$_invoke$arity$0 ? fexpr__60888.cljs$core$IFn$_invoke$arity$0() : fexpr__60888.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),(function (p1__60887_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__60887_SHARP_);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__60889){\nvar vec__60890 = p__60889;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60890,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60890,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60890,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1)))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__60893){\nvar vec__60894 = p__60893;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60894,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60894,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60894,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__60897){\nvar vec__60898 = p__60897;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60898,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60898,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60898,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__60901){\nvar vec__60902 = p__60901;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60902,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60902,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60902,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__60905){\nvar vec__60906 = p__60905;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60906,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60906,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60906,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__60910 = (cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v) : cljs.analyzer.build_dot_form.call(null,v));\nvar map__60910__$1 = (((((!((map__60910 == null))))?(((((map__60910.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60910.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60910):map__60910);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60910__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60910__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60910__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60910__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60910__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4185__auto__ = field__$1;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = ((cljs.analyzer.js_tag_QMARK_(target_tag))?cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop):false);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4185__auto__ = (target_tag == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar fexpr__60913 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__60913.cljs$core$IFn$_invoke$arity$1 ? fexpr__60913.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__60913.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null));\n} else {\n}\n\nvar vec__60914_62211 = (function (){var G__60918 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nvar fexpr__60917 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity);\nreturn (fexpr__60917.cljs$core$IFn$_invoke$arity$1 ? fexpr__60917.cljs$core$IFn$_invoke$arity$1(G__60918) : fexpr__60917.call(null,G__60918));\n})();\nvar pre_SINGLEQUOTE__62212 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60914_62211,(0),null);\nvar pre_62213 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60914_62211,(1),null);\nif(cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__62212);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_62213));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__60919 = pre_SINGLEQUOTE__62212;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__62212))){\nreturn cljs.core.butlast(G__60919);\n} else {\nreturn G__60919;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_62214 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_62214))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_62214),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__60920 = dot_action;\nvar G__60920__$1 = (((G__60920 instanceof cljs.core.Keyword))?G__60920.fqn:null);\nswitch (G__60920__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__60909_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__60909_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__60909_SHARP_));\n}),args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60920__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__60921,___$1,___$2){\nvar vec__60922 = p__60921;\nvar seq__60923 = cljs.core.seq(vec__60922);\nvar first__60924 = cljs.core.first(seq__60923);\nvar seq__60923__$1 = cljs.core.next(seq__60923);\nvar ___$3 = first__60924;\nvar first__60924__$1 = cljs.core.first(seq__60923__$1);\nvar seq__60923__$2 = cljs.core.next(seq__60923__$1);\nvar target = first__60924__$1;\nvar vec__60925 = seq__60923__$2;\nvar seq__60926 = cljs.core.seq(vec__60925);\nvar first__60927 = cljs.core.first(seq__60926);\nvar seq__60926__$1 = cljs.core.next(seq__60926);\nvar field = first__60927;\nvar member_PLUS_ = seq__60926__$1;\nvar form = vec__60922;\nvar _STAR_recur_frames_STAR__orig_val__60928 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60929 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60929);\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60928);\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5737__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__60930 = env;\nvar G__60931 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__60930,G__60931) : cljs.analyzer.js_star_interp.call(null,G__60930,G__60931));\n})()));\n}),null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__60932 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__60932) : cljs.analyzer.js_star_seg.call(null,G__60932));\n})());\n}),null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.cljs_set_QMARK_(t))?(function (){var or__4185__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_args = (function cljs$analyzer$analyze_js_star_args(js_op,env,args){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__60933,arg){\nvar vec__60934 = p__60933;\nvar argexprs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60934,(0),null);\nvar env__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60934,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(argexprs,(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env__$1,arg) : cljs.analyzer.analyze.call(null,env__$1,arg))),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_op,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null)))?cljs.analyzer.set_test_induced_tags(env__$1,arg):env__$1)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,env], null),args));\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar argexprs = cljs.analyzer.analyze_js_star_args(js_op,enve,args);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60937_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__60937_SHARP_);\n}),argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});\nvar op_match_QMARK_ = (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (p1__60938_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__60938_SHARP_);\n}));\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__60939 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60940 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60940);\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60939);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__60941,_,___$1){\nvar vec__60942 = p__60941;\nvar seq__60943 = cljs.core.seq(vec__60942);\nvar first__60944 = cljs.core.first(seq__60943);\nvar seq__60943__$1 = cljs.core.next(seq__60943);\nvar ___$2 = first__60944;\nvar first__60944__$1 = cljs.core.first(seq__60943__$1);\nvar seq__60943__$2 = cljs.core.next(seq__60943__$1);\nvar jsform = first__60944__$1;\nvar args = seq__60943__$2;\nvar form = vec__60942;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__60945_SHARP_){\nreturn (((p1__60945_SHARP_ == null)) || ((p1__60945_SHARP_ instanceof cljs.core.Symbol)) || (typeof p1__60945_SHARP_ === 'string') || (typeof p1__60945_SHARP_ === 'number') || (p1__60945_SHARP_ === true) || (p1__60945_SHARP_ === false));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn (((method_params == null)) || (cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)))));\n});\ncljs.analyzer.record_tag_QMARK_ = (function cljs$analyzer$record_tag_QMARK_(tag){\nreturn cljs.core.boolean$((((tag instanceof cljs.core.Symbol))?(((!((cljs.core.namespace(tag) == null))))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(tag)),new cljs.core.Keyword(null,\"record\",\"record\",-779106859)], null)):false):false));\n});\ncljs.analyzer.record_basis = (function cljs$analyzer$record_basis(tag){\nvar positional_factory = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"->\",cljs.core.name(tag)].join(''));\nvar fields = cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),positional_factory,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179)], null)));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,fields);\n});\ncljs.analyzer.record_with_field_QMARK_ = (function cljs$analyzer$record_with_field_QMARK_(tag,field){\nreturn ((cljs.analyzer.record_tag_QMARK_(tag)) && (cljs.core.contains_QMARK_(cljs.analyzer.record_basis(tag),field)));\n});\ncljs.analyzer.invalid_arity_QMARK_ = (function cljs$analyzer$invalid_arity_QMARK_(argc,method_params,variadic,max_fixed_arity){\nif((!(cljs.analyzer.valid_arity_QMARK_(argc,method_params)))){\nvar or__4185__auto__ = cljs.core.not(variadic);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = variadic;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn (argc < max_fixed_arity);\n} else {\nreturn and__4174__auto__;\n}\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__60947){\nvar vec__60948 = p__60947;\nvar seq__60949 = cljs.core.seq(vec__60948);\nvar first__60950 = cljs.core.first(seq__60949);\nvar seq__60949__$1 = cljs.core.next(seq__60949);\nvar f = first__60950;\nvar args = seq__60949__$1;\nvar form = vec__60948;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\n}\n})();\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (cljs.core.not(fn_var_QMARK_)) && ((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__60951_62216 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__60951_62217__$1 = (((((!((map__60951_62216 == null))))?(((((map__60951_62216.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60951_62216.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60951_62216):map__60951_62216);\nvar variadic_62218 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_62219 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_62220 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_62221 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_62222 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_62223 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60951_62217__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(cljs.core.truth_(((cljs.core.not((function (){var and__4174__auto__ = (function (){var G__60969 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns);\nvar G__60970 = \"$macros\";\nreturn goog.string.endsWith(G__60969,G__60970);\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_62222)) && (macro_62223 === true));\n} else {\nreturn and__4174__auto__;\n}\n})()))?cljs.analyzer.invalid_arity_QMARK_(argc,method_params_62220,variadic_62218,max_fixed_arity_62219):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_62221,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__62224 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__62225 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__62224)) && ((!(cljs.core.boolean$(no_warn_QMARK__62225)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__60971 = cljs.core.PersistentVector.EMPTY;\nvar G__60971__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__60971,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__60971);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__60971__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__60971__$1;\n}\n})();\nvar G__60972 = env;\nvar G__60973 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__60972,G__60973) : cljs.analyzer.analyze.call(null,G__60972,G__60973));\n} else {\nvar ana_expr = (function (p1__60946_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__60946_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__60946_SHARP_));\n});\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nif((((((f instanceof cljs.core.Keyword)) && ((cljs.core.namespace(f) == null)))) && (((1) === cljs.core.count(args))) && (cljs.analyzer.record_with_field_QMARK_(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(argexprs)),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(f)))))){\nvar field_access_form = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\".-\",cljs.core.name(f)].join('')),args);\nvar _STAR_cljs_warnings_STAR__orig_val__60974 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__60975 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__60975);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,field_access_form) : cljs.analyzer.analyze.call(null,env,field_access_form));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__60974);\n}} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__60976 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__60977 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__60977);\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__60976);\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__60978){\nvar map__60979 = p__60978;\nvar map__60979__$1 = (((((!((map__60979 == null))))?(((((map__60979.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60979.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60979):map__60979);\nvar expr = map__60979__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60979__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__60981 = op;\nvar G__60981__$1 = (((G__60981 instanceof cljs.core.Keyword))?G__60981.fqn:null);\nswitch (G__60981__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((idx + (1)),((s).length)))?null:(function(){throw (new Error(\"Assert failed: (not= (inc idx) (count s))\"))})());\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\nif(cljs.core.not(new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(expr))){\n} else {\nthrow (new Error(\"Assert failed: (not (:const-expr expr))\"));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__60982 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__60982) : cljs.analyzer.desugar_dotted_expr.call(null,G__60982));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__60983 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__60983) : cljs.analyzer.analyze_wrap_meta.call(null,G__60983));\n} else {\nvar map__60984 = cljs.core.meta(sym);\nvar map__60984__$1 = (((((!((map__60984 == null))))?(((((map__60984.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60984.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60984):map__60984);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60984__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60984__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5737__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5737__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4174__auto__ = sym_ns;\nif(cljs.core.truth_(and__4174__auto__)){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\")){\nvar and__4174__auto____$1 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4174__auto____$1)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(((cur_ns).length) - (7))))));\n} else {\nreturn and__4174__auto____$1;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info))){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info)),\"\\n\",\"(:op info)\"].join('')));\n}\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar const_expr = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5737__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4185__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__60986 = env;\nvar G__60986__$1 = (((G__60986 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__60986));\nvar G__60986__$2 = (((G__60986__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__60986__$1));\nvar G__60986__$3 = (((G__60986__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__60986__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__60986__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__60986__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_62227 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_62227);\n} else {\nreturn null;\n}\n});\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__60988 = mac_var;\nvar G__60989 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__60988,G__60989) : mchk.call(null,G__60988,G__60989));\n}catch (e60987){var e = e60987;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.check_macro_arity = (function cljs$analyzer$check_macro_arity(mac_var,form){\nvar mac_sym = mac_var.sym;\nvar temp__5735__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_sym)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_sym))], null));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar map__60991 = temp__5735__auto__;\nvar map__60991__$1 = (((((!((map__60991 == null))))?(((((map__60991.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__60991.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__60991):map__60991);\nvar variadic_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60991__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60991__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60991__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar argc = cljs.core.count(cljs.core.rest(form));\nvar offset = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&form\",\"&form\",1482799337,null),cljs.core.ffirst(method_params)))?(2):(0));\nif(cljs.core.truth_(cljs.analyzer.invalid_arity_QMARK_(argc,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__60990_SHARP_){\nreturn cljs.core.nthrest(p1__60990_SHARP_,offset);\n}),method_params),variadic_QMARK_,(cljs.core.truth_(max_fixed_arity)?(max_fixed_arity - offset):null)))){\nthrow (new Error((function (){var G__60993 = new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501);\nvar G__60994 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),mac_sym], null);\nreturn (cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__60993,G__60994) : cljs.analyzer.error_message.call(null,G__60993,G__60994));\n})()));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5737__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5737__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__60995 = cljs.core.next(form);\nvar seq__60996 = cljs.core.seq(vec__60995);\nvar first__60997 = cljs.core.first(seq__60996);\nvar seq__60996__$1 = cljs.core.next(seq__60996);\nvar target = first__60997;\nvar args = seq__60996__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(((opname).length) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5737__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{cljs.analyzer.check_macro_arity(mac_var,form);\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e60998){var e = e60998;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e60999){var err__60084__auto__ = e60999;\nif(cljs.analyzer.has_error_data_QMARK_(err__60084__auto__)){\nthrow err__60084__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60084__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60084__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60084__auto__.message,err__60084__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn (cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5 ? cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts) : cljs.analyzer.parse.call(null,op,env,form,name,opts));\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e61000){var err__60084__auto__ = e61000;\nif(cljs.analyzer.has_error_data_QMARK_(err__60084__auto__)){\nthrow err__60084__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60084__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60084__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60084__auto__.message,err__60084__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__61002 = arguments.length;\nswitch (G__61002) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n}));\n\n(cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__61005 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61006 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61006);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61003_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61003_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61003_SHARP_));\n}),cljs.core.keys(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61005);\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__61007 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61008 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61008);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61004_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61004_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61004_SHARP_));\n}),cljs.core.vals(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61007);\n}})();\nvar G__61009 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61009) : cljs.analyzer.analyze_wrap_meta.call(null,G__61009));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61011 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61012 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61012);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61010_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61010_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61010_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61011);\n}})();\nvar G__61013 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61013) : cljs.analyzer.analyze_wrap_meta.call(null,G__61013));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61015 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61016 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61016);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61014_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61014_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61014_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61015);\n}})();\nvar G__61017 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61017) : cljs.analyzer.analyze_wrap_meta.call(null,G__61017));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61019 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61020 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61020);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61018_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61018_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61018_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61019);\n}})();\nvar G__61021 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__61021) : cljs.analyzer.analyze_wrap_meta.call(null,G__61021));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__61024 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61025 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61025);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61022_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61022_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61022_SHARP_));\n}),cljs.core.vals(val));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61024);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__61026 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61027 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61027);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__61023_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__61023_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__61023_SHARP_));\n}),val);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61026);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__61032 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__61033 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__61033);\n\ntry{var G__61034 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__61035 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__61034,G__61035) : cljs.analyzer.analyze.call(null,G__61034,G__61035));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__61032);\n}})();\nvar vec__61029 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61029,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61029,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__61037,_){\nvar map__61038 = p__61037;\nvar map__61038__$1 = (((((!((map__61038 == null))))?(((((map__61038.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61038.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61038):map__61038);\nvar ast = map__61038__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61038__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),(function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__61036_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__61036_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__61036_SHARP_,_));\n})),ms);\n}));\n} else {\nvar temp__5737__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5737__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5737__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4174__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4174__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__61040_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__61040_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__61040_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__61041_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__61041_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__61041_SHARP_)))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__61042,opts){\nvar map__61043 = p__61042;\nvar map__61043__$1 = (((((!((map__61043 == null))))?(((((map__61043.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61043.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61043):map__61043);\nvar ast = map__61043__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61043__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5739__auto___62229 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5739__auto___62229 == null)){\n} else {\nvar vec__61045_62230 = temp__5739__auto___62229;\nvar name_62231 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61045_62230,(0),null);\nvar map__61048_62232 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61045_62230,(1),null);\nvar map__61048_62233__$1 = (((((!((map__61048_62232 == null))))?(((((map__61048_62232.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61048_62232.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61048_62232):map__61048_62232);\nvar valid_QMARK__62234 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61048_62233__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_62235 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61048_62233__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_62236 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__62234.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__62234.cljs$core$IFn$_invoke$arity$1(types_62236) : valid_QMARK__62234.call(null,types_62236)))){\n} else {\ncljs.analyzer.warning(warning_type_62235,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_62231,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_62236], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.STRING_SYM:((form === true)?cljs.analyzer.BOOLEAN_SYM:((form === false)?cljs.analyzer.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__61050 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__61050,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__61050;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.check_invoke_arg_types], null):passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n}),ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__61052 = arguments.length;\nswitch (G__61052) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__61054 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__61055 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__61055);\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__61054);\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e61053){var err__60084__auto__ = e61053;\nif(cljs.analyzer.has_error_data_QMARK_(err__60084__auto__)){\nthrow err__60084__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__60084__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__60084__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__60084__auto__.message,err__60084__auto__));\n\n}\n}\n}}));\n\n(cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__61056 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__61057 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__61057);\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__61056);\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__61058 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__61059 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__61059);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__61058);\n}})());\n}\n});\nvar registry_ref_62238 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_62239 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n}),null));\ncljs.analyzer.get_spec_vars = (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_62238),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_62239)], null);\n} else {\nreturn null;\n}\n});\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar registry_ref = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__61060){\nvar vec__61061 = p__61060;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61061,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61061,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n})),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar speced_vars = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n})),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__61064 = cljs.analyzer.get_spec_vars();\nvar map__61064__$1 = (((((!((map__61064 == null))))?(((((map__61064.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61064.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61064):map__61064);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61064__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61064__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5735__auto___62240 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto___62240){\nvar registry_62241 = temp__5735__auto___62240;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_62241);\n} else {\n}\n} else {\n}\n\nvar temp__5735__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto__){\nvar vars = temp__5735__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__61067 = arguments.length;\nswitch (G__61067) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__61068 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__61069 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__61070 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__61071 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__61072 = null;\nvar _STAR_cljs_ns_STAR__temp_val__61073 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__61074 = null;\nvar _STAR_alias_map_STAR__temp_val__61075 = (function (){var or__4185__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__61072);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__61073);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__61074);\n\n(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__61075);\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__62243 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__62244 = cljs.core.next(forms__$1);\nvar G__62245 = ast;\nns = G__62243;\nforms__$1 = G__62244;\nlast_ast = G__62245;\ncontinue;\n} else {\nvar G__62246 = ns;\nvar G__62247 = cljs.core.next(forms__$1);\nvar G__62248 = ast;\nns = G__62246;\nforms__$1 = G__62247;\nlast_ast = G__62248;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__61071);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__61070);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__61069);\n\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__61068);\n}}));\n\n(cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3);\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__61076_SHARP_){\nvar or__4185__auto__ = p1__61076_SHARP_;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$no-warn","~$cljs.analyzer.macros","~$wrapping-errors","^N","~$with-warning-handlers","^N","~$disallowing-recur","^N","~$allowing-redef","^N","~$disallowing-ns*","^N","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^T","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$cljs.tools.reader","^19","^18","^18","~$tags","~$cljs.tagged-literals","~$cljs.core","^1<","~$goog","^1=","~$cljs.tools.reader.reader-types","^1>","~$cljs.env","^1?","^16","^16","~$readers","^1>","^1;","^1;","~$env","^1?","~$string","~$clojure.string","^1C","^1C","~$cljs.reader","^1D","~$edn","^1D","~$reader","^19"],"~:seen",["^W",["~:require","~:require-macros"]],"~:uses",null,"^1I",["^ ","^N","^N","^U","^U","^1<","^1<","^1D","^1D","^1E","^1D"],"~:form",["~#list",["~$ns","^10",["^1L",["~:refer-clojure","~:exclude",["^Y","^Z","^T","^X"]]],["^1L",["^1I",["^N","~:refer",["^M","^O","^P","^Q","^R","^S"]],["^U","^1P",["^T"]]]],["^1L",["^1H",["^18","~:as","^17"],["^1C","^1Q","^1B"],["^16","^1Q","^15"],["^1?","^1Q","^1A"],["^1;","^1Q","^1:"],["^19","^1Q","^1F"],["^1>","^1Q","^1@"],["^1D","^1Q","^1E"]]]]],"~:flags",["^ ","^1I",["^W",[]],"^1H",["^W",[]]],"~:js-deps",["^ "],"~:deps",["^1=","^1<","^18","^1C","^16","^1?","^1;","^19","^1>","^1D"]],"^12","^10","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1577302354538,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [macroexpand-1 ensure])\n     :cljs (:refer-clojure :exclude [macroexpand-1 ns-interns ensure js-reserved]))\n  #?(:cljs (:require-macros\n             [cljs.analyzer.macros\n              :refer [no-warn wrapping-errors with-warning-handlers\n                      disallowing-recur allowing-redef disallowing-ns*]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj  (:require [cljs.util :as util :refer [ns->relpath topo-sort]]\n                     [clojure.java.io :as io]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env :refer [ensure]]\n                     [cljs.js-deps :as deps]\n                     [cljs.tagged-literals :as tags]\n                     [clojure.tools.reader :as reader]\n                     [clojure.tools.reader.reader-types :as readers]\n                     [clojure.edn :as edn]\n                     [cljs.externs :as externs])\n     :cljs (:require [goog.string :as gstring]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [cljs.reader :as edn]))\n  #?(:clj (:import [java.io File Reader PushbackReader]\n                   [java.util.regex Pattern]\n                   [java.net URL]\n                   [java.lang Throwable]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [cljs.tagged_literals JSValue])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-with-overwriting-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not (-> @env/*compiler* :options :advanced))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (def CLJ_NIL_SYM 'clj-nil))\n\n#?(:cljs\n   (def NUMBER_SYM 'number))\n\n#?(:cljs\n   (def STRING_SYM 'string))\n\n(def BOOLEAN_SYM 'boolean)\n\n#?(:cljs\n   (def JS_STAR_SYM 'js*))\n\n#?(:cljs\n   (def DOT_SYM '.))\n\n#?(:cljs\n   (def NEW_SYM 'new))\n\n#?(:cljs\n   (def CLJS_CORE_SYM 'cljs.core))\n\n#?(:cljs\n   (def CLJS_CORE_MACROS_SYM 'cljs.core$macros))\n\n(def IGNORE_SYM 'ignore)\n\n(def ANY_SYM 'any)\n\n#?(:cljs\n   (defn ^boolean cljs-seq? [x]\n     (implements? ISeq x)))\n\n#?(:cljs\n   (defn ^boolean cljs-map? [x]\n     (implements? IMap x)))\n\n#?(:cljs\n   (defn ^boolean cljs-vector? [x]\n     (implements? IVector x)))\n\n#?(:cljs\n   (defn ^boolean cljs-set? [x]\n     (implements? ISet x)))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-with-overwriting-method\n  [warning-type info]\n  (let [overwritten-protocol (-> info :existing :protocol)]\n    (str \"Protocol \" (:protocol info) \" is overwriting \"\n      (if overwritten-protocol \"method\" \"function\")\n      \" \" (:name info)\n      (when overwritten-protocol (str \" of protocol \" (name overwritten-protocol))))))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj (contains?\n            (get-in @env/*compiler* [:node-module-index])\n            (str module))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean (js/require.resolve (str module))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n    (has-extern? pre (get @env/*compiler* ::externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get @env/*compiler* ::externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  {:ns current-ns\n   :name (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n   :op :js-var\n   :foreign true})\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    {:ns current-ns\n     :name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :tag (with-meta 'js {:prefix pre})\n     :foreign true}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym] (resolve-var env sym nil))\n  ([env sym confirm]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             (if-some [lb (handle-symbol-local prefix (get locals prefix))]\n               {:op :local\n                :name (symbol (str (:name lb) \".\" suffix))}\n               (if-some [full-ns (gets @env/*compiler* ::namespaces current-ns :imports prefix)]\n                 {:op :js-var\n                  :name (symbol (str full-ns) suffix)}\n                 (if-some [info (gets @env/*compiler* ::namespaces current-ns :defs prefix)]\n                   (merge info\n                     {:name (symbol (str current-ns) (str sym))\n                      :op :var\n                      :ns current-ns})\n                   (merge (gets @env/*compiler* ::namespaces prefix :defs (symbol suffix))\n                     {:name (if (= \"\" prefix) (symbol suffix) (symbol (str prefix) suffix))\n                      :op :var\n                      :ns prefix})))))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (do\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (resolve-var env t)]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(def NOT_NATIVE '#{clj not-native})\n\n(def BOOLEAN_OR_SEQ '#{boolean seq})\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag IGNORE_SYM)\n             :cljs (symbol-identical? then-tag IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get BOOLEAN_OR_SEQ then-tag))\n                   (some? (get BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    IGNORE_SYM\n        :throw    IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true BOOLEAN_SYM\n                    false BOOLEAN_SYM\n                    ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)      ANY_SYM\n        :js       ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;; Subtypes\n    cljs.core/simple-keyword?    cljs.core/Keyword\n    cljs.core/qualified-keyword? cljs.core/Keyword\n    cljs.core/simple-symbol?     cljs.core/Symbol\n    cljs.core/qualified-symbol?  cljs.core/Symbol\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n\n    ;; Composite subtypes\n    cljs.core/simple-ident?    #{cljs.core/Keyword cljs.core/Symbol}\n    cljs.core/qualified-ident? #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(declare specials)\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test)\n             (not (contains? specials (first test))))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance? cljs.core/implements?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a local.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test))\n             (get-in env [:locals test]))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (cond\n                fn-var? (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                tag tag\n                dynamic ANY_SYM\n                :else (:tag init-expr))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (-> env\n                         (cond->\n                           (> (count meths) 1)\n                           (assoc :context :expr))\n                         ;; clear loop flag since method bodies won't be in a loop at first\n                         ;; only tracking this to keep track of locals we need to capture\n                         (dissoc :in-loop)\n                         (merge {:protocol-impl proto-impl\n                                 :protocol-inline proto-inline}))\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :in-loop (:in-loop env)\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr)))]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (-> encl-env\n                         (cond->\n                           (true? is-loop) (assoc :in-loop true))\n                         (analyze-let-bindings bindings op))\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   ;; Widen by adding the type of the recur expression, except when recurring with a\n                                   ;; loop local: Since its final widened type is unknown, conservatively assume 'any.\n                                   (if (= :loop (:local expr))\n                                     'any\n                                     (add-types tag (:tag expr))))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (analyze-seq enve target nil)]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name dep))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           (if (contains? (:js-dependency-index compiler) (name dep))\n             (let [dep-name (name dep)]\n               (when (string/starts-with? dep-name \"goog.\")\n                 #?(:clj (let [js-lib (get-in compiler [:js-dependency-index dep-name])\n                               ns (externs/analyze-goog-file (:file js-lib) (symbol dep-name))]\n                           (swap! env/*compiler* update-in [::namespaces dep] merge ns)))))\n             #?(:clj (if-some [src (locate-src dep)]\n                       (analyze-file src opts)\n                       (throw\n                         (error env\n                           (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n                :cljs (throw\n                        (error env\n                          (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)})))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (if (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                            (->> old-aliases\n                              (remove (fn [[k v :as entry]]\n                                        (or (= k v)\n                                            (= entry (find new-aliases k)))))\n                              keys))]\n          (throw (error env\n                   (str \"Alias \" alias \" already exists in namespace \" ns-name\n                     \", aliasing \" (get old-aliases alias)))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}\n          ns-info\n          (let [ns-info' (get-in @env/*compiler* [::namespaces name])]\n            (if (pos? (count ns-info'))\n              (let [merge-keys\n                    [:use-macros :require-macros :rename-macros\n                     :uses :requires :renames :imports]]\n                #?(:clj\n                   (when *check-alias-dupes*\n                     (check-duplicate-aliases env ns-info' require-info)))\n                (merge\n                  ns-info'\n                  {:excludes excludes}\n                  (merge-with merge\n                    (select-keys ns-info' merge-keys)\n                    (select-keys require-info merge-keys))))\n              require-info))]\n      (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target :field (-> prop name (.substring 1) symbol)})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\")))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn- analyze-js-star-args [js-op env args]\n  (first (reduce\n           (fn [[argexprs env] arg]\n             [(conj argexprs (analyze env arg))\n              (if (= js-op 'cljs.core/and)\n                (set-test-induced-tags env arg)\n                env)])\n           [[] env]\n           args)))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        argexprs  (analyze-js-star-args js-op enve args)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (or (nil? method-params)  ; Assume valid if method-params unavailable\n      (boolean (some #{argc} (map count method-params)))))\n\n(defn- record-tag?\n  [tag]\n  (boolean (and (symbol? tag)\n                (some? (namespace tag))\n                (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs (symbol (name tag)) :record]))))\n\n(defn- record-basis\n  [tag]\n  (let [positional-factory (symbol (str \"->\" (name tag)))\n        fields             (first (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs positional-factory :method-params]))]\n    (into #{} fields)))\n\n(defn- record-with-field?\n  [tag field]\n  (and (record-tag? tag)\n       (contains? (record-basis tag) field)))\n\n(defn- invalid-arity? [argc method-params variadic max-fixed-arity]\n  (and (not (valid-arity? argc method-params))\n       (or (not variadic)\n           (and variadic (< argc max-fixed-arity)))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (or (-> fexpr :info :fn-var)\n                    (-> fexpr :info :js-fn-var))\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (invalid-arity? argc method-params variadic max-fixed-arity))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))]\n        (analyze env\n          `(let [~@bindings]\n             (~(analyzed (if bind-f-expr? f-sym f))\n               ~@(if bind-args? arg-syms args)))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        (if (and (and (keyword? f)\n                      (nil? (namespace f)))\n                 (== 1 (count args))\n                 (record-with-field? (:tag (first argexprs)) (symbol (name f))))\n          (let [field-access-form (list* (symbol (str \".-\" (name f))) args)]\n            (no-warn (analyze env field-access-form)))\n          {:env      env :op :invoke :form form :fn fexpr :args argexprs\n           :children [:fn :args]})))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n#?(:cljs\n   (defn- check-macro-arity [mac-var form]\n     (let [mac-sym (.-sym mac-var)]\n       (when-let [{:keys [variadic? max-fixed-arity method-params]}\n                  (get-in @env/*compiler* [::namespaces (symbol (namespace mac-sym)) :defs (symbol (name mac-sym))])]\n         (let [argc   (count (rest form))\n               offset (if (= '&form (ffirst method-params)) 2 0)]\n           (when (invalid-arity? argc (map #(nthrest %1 offset) method-params)\n                   variadic? (when max-fixed-arity (- max-fixed-arity offset)))\n             (throw (js/Error. (error-message :fn-arity {:argc argc, :name mac-sym})))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          #?(:cljs (check-macro-arity mac-var form))\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (cljs-map? form) (analyze-map env form)\n       (cljs-vector? form) (analyze-vector env form)\n       (cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) CLJ_NIL_SYM\n                   (number? form) NUMBER_SYM\n                   (string? form) STRING_SYM\n                   (true? form) BOOLEAN_SYM\n                   (false? form) BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 #?(:clj  [infer-type check-invoke-arg-types ns-side-effects]\n                    :cljs [infer-type check-invoke-arg-types])\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [env (empty-env)\n                              ast (no-warn (analyze env (first forms) nil opts))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))]\n                              (merge\n                                {:ns           (or ns-name 'cljs.user)\n                                 :provides     [ns-name]\n                                 :requires     (if (= 'cljs.core ns-name)\n                                                 (set (vals deps))\n                                                 (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                   (get-in @env/*compiler* [:options :emit-constants])\n                                                   (conj constants-ns-sym)))\n                                 :file         dest\n                                 :source-file  (when rdr src)\n                                 :source-forms (when-not rdr src)\n                                 :ast          ast\n                                 :macros-ns    (or (:macros-ns opts)\n                                                   (= 'cljs.core$macros ns-name))}\n                                (when (and dest (.exists ^File dest))\n                                  {:lines (with-open [reader (io/reader dest)]\n                                            (-> reader line-seq count))})))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (rest forms)\n                                (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                  ;; we need to defer generating the user namespace\n                                  ;; until we actually need or it will break when\n                                  ;; `src` is a sequence of forms - António Monteiro\n                                  (not (:ns ret))\n                                  (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target\n        :cache-key :checked-arrays :language-out])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (with-open [os (io/output-stream cache-file)]\n                     (write (writer os :json transit-write-opts) analysis)))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^W",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/checked-arrays","cljs.core/not","cljs.core/deref","cljs.env/*compiler*","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__60110","cljs.analyzer/gets","js/Error","m","k0","k1","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core.get.cljs$core$IFn$_invoke$arity$2","k2","k3","cljs.analyzer/CLJ_NIL_SYM","cljs.analyzer/NUMBER_SYM","cljs.analyzer/STRING_SYM","cljs.analyzer/BOOLEAN_SYM","cljs.analyzer/JS_STAR_SYM","cljs.analyzer/DOT_SYM","cljs.analyzer/NEW_SYM","cljs.analyzer/CLJS_CORE_SYM","cljs.analyzer/CLJS_CORE_MACROS_SYM","cljs.analyzer/IGNORE_SYM","cljs.analyzer/ANY_SYM","cljs.analyzer/cljs-seq?","x","cljs.core/PROTOCOL_SENTINEL","cljs.analyzer/cljs-map?","cljs.analyzer/cljs-vector?","cljs.analyzer/cljs-set?","cljs.analyzer/munge-path","ss","cljs.core/munge","G__60116","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2","ext","clojure.string/replace","cljs.core/name","G__60118","cljs.analyzer/topo-sort","get-deps","cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2","cljs.core/into","seq__60119","cljs.core/seq","chunk__60120","count__60121","i__60122","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__60123","chunk__60124","count__60125","i__60126","vec__60133","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__60136","<depth","_","cljs.core.subseq.cljs$core$IFn$_invoke$arity$3","cljs.core/<","clojure.set/difference","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4672__auto__","prefer-table__4673__auto__","method-cache__4674__auto__","cached-hierarchy__4675__auto__","hierarchy__4676__auto__","fexpr__60139","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/error-message","warning-type","info","clojure.string.join.cljs$core$IFn$_invoke$arity$2","p__60140","map__60141","cljs.core/hash-map","ns-sym","js-provide","clojure.string/includes?","cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1","p__60143","map__60144","or__4185__auto__","overwritten-protocol","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","p__60146","map__60147","name","types","G__60149","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__60151","map__60152","munged","clojure.string.split.cljs$core$IFn$_invoke$arity$2","p1__60150#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__60154","map__60155","var","p__60157","map__60158","p__60160","map__60161","protocol","method","p__60163","map__60164","module-type","file","p__60166","map__60167","preprocess","p__60169","map__60170","p__60172","map__60173","warn-type","form","type","property","G__60175","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__60176","*print-fn*-temp-val__60177","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","G__60178","G__60179","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","p1__60180#","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","G__60182","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cenv","G__60183","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","table","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__60184","map__60185","seen","order","constants","G__60187","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer60188","cljs.analyzer/t_cljs$analyzer60188","_60190","meta60189","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer60188","G__60192","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2","temp__5737__auto__","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__60194","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2","reload","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__60199","vec__60200","v","p__60195","vec__60196","k","vm","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/empty-env","val__60045__auto__","cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0","cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1","p1__60203#","cljs.core/PersistentVector","p__60206","map__60207","cljs.analyzer/source-info->error-data","line","column","G__60210","cljs.analyzer/source-info","cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2","G__60211","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/select-keys","cljs.analyzer/warning","seq__60212","chunk__60213","count__60214","i__60215","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__60216#","cljs.core/run!","G__60218","cljs.analyzer/error-data","phase","cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3","symbol","cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3","G__60220","cljs.analyzer/error","cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__60222","G__60223","cljs.analyzer/get-expander","cljs.analyzer/loaded-js-ns?","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1","p__60224","vec__60225","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","G__60228","G__60229","cljs.analyzer/node-module-dep?","e60230","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","global-exports","G__60232","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4","missing-fn","sufstr","suffix-str","cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5","cljs.analyzer/confirm-var-exists-throw","cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2","G__60234","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3","not-found","sym","G__60236","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/confirm-ns","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/core-name?","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj.cljs$core$IFn$_invoke$arity$2","G__60241","cljs.analyzer/add-types","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","seq60238","G__60239","G__60240","self__4776__auto__","t1","t2","clojure.set.union.cljs$core$IFn$_invoke$arity$2","ts","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/alias->type","G__60243","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3","top","vec__60244","x'","externs'","xmeta","G__60248","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2","cljs.core/last","clojure.string/starts-with?","G__60250","cljs.analyzer/js-tag","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2","tag-type","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4","vec__60251","p","G__60254","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","and__4174__auto__","fexpr__60258","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__60259","cljs.analyzer/resolve*","full-ns","current-ns","cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1","cljs.core/merge","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/resolve-invokeable-ns","G__60260","cljs.analyzer/handle-symbol-local","lb","G__60262","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3","confirm","locals","symn","shadowed-by-local","cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1","ret-tag","G__60263","G__60264","G__60265","idx","cljs.core.subs.cljs$core$IFn$_invoke$arity$3","qualified-symbol","G__60266","G__60267","G__60268","cljs.analyzer/resolve-existing-var","cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/confirm-bindings","names","seq__60269","chunk__60270","count__60271","i__60272","ev","cljs.analyzer/resolve-macro-var","namespaces","cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2","clojure.string/ends-with?","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","proto","cljs.analyzer/NOT_NATIVE","cljs.analyzer/BOOLEAN_OR_SEQ","p__60273","map__60274","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__60276","then-tag","G__60278","G__60279","cljs.analyzer/infer-tag","else-tag","G__60280","G__60281","cljs.core/symbol-identical?","p__60282","map__60283","cljs.analyzer/infer-invoke","args","map__60285","G__60287","G__60288","G__60289","G__60290","G__60291","G__60292","G__60293","G__60294","G__60295","G__60296","G__60297","G__60298","G__60299","G__60300","init","G__60301","G__60302","js/cljs.analyzer.parse","fexpr__60303","cljs.analyzer/parse","rest","G__60307","cljs.analyzer/var-meta","cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__60304#","cljs.core/List","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","p1__60305#","arglists","arglists'","cljs.core/second","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__60308","*private-var-access-nowarn*-temp-val__60309","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","temp__5739__auto__","var-ns","G__60310","G__60311","p__60312","vec__60313","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__60316","*cljs-warnings*-temp-val__60317","cljs.core.repeat.cljs$core$IFn$_invoke$arity$1","G__60318","G__60319","G__60320","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__60321","*cljs-warnings*-temp-val__60322","G__60323","G__60324","G__60326","fexpr__60325","analyzed-type","*cljs-warnings*-orig-val__60327","*cljs-warnings*-temp-val__60328","G__60329","G__60330","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__60331","*cljs-warnings*-temp-val__60332","G__60333","G__60334","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__60335","local","G__60338","p__60339","vec__60340","then","else","test-expr","*recur-frames*-orig-val__60343","*recur-frames*-temp-val__60344","cljs.core/cons","G__60345","G__60346","then-expr","*allow-redef*-orig-val__60347","*allow-redef*-temp-val__60348","G__60349","G__60350","else-expr","*allow-redef*-orig-val__60351","*allow-redef*-temp-val__60352","cljs.core/*unchecked-if*","p__60355","vec__60356","tests","thens","default","cljs.core/vector?","*recur-frames*-orig-val__60359","*recur-frames*-temp-val__60360","p1__60353#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","p1__60354#","nodes","cljs.core.mapv.cljs$core$IFn$_invoke$arity$3","G__60364","fexpr__60363","cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3","cljs.core/number?","cljs.core/string?","cljs.core/char?","p__60365","vec__60366","throw-form","throw-expr","*recur-frames*-orig-val__60369","*recur-frames*-temp-val__60370","G__60371","G__60372","p__60377","vec__60378","seq__60379","first__60380","body","map__60381","catchenv","p1__60373#","catch?","p1__60374#","cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2","cljs.core/seq?","default?","p1__60375#","finally?","p1__60376#","cblocks","dblock","fblock","parser","vec__60386","seq__60387","first__60388","forms*","parser*","G__60389","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","finally","*recur-frames*-orig-val__60391","*recur-frames*-temp-val__60392","G__60393","G__60394","cljs.core.gensym.cljs$core$IFn$_invoke$arity$1","temp__5733__auto__","vec__60395","seq__60396","first__60397","cb","cblock","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","p__60398","vec__60399","seq__60400","first__60401","catch","*recur-frames*-orig-val__60402","*recur-frames*-temp-val__60403","G__60404","G__60405","try","*recur-frames*-orig-val__60406","*recur-frames*-temp-val__60407","G__60408","G__60409","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","opts","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","p__60410","map__60411","cljs.analyzer/constant-value?","fexpr__60414","fexpr__60417","p__60418","map__60419","cljs.analyzer/const-expr->constant-value","G__60421","G__60422","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__60424","*recur-frames*-temp-val__60425","*allow-ns*-orig-val__60426","*allow-ns*-temp-val__60427","G__60428","G__60429","G__60430","fn-var?","export-as","export-val","G__60431","const-expr","*passes*-orig-val__60432","*passes*-temp-val__60433","G__60434","G__60435","protocol-symbol","p1__60423#","top-fn-meta","G__60436","G__60437","G__60438","G__60439","cljs.analyzer/analyze-fn-method-param","p__60440","p__60441","vec__60442","vec__60445","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__60448","*recur-frames*-temp-val__60449","cljs.analyzer/analyze-fn-method","analyze-body?","vec__60450","param-names","variadic","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","step","step-init","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__60453#","cljs.analyzer/analyze-fn-methods-pass2","p__60455","vec__60456","seq__60457","first__60458","vec__60459","named-fn?","form-meta","proto-impl","proto-inline","G__60462","p1__60454#","*allow-ns*-orig-val__60463","*allow-ns*-temp-val__60464","mfa","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core/max","cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic","cljs.core/assoc","*allow-ns*-orig-val__60465","*allow-ns*-temp-val__60466","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/=","variadic-methods","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","cljs.core.take.cljs$core$IFn$_invoke$arity$1","variadic-params","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","param-counts","cljs.analyzer/analyze-wrap-meta","p__60467","vec__60468","seq__60469","first__60470","bindings","exprs","cljs.core/even?","vec__60471","vec__60474","n->fexpr","cljs.core.juxt.cljs$core$IFn$_invoke$arity$2","cljs.core.partition.cljs$core$IFn$_invoke$arity$2","context","meth-env","bes","p__60477","vec__60478","map__60481","fexpr","*cljs-warnings*-orig-val__60483","*cljs-warnings*-temp-val__60484","G__60485","G__60486","be","G__60487","p__60488","p__60489","vec__60490","map__60493","G__60495","G__60496","be'","G__60497","G__60498","cljs.analyzer/analyze-do-statements*","p1__60499#","G__60500","G__60501","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__60502","*recur-frames*-temp-val__60503","p__60504","vec__60505","seq__60506","first__60507","statements","G__60508","G__60509","ret-env","G__60510","G__60511","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__60512","*loop-lets*-temp-val__60513","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__60522","G__60527","G__60528","col","p1__60514#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__60529","*recur-frames*-temp-val__60530","cljs.analyzer/analyze-let-body*","G__60531","G__60532","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__60533","*loop-lets*-orig-val__60534","*recur-frames*-temp-val__60535","*loop-lets*-temp-val__60536","p__60537","vec__60538","seq__60539","first__60540","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__60541","p__60544","vec__60545","widened-tag","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4","G__60548","*cljs-warning-handlers*-orig-val__60549","*cljs-warning-handlers*-temp-val__60550","nil->any","cljs.core/identity","p__60552","vec__60553","seq__60554","first__60555","frame","add-implicit-target-object?","G__60556","*recur-frames*-orig-val__60557","*recur-frames*-temp-val__60558","p1__60551#","G__60559","G__60560","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__60561","G__60562","G__60563","p__60565","vec__60566","p__60570","vec__60571","seq__60572","first__60573","ctor","*recur-frames*-orig-val__60574","*recur-frames*-temp-val__60575","enve","ctorexpr","ctor-var","G__60577","fexpr__60576","record-args","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","argexprs","p1__60569#","known-num-fields","argc","fexpr__60579","p__60580","vec__60581","target","alt","vec__60584","*recur-frames*-orig-val__60587","*recur-frames*-temp-val__60588","*private-var-access-nowarn*-orig-val__60589","*private-var-access-nowarn*-temp-val__60590","texpr","G__60591","cljs.analyzer/analyze-symbol","cljs.analyzer/analyze-seq","vexpr","G__60592","meta","fexpr__60594","cljs.analyzer/foreign-dep?","js-index","vec__60595","map__60598","foreign","G__60602","cljs.analyzer/analyze-deps","lib","cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4","compiler","*cljs-dep-set*-orig-val__60603","*cljs-dep-set*-temp-val__60604","p1__60600#","cljs.core/str","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","seq__60605","chunk__60606","count__60607","i__60608","dep-name","G__60613","G__60614","G__60615","G__60616","cljs.analyzer/missing-use?","js-lib","cljs.core.get_in.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__60617","vec__60618","cljs.analyzer/missing-renames","renames","p__60621","vec__60622","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__60625","vec__60626","cljs.analyzer/inferred-use-macros","p__60629","vec__60630","cljs.analyzer/inferred-rename-macros","rename-macros","p__60633","vec__60634","cljs.analyzer/check-uses","seq__60637","chunk__60638","count__60639","i__60640","vec__60651","vec__60656","G__60654","G__60655","G__60659","G__60660","G__60662","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3","missing-uses","seq__60663","chunk__60664","count__60665","i__60666","vec__60677","vec__60682","G__60680","G__60681","G__60685","G__60686","p__60690","map__60691","cljs.analyzer/check-use-macros-inferring-missing","p1__60687#","maybe-macros","remove-missing-uses","ast'","p1__60688#","p1__60689#","p__60696","map__60697","cljs.analyzer/check-rename-macros-inferring-missing","p1__60693#","missing-renames","missing-rename-macros","remove-missing-renames","p1__60694#","p1__60695#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","G__60703","G__60704","G__60705","G__60706","cljs.analyzer/parse-ns-excludes","p__60708","vec__60709","seq__60710","first__60711","filters","valid-kws","xs","err","kw","refs","p1__60707#","cljs.core/nnext","cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic","p__60713","vec__60714","seq__60715","first__60716","cljs.analyzer/use->require","only?","p1__60712#","cljs.analyzer/parse-require-spec","aliases","vec__60717","seq__60718","first__60719","vec__60720","map__60723","vec__60724","js-module-provides","js-module-name","alias","referred","renamed","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__60728","cljs.core.interleave.cljs$core$IFn$_invoke$arity$2","p__60729","vec__60730","original","cljs.analyzer/parse-import-spec","import-map","p1__60733#","seq__60734","chunk__60735","count__60736","i__60737","vec__60744","vec__60747","cljs.analyzer/macro-autoload-ns?","map__60750","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__60753","p1__60752#","require","indexed","p__60754","vec__60755","seq__60756","first__60757","sugar-keys","remove-from-spec","pred","vec__60759","l","r","cljs.core/split-with","cljs.core/complement","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","replace-refer-macros","reload-spec?","fexpr__60762","to-macro-specs","remove-sugar","require-specs","vec__60763","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3","seq__60766","chunk__60767","count__60768","i__60769","vec__60776","vec__60779","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","p__60784","vec__60785","seq__60786","first__60787","G__60788","segment","map__60789","map__60790","vec__60791","docstring","mdocstr","metadata","cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3","excludes","core-renames","p__60795","vec__60796","spec-parsers","cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","valid-forms","reloads","requires","imports","p__60799","vec__60800","seq__60801","first__60802","libs","libspec","fexpr__60803","fexpr__60804","cljs.core/disj","p1__60782#","p1__60783#","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core/merge-with","p__60805","vec__60806","spec-map","p__60810","vec__60811","G__60814","ns-info","G__60815","G__60817","fexpr__60816","G__60819","fexpr__60818","G__60821","fexpr__60820","G__60823","fexpr__60822","cljs.analyzer/check-duplicate-aliases","old","new","seq__60824","chunk__60825","count__60826","i__60827","old-aliases","new-aliases","p__60836","vec__60837","p__60840","vec__60841","entry","p__60847","vec__60848","quoted-specs","not-quoted","cljs.core/keyword?","p1__60844#","map__60851","map__60852","p__60854","vec__60855","p__60858","vec__60859","seq__60860","first__60861","p1__60845#","p1__60846#","p__60862","vec__60863","require-info","ns-info'","merge-keys","G__60867","G__60869","fexpr__60868","G__60871","fexpr__60870","G__60873","fexpr__60872","G__60875","fexpr__60874","p__60876","vec__60877","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__60880","G__60881","p1__60882#","cljs.analyzer/property-symbol?","cljs.core/re-matches","p__60883","vec__60884","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__60888","p1__60887#","cljs.analyzer/build-dot-form","p__60889","vec__60890","prop","p__60893","vec__60894","cljs.analyzer/build-method-call","meth","p__60897","vec__60898","p__60901","vec__60902","p__60905","vec__60906","meth-expr","dot-form","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/analyze-dot","field","member+","map__60910","dot-action","targetexpr","target-tag","fexpr__60913","vec__60914","pre'","G__60918","fexpr__60917","G__60919","G__60920","p1__60909#","p__60921","vec__60922","seq__60923","first__60924","vec__60925","seq__60926","first__60927","*recur-frames*-orig-val__60928","*recur-frames*-temp-val__60929","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__60930","G__60931","cljs.analyzer/js-star-seg","G__60932","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star-args","js-op","p__60933","vec__60934","arg","cljs.analyzer/analyze-js-star*","jsform","numeric","validate","valid-types?","p1__60937#","op-match?","p1__60938#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__60939","*recur-frames*-temp-val__60940","p__60941","vec__60942","seq__60943","first__60944","code","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__60945#","cljs.analyzer/valid-arity?","method-params","cljs.analyzer/record-tag?","cljs.analyzer/record-basis","positional-factory","cljs.analyzer/record-with-field?","cljs.analyzer/invalid-arity?","max-fixed-arity","p__60947","vec__60948","seq__60949","first__60950","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__60951","macro","G__60969","G__60970","deprecated?","no-warn?","arg-syms","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core/gensym","f-sym","G__60971","cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic","G__60972","G__60973","cljs.core.concat.cljs$core$IFn$_invoke$arity$1","p1__60946#","ana-expr","field-access-form","*cljs-warnings*-orig-val__60974","*cljs-warnings*-temp-val__60975","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__60976","*recur-frames*-temp-val__60977","p__60978","map__60979","cljs.analyzer/desugar-dotted-expr","G__60981","G__60982","G__60983","map__60984","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__60986","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e60987","G__60988","G__60989","cljs.analyzer/check-macro-arity","mac-sym","map__60991","variadic?","offset","cljs.core/ffirst","p1__60990#","cljs.core/nthrest","G__60993","G__60994","cljs.analyzer/macroexpand-1*","form'","e60998","sym'","mac-var-ns","mac-var-name","opname","vec__60995","seq__60996","first__60997","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3","cljs.analyzer/macroexpand-1","err__60084__auto__","e60999","cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e61000","G__61002","cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__61005","*recur-frames*-temp-val__61006","p1__61003#","vs","*recur-frames*-orig-val__61007","*recur-frames*-temp-val__61008","p1__61004#","G__61009","items","*recur-frames*-orig-val__61011","*recur-frames*-temp-val__61012","p1__61010#","G__61013","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__61015","*recur-frames*-temp-val__61016","p1__61014#","G__61017","cljs.analyzer/analyze-set","*recur-frames*-orig-val__61019","*recur-frames*-temp-val__61020","p1__61018#","G__61021","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__61024","*recur-frames*-temp-val__61025","p1__61022#","*recur-frames*-orig-val__61026","*recur-frames*-temp-val__61027","p1__61023#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__61029","_items_","*recur-frames*-orig-val__61032","*recur-frames*-temp-val__61033","G__61034","G__61035","cljs.analyzer/elide-reader-meta","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__61037","map__61038","cljs.analyzer/infer-type","cljs.core.update.cljs$core$IFn$_invoke$arity$3","ms","p1__61036#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__61040#","p1__61041#","aget-validator","aset-validator","p__61042","map__61043","cljs.analyzer/check-invoke-arg-types","vec__61045","map__61048","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.tagged-literals/JSValue","G__61050","cljs.analyzer/analyze*","passes","pass","G__61052","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4","e61053","*cljs-warnings*-orig-val__61054","*cljs-warnings*-temp-val__61055","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__61056","*passes*-temp-val__61057","cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__61058","*private-var-access-nowarn*-temp-val__61059","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__61060","vec__61061","cljs.analyzer/register-specs","cached-ns","map__61064","registry","vars","G__61067","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2","cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3","return-last?","*file-defs*-orig-val__61068","*cljs-ns*-orig-val__61069","*cljs-file*-orig-val__61070","*alias-map*-orig-val__61071","*file-defs*-temp-val__61072","*cljs-ns*-temp-val__61073","*cljs-file*-temp-val__61074","*alias-map*-temp-val__61075","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__61076#"]]],"~:cache-keys",["~#cmap",[["^1V","goog/dom/tagname.js"],[1573417071133,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^W",[]],"~:deps-syms",["^1=","~$goog.dom.HtmlElement"]]],["^1V","cljs/tools/reader/impl/utils.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^1C","^18"]]],["^1V","goog/math/math.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","~$goog.array","~$goog.asserts"]]],["^1V","goog/html/trustedtypes.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","cljs/env.cljc"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<"]]],["^1V","goog/labs/useragent/browser.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1V","goog/html/safeurl.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2@"]]],["^1V","goog/array/array.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2="]]],["^1V","goog/debug/error.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","cljs/tools/reader/edn.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","~$cljs.tools.reader.impl.errors","^1>","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^19","^18","~$goog.string.StringBuffer"]]],["^1V","goog/dom/nodetype.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","cljs/tools/reader/impl/inspect.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<"]]],["^1V","cljs/tools/reader.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^1>","^2H","^2I","^2G","^2<","^18","^2J"]]],["^1V","goog/string/typedstring.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/object/object.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/dom/asserts.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2="]]],"~:SHADOW-TIMESTAMP",[1577302212000,1574477009000],["^1V","goog/math/long.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","~$goog.reflect"]]],["^1V","goog/html/trustedresourceurl.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","~$goog.html.trustedtypes","^2C","^2D","^2E","^2F"]]],["^1V","goog/string/internal.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/functions/functions.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/html/safestyle.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","~$goog.html.SafeUrl","^2E","^2F","^2@"]]],["^1V","goog/dom/safe.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2N","^2B","~$goog.html.uncheckedconversions","^2E","^2@"]]],["^1V","goog/structs/map.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1V","goog/html/safehtml.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","~$goog.dom.TagName","~$goog.dom.tags","^2R","^2S","~$goog.html.SafeStyleSheet","^2N","^2B","^2M","^2C","^2D","~$goog.labs.userAgent.browser","^2?","^2E","^2F","^2@"]]],["^1V","goog/dom/tags.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2?"]]],["^1V","cljs/reader.cljs"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^2?","^19","~$cljs.tools.reader.edn","^2J"]]],["^1V","goog/asserts/asserts.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1V","cljs/tagged_literals.cljc"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^1D"]]],["^1V","goog/uri/uri.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","^18","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/i18n/bidi.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/fs/url.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/base.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",[]]],["^1V","goog/structs/structs.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2?"]]],["^1V","cljs/tools/reader/impl/errors.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^1>","^1C","~$cljs.tools.reader.impl.inspect"]]],["^1V","clojure/string.cljs"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^18","^2J"]]],["^1V","goog/string/string.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","~$goog.dom.safe","^2T","^2E","^2@"]]],["^1V","goog/reflect/reflect.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","goog/labs/useragent/util.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2@"]]],["^1V","goog/string/stringbuffer.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","cljs/tools/reader/reader_types.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^2H","^18","^2J"]]],["^1V","goog/iter/iter.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","^2P","~$goog.math"]]],["^1V","goog/html/uncheckedconversions.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","^2Q","^2R","^2S","^2Y","^2N","^2B","^2E","^2@"]]],["^1V","cljs/tools/reader/impl/commons.cljs"],[1559507883302,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^2G","^1>","^2H"]]],["^1V","goog/dom/htmlelement.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1="]]],["^1V","cljs/core.cljs"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["~$goog.math.Long","~$goog.math.Integer","^18","^2?","^2<","~$goog.Uri","^2J"]]],["^1V","goog/html/safescript.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","^2M","^2E","^2F"]]],["^1V","goog/html/safestylesheet.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","^2S","^2?","^2E","^2F","^2@"]]],["^1V","goog/math/integer.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2L"]]],["^1V","clojure/set.cljs"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<"]]],["^1V","goog/uri/utils.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2<","^2=","^18"]]],["^1V","goog/string/const.js"],[1573417071133,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^2=","^2F"]]],["^1V","cljs/analyzer.cljc"],[1574477009594,"^27",["^ ","^28",null,"^29",["^W",[]],"^2:",["^1=","^1<","^18","^1C","^16","^1?","^1;","^19","^1>","^1D"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env/macros.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer/macros.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/reader.clj",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/binaryage/devtools/0.9.11/devtools-0.9.11.jar!/devtools/defaults.clj",1574477010000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574477009000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1559507883000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1559507883000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",["^ ","^M","^N","^O","^N","^P","^N","^Q","^N","^R","^N","^S","^N","^T","^U"],"^V",["^W",["^T","^X","^Y","^Z"]],"~:shadow/js-access-properties",["^W",["resolve"]],"^[","^10","^13",null,"^14",["^ ","^15","^16","^17","^18","^19","^19","^18","^18","^1:","^1;","^1<","^1<","^1=","^1=","^1>","^1>","^1?","^1?","^16","^16","^1@","^1>","^1;","^1;","^1A","^1?","^1B","^1C","^1C","^1C","^1D","^1D","^1E","^1D","^1F","^19"],"^1G",["^W",["^1H","^1I"]],"~:shadow/js-access-global",["^W",["require","Error"]],"^1J",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1372,"^8",7,"^9",1372,"^:",12,"~:arglists",["^1L",["~$quote",["^1L",[["^1A","~$t"]]]]],"~:tag","~$boolean"],"^[","~$cljs.analyzer/type?","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1L",[["^1A","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1L",[null,null]],"^8",1,"~:variadic?",false,"^7",1372,"~:ret-tag","^48","^9",1372,"~:max-fixed-arity",2,"^47","^48","~:fn-var",true,"^45",["^1L",["^46",["^1L",[["^1A","~$t"]]]]]],"~$invalid-arity?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3622,"^8",8,"^9",3622,"^:",22,"~:private",true,"^45",["^1L",["^46",["^1L",[["~$argc","~$method-params","~$variadic","~$max-fixed-arity"]]]]]],"^4B",true,"^[","~$cljs.analyzer/invalid-arity?","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^4C","^4D","^4E","^4F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3622,"^4>",["^W",[null,"^48"]],"^9",3622,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^4C","^4D","^4E","^4F"]]]]]],"~$record-basis",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3611,"^8",8,"^9",3611,"^:",20,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$tag"]]]]]],"^4B",true,"^[","~$cljs.analyzer/record-basis","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^4I"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3611,"^4>",["^W",[null,"~$clj","~$any"]],"^9",3611,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^4I"]]]]]],"~$get-namespace",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",607,"^8",7,"^9",607,"^:",20,"^45",["^1L",["^46",["^1L",[["~$key"],["~$cenv","^4N"]]]]],"~:top-fn",["^ ","^4=",false,"~:fixed-arity",2,"^4?",2,"^4:",["^1L",[["^4N"],["^4O","^4N"]]],"^45",["^1L",[["^4N"],["^4O","^4N"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/get-namespace","^6","cljs/analyzer.cljc","^:",20,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^4N"],["^4O","^4N"]]],"^45",["^1L",[["^4N"],["^4O","^4N"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^4N"],["^4O","^4N"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"~:methods",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47",["^W",[null,"^4L","~$cljs.core/IMap","~$clj-nil"]]]],"^7",607,"^9",607,"^4?",2,"^4@",true,"^45",["^1L",[["^4N"],["^4O","^4N"]]]],"~$error-message",["^ ","^[","~$cljs.analyzer/error-message","^6","cljs/analyzer.cljc","^7",296,"^8",1,"^9",296,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",296,"^8",11,"^9",296,"^:",24],"^47","~$cljs.core/MultiFn"],"~$->t_cljs$analyzer60188",["^ ","^44",null,"^5",["^ ","~:anonymous",true,"~:protocols",["^W",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^W",["^50","^51","^52"]],"~:factory","~:positional","^45",["^1L",["^46",["^1L",[["~$meta60189"]]]]],"~:doc","Positional factory function for cljs.analyzer/t_cljs$analyzer60188.","^6",null],"^4[",["^W",["^50","^51","^52"]],"^[","~$cljs.analyzer/->t_cljs$analyzer60188","^6","cljs/analyzer.cljc","^4:",["^1L",[["^56"]]],"^4;",null,"^4<",["^1L",[null,null]],"^4Z",true,"^8",6,"^4=",false,"^54","^55","^7",601,"^4>","~$cljs.analyzer/t_cljs$analyzer60188","^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^56"]]]]],"^53",["^W",["^50","^51","^52"]],"^57","Positional factory function for cljs.analyzer/t_cljs$analyzer60188."],"~$elide-reader-meta",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4040,"^8",7,"^9",4040,"^:",24,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-reader-meta","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["~$m"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4040,"^4>",["^W",["^4K","^4U"]],"^9",4040,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"~$missing-rename?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2620,"^8",7,"^9",2620,"^:",22,"^45",["^1L",["^46",["^1L",[["~$sym","^4O"]]]]]],"^[","~$cljs.analyzer/missing-rename?","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^5=","^4O"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2620,"^4>","^48","^9",2620,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5=","^4O"]]]]]],"~$resolve-invokeable-ns",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1128,"^8",7,"^9",1128,"^:",28,"^45",["^1L",["^46",["^1L",[["^1M","~$current-ns","^1A"]]]]]],"^[","~$cljs.analyzer/resolve-invokeable-ns","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^1M","^5@","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1128,"^9",1128,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M","^5@","^1A"]]]]]],"~$analyze-let",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2337,"^8",7,"^9",2337,"^:",18,"^45",["^1L",["^46",["^1L",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1Q","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^[","~$cljs.analyzer/analyze-let","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^5C","~$p__60537","^5G","^5H"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2337,"^4>","^4T","^9",2337,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5C",["~$_","^5D","~$&","^5E","^1Q","^5F"],"^5G","^5H"]]]]]],"~$var-meta",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1473,"^8",7,"^9",1473,"^:",15,"^45",["^1L",["^46",["^1L",[["~$var"],["^5L","~$expr-env"]]]]],"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^5L"],["^5L","^5M"]]],"^45",["^1L",[["^5L"],["^5L","^5M"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/var-meta","^6","cljs/analyzer.cljc","^:",15,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^5L"],["^5L","^5M"]]],"^45",["^1L",[["^5L"],["^5L","^5M"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^5L"],["^5L","^5M"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47",["^W",["^4L","^4U"]]]],"^7",1473,"^9",1473,"^4?",2,"^4@",true,"^45",["^1L",[["^5L"],["^5L","^5M"]]]],"~$desugar-ns-specs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2971,"^8",7,"^9",2971,"^:",23,"^45",["^1L",["^46",["^1L",[["~$args"]]]]],"^57","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^[","~$cljs.analyzer/desugar-ns-specs","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^5P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2971,"^4>",["^W",[null,"~$cljs.core/LazySeq"]],"^9",2971,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5P"]]]]],"^57","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",735,"^8",8,"^9",735,"^:",35,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$warn-acc"]]]]]],"^4B",true,"^[","~$cljs.analyzer/replay-accumulated-warnings","^6","cljs/analyzer.cljc","^:",35,"^4:",["^1L",[["^5T"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",735,"^4>","^4U","^9",735,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5T"]]]]]],"~$js-tag?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",919,"^8",7,"^9",919,"^:",14,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/js-tag?","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",919,"^4>","^48","^9",919,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3307,"^8",8,"^9",3307,"^:",25,"^4B",true,"^45",["^1L",["^46",["^1L",[[["~$target","~$member","^5P"]]]]]]],"^4B",true,"^[","~$cljs.analyzer/classify-dot-form","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["~$p__60883"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3307,"^4>","~$cljs.core/IVector","^9",3307,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^5Y","^5Z","^5P"]]]]]]],"~$NUMBER_SYM",["^ ","^[","~$cljs.analyzer/NUMBER_SYM","^6","cljs/analyzer.cljc","^7",221,"^8",4,"^9",221,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",221,"^8",9,"^9",221,"^:",19],"^47","~$cljs.core/Symbol"],"~$ensure-defs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4667,"^8",7,"^9",4667,"^:",18,"^45",["^1L",["^46",["^1L",[["^1M"]]]]],"^57","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^[","~$cljs.analyzer/ensure-defs","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^1M"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4667,"^4>",["^W",[null,"^4L"]],"^9",4667,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M"]]]]],"^57","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3966,"^8",7,"^9",3966,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-map","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3966,"^4>","^4L","^9",3966,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$NUMERIC_SET",["^ ","^[","~$cljs.analyzer/NUMERIC_SET","^6","cljs/analyzer.cljc","^7",3464,"^8",1,"^9",3464,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3464,"^8",6,"^9",3464,"^:",17],"^47","~$cljs.core/ISet"],"~$analyze-record",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4028,"^8",7,"^9",4028,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","~$x"]]]]]],"^[","~$cljs.analyzer/analyze-record","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4028,"^4>","^4T","^9",4028,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","~$x"]]]]]],"~$analyze-seq*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3932,"^8",7,"^9",3932,"^:",19,"^45",["^1L",["^46",["^1L",[["~$op","^1A","^5F","~$name","~$opts"]]]]]],"^[","~$cljs.analyzer/analyze-seq*","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^6?","^1A","^5F","^6@","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3932,"^4>","^4L","^9",3932,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6?","^1A","^5F","^6@","^6A"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",68,"^8",6,"^9",68,"^:",22],"^[","~$cljs.analyzer/constants-ns-sym","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",68,"^9",68,"^47","^64","^57","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1044,"^8",7,"^9",1044,"^:",20,"^45",["^1L",["^46",["^1L",[["^1M","^5="]]]]],"^57","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^[","~$cljs.analyzer/resolve-alias","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^1M","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1044,"^4>",["^W",[null,"^4L"]],"^9",1044,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M","^5="]]]]],"^57","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",30,"~:dynamic",true],"^[","~$cljs.analyzer/*cljs-dep-set*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^6H",true,"^7",58,"^9",58,"^47","^4L"],"~$resolve-var",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1156,"^8",7,"^9",1156,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^5="],["^1A","^5=","~$confirm"]]]]],"^57","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^45",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/resolve-var","^6","cljs/analyzer.cljc","^:",18,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^45",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",["^4K","^4L","^4T","^4U"]]]],"^7",1156,"^9",1156,"^4?",3,"^4@",true,"^45",["^1L",[["^1A","^5="],["^1A","^5=","^6K"]]],"^57","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars."],"~$analyze-fn-method",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2043,"^8",8,"^9",2043,"^:",25,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","~$locals","^5F","~$type","~$analyze-body?"]]]]]],"^4B",true,"^[","~$cljs.analyzer/analyze-fn-method","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^1A","^6N","^5F","^6O","^6P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2043,"^4>",["^W",["^4L","^4U"]],"^9",2043,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^6N","^5F","^6O","^6P"]]]]]],"~$JS_STAR_SYM",["^ ","^[","~$cljs.analyzer/JS_STAR_SYM","^6","cljs/analyzer.cljc","^7",229,"^8",4,"^9",229,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",229,"^8",9,"^9",229,"^:",20],"^47","^64"],"~$js-star-seg",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3454,"^8",7,"^9",3454,"^:",18,"^45",["^1L",["^46",["^1L",[["~$s"]]]]]],"^[","~$cljs.analyzer/js-star-seg","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["~$s"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3454,"^4>","^4K","^9",3454,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",836,"^8",7,"^9",836,"^:",30,"^45",["^1L",["^46",["^1L",[["~$module"]]]]]],"^[","~$cljs.analyzer/dep-has-global-exports?","^6","cljs/analyzer.cljc","^:",30,"^4:",["^1L",[["^6W"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",836,"^4>","^48","^9",836,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6W"]]]]]],"~$register-specs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4577,"^8",7,"^9",4577,"^:",21,"^45",["^1L",["^46",["^1L",[["~$cached-ns"]]]]],"^57","Registers speced vars found in a namespace analysis cache."],"^[","~$cljs.analyzer/register-specs","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^6Z"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4577,"^4>",["^W",[null,"^4L","^4U"]],"^9",4577,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6Z"]]]]],"^57","Registers speced vars found in a namespace analysis cache."],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",24,"^6H",true],"^[","~$cljs.analyzer/*passes*","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^6H",true,"^7",64,"^9",64,"^47","^4L"],"~$has-extern?*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",977,"^8",7,"^9",977,"^:",19,"^45",["^1L",["^46",["^1L",[["~$pre","~$externs"],["^73","^74","~$top"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^73","^74"],["^73","^74","^75"]]],"^45",["^1L",[["^73","^74"],["^73","^74","^75"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/has-extern?*","^6","cljs/analyzer.cljc","^:",19,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^73","^74"],["^73","^74","^75"]]],"^45",["^1L",[["^73","^74"],["^73","^74","^75"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^73","^74"],["^73","^74","^75"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",["^48","^4L"]]]],"^7",977,"^9",977,"^4?",3,"^4@",true,"^45",["^1L",[["^73","^74"],["^73","^74","^75"]]]],"~$handle-symbol-local",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1151,"^8",7,"^9",1151,"^:",26,"^45",["^1L",["^46",["^1L",[["^5=","~$lb"]]]]]],"^[","~$cljs.analyzer/handle-symbol-local","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["^5=","^78"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1151,"^4>",["^W",[null,"^4T"]],"^9",1151,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5=","^78"]]]]]],"~$get-expander-ns",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3781,"^8",7,"^9",3781,"^:",22,"^45",["^1L",["^46",["^1L",[["^1A","~$nstr"]]]]]],"^[","~$cljs.analyzer/get-expander-ns","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^1A","^7;"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3781,"^4>",["^W",["~$cljs.core/Namespace","^4L","^4U"]],"^9",3781,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^7;"]]]]]],"~$message",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",719,"^8",7,"^9",719,"^:",14,"^45",["^1L",["^46",["^1L",[["^1A","~$s"]]]]]],"^[","~$cljs.analyzer/message","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["^1A","~$s"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",719,"^4>","^1B","^9",719,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","~$s"]]]]]],"~$parse-invoke",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3688,"^8",7,"^9",3688,"^:",19,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/parse-invoke","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3688,"^9",3688,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",522,"^8",16,"^9",522,"^:",39,"^6H",true],"^[","~$cljs.analyzer/*cljs-warning-handlers*","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^6H",true,"^7",522,"^9",522,"^47","^4L"],"~$analyze-seq*-wrap",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3937,"^8",7,"^9",3937,"^:",24,"^45",["^1L",["^46",["^1L",[["^6?","^1A","^5F","^6@","^6A"]]]]]],"^[","~$cljs.analyzer/analyze-seq*-wrap","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^6?","^1A","^5F","^6@","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3937,"^9",3937,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6?","^1A","^5F","^6@","^6A"]]]]]],"~$confirm-bindings",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1279,"^8",7,"^9",1279,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","~$names"]]]]],"^57","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^[","~$cljs.analyzer/confirm-bindings","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^1A","^7G"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1279,"^4>","^4U","^9",1279,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^7G"]]]]],"^57","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1003,"^8",7,"^9",1003,"^:",18,"^45",["^1L",["^46",["^1L",[["^73"],["^73","^74"]]]]],"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^73"],["^73","^74"]]],"^45",["^1L",[["^73"],["^73","^74"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/has-extern?","^6","cljs/analyzer.cljc","^:",18,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^73"],["^73","^74"]]],"^45",["^1L",[["^73"],["^73","^74"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^73"],["^73","^74"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47",["^W",["^48","^4L"]]]],"^7",1003,"^9",1003,"^4?",2,"^4@",true,"^45",["^1L",[["^73"],["^73","^74"]]]],"~$foreign-dep?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2567,"^8",7,"^9",2567,"^:",19,"^45",["^1L",["^46",["^1L",[["~$dep"]]]]],"^47","^48"],"^[","~$cljs.analyzer/foreign-dep?","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^7L"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2567,"^4>","^48","^9",2567,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^7L"]]]]]],"~$missing-rename-macro?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2631,"^8",7,"^9",2631,"^:",28,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"^[","~$cljs.analyzer/missing-rename-macro?","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2631,"^4>","^48","^9",2631,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"~$missing-uses",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2638,"^8",7,"^9",2638,"^:",19,"^45",["^1L",["^46",["^1L",[["~$uses","^1A"]]]]]],"^[","~$cljs.analyzer/missing-uses","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^7Q","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2638,"^4>",["^W",[null,"^4K","^4L"]],"^9",2638,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^7Q","^1A"]]]]]],"~$get-macroexpand-check-var",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3833,"^8",12,"^9",3833,"^:",37,"^45",["^1L",["^46",["^1L",[[]]]]]],"^[","~$cljs.analyzer/get-macroexpand-check-var","^6","cljs/analyzer.cljc","^:",37,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",6,"^4=",false,"^7",3833,"^4>",["^W",["^4L","^4U"]],"^9",3833,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]]],"~$missing-use?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2612,"^8",7,"^9",2612,"^:",19,"^45",["^1L",["^46",["^1L",[["~$lib","^5=","^4O"]]]]]],"^[","~$cljs.analyzer/missing-use?","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^7V","^5=","^4O"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2612,"^4>","^48","^9",2612,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^7V","^5=","^4O"]]]]]],"~$hex-format",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",536,"^8",8,"^9",536,"^:",18,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$s","~$pad"]]]]]],"^4B",true,"^[","~$cljs.analyzer/hex-format","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["~$s","^7Y"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",536,"^4>","^1B","^9",536,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$s","^7Y"]]]]]],"~$es5-allowed",["^ ","^[","~$cljs.analyzer/es5-allowed","^6","cljs/analyzer.cljc","^7",191,"^8",1,"^9",191,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",191,"^8",6,"^9",191,"^:",17],"^47","^6;"],"~$NEW_SYM",["^ ","^[","~$cljs.analyzer/NEW_SYM","^6","cljs/analyzer.cljc","^7",235,"^8",4,"^9",235,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",235,"^8",9,"^9",235,"^:",16],"^47","^64"],"~$source-info->error-data",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",700,"^8",8,"^9",700,"^:",31,"^4B",true,"^45",["^1L",["^46",["^1L",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^4B",true,"^[","~$cljs.analyzer/source-info->error-data","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[["~$p__60206"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",700,"^4>","^4T","^9",700,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^85","^86","^87"]]]]]]]],"~$get-spec-vars",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4550,"^8",13,"^9",4550,"^:",26,"^4B",true,"^45",["^1L",["^46",["^1L",[[]]]]]],"^4B",true,"^[","~$cljs.analyzer/get-spec-vars","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",6,"^4=",false,"^7",4550,"^4>",["^W",["^4T","^4U"]],"^9",4550,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]]],"~$analyze",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4203,"^8",7,"^9",4203,"^:",14,"^45",["^1L",["^46",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]]]],"^57","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^45",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4<",["^1L",[null,null,null]]]],"^[","~$cljs.analyzer/analyze","^6","cljs/analyzer.cljc","^:",14,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^45",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4<",["^1L",[null,null,null]]],"^4:",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false]],"^7",4203,"^9",4203,"^4?",4,"^4@",true,"^45",["^1L",[["^1A","^5F"],["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^57","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set."],"~$used?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3775,"^8",7,"^9",3775,"^:",12,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^47","^48"],"^[","~$cljs.analyzer/used?","^6","cljs/analyzer.cljc","^:",12,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3775,"^4>","^48","^9",3775,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"~$node-module-dep?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",824,"^8",7,"^9",824,"^:",23,"^45",["^1L",["^46",["^1L",[["^6W"]]]]],"^47","^48"],"^[","~$cljs.analyzer/node-module-dep?","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^6W"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",824,"^4>","^48","^9",824,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^6W"]]]]]],"~$parse-type",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3258,"^8",7,"^9",3258,"^:",17,"^45",["^1L",["^46",["^1L",[["^6?","^1A",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1Q","^5F"]]]]]]],"^[","~$cljs.analyzer/parse-type","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^6?","^1A","~$p__60876"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3258,"^4>","^4T","^9",3258,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6?","^1A",["~$_","^8C","^8D","^8E","^8F","^1Q","^5F"]]]]]]],"~$t_cljs$analyzer60188",["^ ","~:num-fields",1,"^4[",["^W",["^50","^51","^52"]],"^[","^59","^6","cljs/analyzer.cljc","~:type",true,"^4Z",true,"^8",6,"^7",601,"~:record",false,"^47","~$function","^53",["^W",["^50","^51","^52"]]],"~$gets",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",197,"^8",7,"^9",197,"^:",11,"^45",["^1L",["^46",["^1L",[["~$m","~$k0","~$k1"],["~$m","^8O","^8P","~$k2"],["~$m","^8O","^8P","^8Q","~$k3"]]]]],"^4P",["^ ","^4=",false,"^4Q",5,"^4?",5,"^4:",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]],"^45",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]],"^4<",["^1L",[null,null,null]]]],"^[","~$cljs.analyzer/gets","^6","cljs/analyzer.cljc","^:",11,"^4P",["^ ","^4=",false,"^4Q",5,"^4?",5,"^4:",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]],"^45",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]],"^4<",["^1L",[null,null,null]]],"^4:",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]],"^4;",null,"^4Q",5,"^4<",["^1L",[null,null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",3,"^4=",false,"^47",["^W",["^4L","^4U"]]],["^ ","^4Q",4,"^4=",false,"^47",["^W",["^4L","^4U"]]],["^ ","^4Q",5,"^4=",false,"^47",["^W",["^4L","^4U"]]]],"^7",197,"^9",197,"^4?",5,"^4@",true,"^45",["^1L",[["~$m","^8O","^8P"],["~$m","^8O","^8P","^8Q"],["~$m","^8O","^8P","^8Q","^8R"]]]],"~$check-rename-macros-inferring-missing",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2701,"^8",7,"^9",2701,"^:",44,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6@","~$renames"],"^1Q","~$ast"],"^1A"]]]]]],"^[","~$cljs.analyzer/check-rename-macros-inferring-missing","^6","cljs/analyzer.cljc","^:",44,"^4:",["^1L",[["~$p__60696","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2701,"^4>",["^W",["^4K","^4L"]],"^9",2701,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6@","^8U"],"^1Q","^8V"],"^1A"]]]]]],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1334,"^8",16,"^9",1334,"^:",26,"^6H",true],"^[","~$cljs.analyzer/*allow-ns*","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^6H",true,"^7",1334,"^9",1334,"^47","^4L"],"~$analyze-const",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2428,"^8",7,"^9",2428,"^:",20,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-const","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2428,"^4>","^4T","^9",2428,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$simple-predicate-induced-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1588,"^8",8,"^9",1588,"^:",36,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","~$test"]]]]],"^57","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^4B",true,"^[","~$cljs.analyzer/simple-predicate-induced-tag","^6","cljs/analyzer.cljc","^:",36,"^4:",["^1L",[["^1A","^92"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1588,"^4>",["^W",["^61","^4U"]],"^9",1588,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1430,"^8",7,"^9",1430,"^:",19,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","~$f","~:fn","^84",["^5P"],"^1Q","~$e"]]]]]]],"^[","~$cljs.analyzer/infer-invoke","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^1A","~$p__60282"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1430,"^4>",["^W",["^4L","^64","^4U"]],"^9",1430,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","~$f","^95","^84",["^5P"],"^1Q","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",33,"^6H",true],"^[","~$cljs.analyzer/*cljs-static-fns*","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^6H",true,"^7",54,"^9",54,"^47","^4L"],"~$array-types",["^ ","^[","~$cljs.analyzer/array-types","^6","cljs/analyzer.cljc","^7",3488,"^8",1,"^9",3488,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3488,"^8",6,"^9",3488,"^:",17],"^47","^6;"],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",35,"^6H",true],"^[","~$cljs.analyzer/*check-alias-dupes*","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^6H",true,"^7",53,"^9",53,"^47","^4L"],"~$macro-ns-name",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3033,"^8",7,"^9",3033,"^:",20,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"^[","~$cljs.analyzer/macro-ns-name","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^6@"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3033,"^4>",["^W",[null,"^4L","^64"]],"^9",3033,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",31,"^6H",true],"^[","~$cljs.analyzer/*reload-macros*","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^6H",true,"^7",62,"^9",62,"^47","^4L"],"~$resolve-existing-var",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1271,"^8",7,"^9",1271,"^:",27,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^[","~$cljs.analyzer/resolve-existing-var","^6","cljs/analyzer.cljc","^:",27,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1271,"^4>",["^W",["^4K","^4L","^4T","^4U"]],"^9",1271,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1114,"^8",7,"^9",1114,"^:",16,"^45",["^1L",["^46",["^1L",[["^1M","^1A"]]]]]],"^[","~$cljs.analyzer/required?","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^1M","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1114,"^4>","^48","^9",1114,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M","^1A"]]]]]],"~$NOT_NATIVE",["^ ","^[","~$cljs.analyzer/NOT_NATIVE","^6","cljs/analyzer.cljc","^7",1388,"^8",1,"^9",1388,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1388,"^8",6,"^9",1388,"^:",16],"^47","^6;"],"~$IGNORE_SYM",["^ ","^[","~$cljs.analyzer/IGNORE_SYM","^6","cljs/analyzer.cljc","^7",243,"^8",1,"^9",243,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",243,"^8",6,"^9",243,"^:",16],"^47","^64"],"~$parse-invoke*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3627,"^8",7,"^9",3627,"^:",20,"^45",["^1L",["^46",["^1L",[["^1A",["~$f","~$&","^5P","^1Q","^5F"]]]]]]],"^[","~$cljs.analyzer/parse-invoke*","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^1A","~$p__60947"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3627,"^4>",["^W",[null,"^4L","^4T"]],"^9",3627,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A",["~$f","~$&","^5P","^1Q","^5F"]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",52,"^8",16,"^9",52,"^:",32,"^6H",true],"^[","~$cljs.analyzer/*checked-arrays*","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^6H",true,"^7",52,"^9",52,"^47","^4L"],"~$ast-children",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1792,"^8",7,"^9",1792,"^:",19,"^45",["^1L",["^46",["^1L",[["^8V"]]]]]],"^[","~$cljs.analyzer/ast-children","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^8V"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1792,"^4>","^4L","^9",1792,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^8V"]]]]]],"~$loaded-js-ns?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",797,"^8",7,"^9",797,"^:",20,"^45",["^1L",["^46",["^1L",[["^1A","~$prefix"]]]]],"^57","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^47","^48"],"^[","~$cljs.analyzer/loaded-js-ns?","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^1A","^9R"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",797,"^4>","^48","^9",797,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^9R"]]]]],"^57","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3984,"^8",7,"^9",3984,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-vector","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3984,"^4>","^4L","^9",3984,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$unwrap-quote",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1392,"^8",7,"^9",1392,"^:",19,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","~$expr"]]]]]]],"^[","~$cljs.analyzer/unwrap-quote","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["~$p__60273"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1392,"^4>",["^W",[null,"^4L"]],"^9",1392,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","^9W"]]]]]]],"~$namespaces",["^ ","^[","~$cljs.analyzer/namespaces","^6","cljs/analyzer.cljc","^7",593,"^8",1,"^9",593,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",593,"^8",6,"^9",593,"^:",16],"^47","^59"],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1524,"^8",16,"^9",1524,"^:",30,"^4B",true],"^4B",true,"^[","~$cljs.analyzer/predicate->tag","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1524,"^9",1524,"^47","^4T"],"~$record-with-field?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3617,"^8",8,"^9",3617,"^:",26,"^4B",true,"^45",["^1L",["^46",["^1L",[["^4I","~$field"]]]]]],"^4B",true,"^[","~$cljs.analyzer/record-with-field?","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["^4I","^:3"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3617,"^4>","^48","^9",3617,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^4I","^:3"]]]]]],"~$elide-analyzer-meta",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4043,"^8",7,"^9",4043,"^:",26,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-analyzer-meta","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["~$m"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4043,"^4>",["^W",["^4K","^4U"]],"^9",4043,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"~$ns->relpath",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",268,"^8",10,"^9",268,"^:",21,"^45",["^1L",["^46",["^1L",[["^1M"],["^1M","~$ext"]]]]],"^57","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1M"],["^1M","^:8"]]],"^45",["^1L",[["^1M"],["^1M","^:8"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/ns->relpath","^6","cljs/analyzer.cljc","^:",21,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1M"],["^1M","^:8"]]],"^45",["^1L",[["^1M"],["^1M","^:8"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1M"],["^1M","^:8"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47","^1B"]],"^7",268,"^9",268,"^4?",2,"^4@",true,"^45",["^1L",[["^1M"],["^1M","^:8"]]],"^57","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs."],"~$compile-syntax-error",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",747,"^8",8,"^9",747,"^:",28,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","~$msg","~$symbol"]]]]]],"^4B",true,"^[","~$cljs.analyzer/compile-syntax-error","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^1A","^:;","^:<"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",747,"^4>","~$cljs.core/ExceptionInfo","^9",747,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:;","^:<"]]]]]],"~$analyze-let-body",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2332,"^8",7,"^9",2332,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","~$context","^5E","~$recur-frames","~$loop-lets"]]]]]],"^[","~$cljs.analyzer/analyze-let-body","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^1A","^:@","^5E","^:A","^:B"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2332,"^9",2332,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:@","^5E","^:A","^:B"]]]]]],"~$cljs-set?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",260,"^8",19,"^9",260,"^:",28,"^47","^48","^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-set?","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",260,"^4>","^48","^9",260,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$get-col",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",631,"^8",7,"^9",631,"^:",14,"^45",["^1L",["^46",["^1L",[["~$x","^1A"]]]]]],"^[","~$cljs.analyzer/get-col","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["~$x","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",631,"^4>","^4L","^9",631,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x","^1A"]]]]]],"~$type-check-induced-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1605,"^8",8,"^9",1605,"^:",30,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"^4B",true,"^[","~$cljs.analyzer/type-check-induced-tag","^6","cljs/analyzer.cljc","^:",30,"^4:",["^1L",[["^1A","^92"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1605,"^4>",["^W",["^61","^4U"]],"^9",1605,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2723,"^8",7,"^9",2723,"^:",29,"^45",["^1L",["^46",["^1L",[["^1A","~$macros?","~$spec"]]]]]],"^[","~$cljs.analyzer/basic-validate-ns-spec","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^1A","^:K","^:L"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2723,"^4>","^4U","^9",2723,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:K","^:L"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",124,"^8",16,"^9",124,"^:",31,"^6H",true],"^[","~$cljs.analyzer/*cljs-warnings*","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^6H",true,"^7",124,"^9",124,"^47","^4L"],"~$alias->type",["^ ","^[","~$cljs.analyzer/alias->type","^6","cljs/analyzer.cljc","^7",968,"^8",1,"^9",968,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",968,"^8",6,"^9",968,"^:",17],"^47","^4T"],"~$analyzed?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3585,"^8",7,"^9",3585,"^:",16,"^45",["^1L",["^46",["^1L",[["~$x"]]]]],"^57","Returns boolean if the form has already been marked as analyzed.","^47","^48"],"^[","~$cljs.analyzer/analyzed?","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3585,"^4>","^48","^9",3585,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]],"^57","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2575,"^8",7,"^9",2575,"^:",19,"^45",["^1L",["^46",["^1L",[["^7V","~$deps","^1A"],["^7V","^:U","^1A","^6A"]]]]],"^57","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^45",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/analyze-deps","^6","cljs/analyzer.cljc","^:",19,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^45",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",3,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false]],"^7",2575,"^9",2575,"^4?",4,"^4@",true,"^45",["^1L",[["^7V","^:U","^1A"],["^7V","^:U","^1A","^6A"]]],"^57","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces."],"~$array-type?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3491,"^8",7,"^9",3491,"^:",18,"^45",["^1L",["^46",["^1L",[["~$t"]]]]],"^47","^48"],"^[","~$cljs.analyzer/array-type?","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["~$t"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3491,"^4>","^48","^9",3491,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1029,"^8",7,"^9",1029,"^:",21,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"^[","~$cljs.analyzer/dotted-symbol?","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1029,"^4>","^48","^9",1029,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",42,"^6H",true],"^[","~$cljs.analyzer/*cljs-macros-is-classpath*","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^6H",true,"^7",57,"^9",57,"^47","^4L"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1333,"^8",16,"^9",1333,"^:",29,"^6H",true],"^[","~$cljs.analyzer/*allow-redef*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^6H",true,"^7",1333,"^9",1333,"^47","^4L"],"~$analyze-fn-method-body",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2039,"^8",7,"^9",2039,"^:",29,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^:A"]]]]]],"^[","~$cljs.analyzer/analyze-fn-method-body","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^1A","^5F","^:A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2039,"^9",2039,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^:A"]]]]]],"~$infer-type",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4060,"^8",7,"^9",4060,"^:",17,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","^84",["^4I"],"^1Q","^8V"],"~$_"]]]]]],"^[","~$cljs.analyzer/infer-type","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^1A","~$p__61037","~$_"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4060,"^4>",["^W",[null,"^4K","^4L"]],"^9",4060,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","^84",["^4I"],"^1Q","^8V"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2883,"^8",7,"^9",2883,"^:",24,"^45",["^1L",["^46",["^1L",[["^1A","^:U","^:L"]]]]]],"^[","~$cljs.analyzer/parse-import-spec","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^1A","^:U","^:L"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2883,"^4>","^4T","^9",2883,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:U","^:L"]]]]]],"~$clj-ns->cljs-ns",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2915,"^8",7,"^9",2915,"^:",22,"^45",["^1L",["^46",["^1L",[["^5="]]]]],"^57","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^[","~$cljs.analyzer/clj-ns->cljs-ns","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2915,"^4>",["^W",[null,"^4L","^64"]],"^9",2915,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]],"^57","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1800,"^8",7,"^9",1800,"^:",22,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","^8V"]]]]]]],"^[","~$cljs.analyzer/constant-value?","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["~$p__60410"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1800,"^4>",["^W",["^48","^4L"]],"^9",1800,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","^8V"]]]]]]],"~$dump-specs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4555,"^8",7,"^9",4555,"^:",17,"^45",["^1L",["^46",["^1L",[["^1M"]]]]],"^57","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^[","~$cljs.analyzer/dump-specs","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^1M"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4555,"^4>",["^W",[null,"^4L"]],"^9",4555,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M"]]]]],"^57","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",34,"^6H",true],"^[","~$cljs.analyzer/*fn-invoke-direct*","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^6H",true,"^7",55,"^9",55,"^47","^4L"],"~$use->require",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2793,"^8",7,"^9",2793,"^:",19,"^45",["^1L",["^46",["^1L",[["^1A",["^7V","~$&","~$filters","^1Q","^:L"]]]]]]],"^[","~$cljs.analyzer/use->require","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^1A","~$p__60713"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2793,"^4>","^4L","^9",2793,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A",["^7V","~$&","^;D","^1Q","^:L"]]]]]]],"~$inferred-use-macros",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2654,"^8",7,"^9",2654,"^:",26,"^45",["^1L",["^46",["^1L",[["~$use-macros","^1A"]]]]]],"^[","~$cljs.analyzer/inferred-use-macros","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["^;H","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2654,"^4>",["^W",[null,"^4K","^4L"]],"^9",2654,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^;H","^1A"]]]]]],"~$error-data",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",738,"^8",8,"^9",738,"^:",18,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","~$phase"],["^1A","^;K","^:<"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]],"^45",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]],"^4<",["^1L",[null,null]]]],"^4B",true,"^[","~$cljs.analyzer/error-data","^6","cljs/analyzer.cljc","^:",18,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]],"^45",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",["^4L","^4U"]]]],"^7",738,"^9",738,"^4?",3,"^4@",true,"^45",["^1L",[["^1A","^;K"],["^1A","^;K","^:<"]]]],"~$analyze-symbol",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3719,"^8",7,"^9",3719,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Finds the var associated with sym"],"^[","~$cljs.analyzer/analyze-symbol","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3719,"^4>",["^W",["^4L","^4U"]],"^9",3719,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1625,"^8",8,"^9",1625,"^:",25,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Refine a tag to exclude clj-nil if the test is a local."],"^4B",true,"^[","~$cljs.analyzer/truth-induced-tag","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^1A","^92"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1625,"^4>",["^W",["^61","^4U"]],"^9",1625,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Refine a tag to exclude clj-nil if the test is a local."],"~$confirm-var-exists",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",842,"^8",7,"^9",842,"^:",25,"^45",["^1L",["^46",["^1L",[["^1A","^9R","~$suffix"],["^1A","^9R","^;R","~$missing-fn"]]]]],"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]],"^45",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/confirm-var-exists","^6","cljs/analyzer.cljc","^:",25,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]],"^45",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",3,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false,"^47",["^W",["^4L","^4U"]]]],"^7",842,"^9",842,"^4?",4,"^4@",true,"^45",["^1L",[["^1A","^9R","^;R"],["^1A","^9R","^;R","^;S"]]]],"~$analyze-keyword",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1349,"^8",7,"^9",1349,"^:",22,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"^[","~$cljs.analyzer/analyze-keyword","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1349,"^4>","^4T","^9",1349,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"~$SENTINEL",["^ ","^[","~$cljs.analyzer/SENTINEL","^6","cljs/analyzer.cljc","^7",195,"^8",10,"^9",195,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",195,"^8",15,"^9",195,"^:",23],"^47","~$object"],"~$analyze-let-bindings",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2326,"^8",7,"^9",2326,"^:",27,"^45",["^1L",["^46",["^1L",[["^5C","^5D","^6?"]]]]]],"^[","~$cljs.analyzer/analyze-let-bindings","^6","cljs/analyzer.cljc","^:",27,"^4:",["^1L",[["^5C","^5D","^6?"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2326,"^9",2326,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5C","^5D","^6?"]]]]]],"~$munge-global-export",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1040,"^8",7,"^9",1040,"^:",26,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"^[","~$cljs.analyzer/munge-global-export","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["^6@"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1040,"^4>","^1B","^9",1040,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1332,"^8",16,"^9",1332,"^:",27,"^6H",true],"^[","~$cljs.analyzer/*loop-lets*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^6H",true,"^7",1332,"^9",1332,"^47","^4L"],"~$->type-set",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",933,"^8",7,"^9",933,"^:",17,"^45",["^1L",["^46",["^1L",[["~$t"]]]]],"^57","Ensures that a type tag is a set."],"^[","~$cljs.analyzer/->type-set","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["~$t"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",933,"^4>",["^W",[null,"^6;"]],"^9",933,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$t"]]]]],"^57","Ensures that a type tag is a set."],"~$js-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1014,"^8",7,"^9",1014,"^:",13,"^45",["^1L",["^46",["^1L",[["^73"],["^73","~$tag-type"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]]]],"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]],"^45",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]],"^4<",["^1L",[null,null,null,null]]]],"^[","~$cljs.analyzer/js-tag","^6","cljs/analyzer.cljc","^:",13,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]],"^45",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]],"^4<",["^1L",[null,null,null,null]]],"^4:",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null,null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false,"^47",["^W",["^4L","^64","^4U"]]]],"^7",1014,"^9",1014,"^4?",4,"^4@",true,"^45",["^1L",[["^73"],["^73","^<7"],["^73","^<7","^74"],["^73","^<7","^74","^75"]]]],"^X",["^ ","^[","~$cljs.analyzer/js-reserved","^6","cljs/analyzer.cljc","^7",176,"^8",1,"^9",176,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",176,"^8",6,"^9",176,"^:",17],"^47","^6;"],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",28,"^6H",true],"^[","~$cljs.analyzer/*load-tests*","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^6H",true,"^7",60,"^9",60,"^47","^4L"],"~$check-use-macros-inferring-missing",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2683,"^8",7,"^9",2683,"^:",41,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6@","^7Q","^;H"],"^1Q","^8V"],"^1A"]]]]]],"^[","~$cljs.analyzer/check-use-macros-inferring-missing","^6","cljs/analyzer.cljc","^:",41,"^4:",["^1L",[["~$p__60690","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2683,"^4>",["^W",["^4K","^4L"]],"^9",2683,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6@","^7Q","^;H"],"^1Q","^8V"],"^1A"]]]]]],"~$canonicalize-type",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",941,"^8",7,"^9",941,"^:",24,"^45",["^1L",["^46",["^1L",[["~$t"]]]]]],"^[","~$cljs.analyzer/canonicalize-type","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["~$t"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",941,"^4>",["^W",[null,"^4K","^4L","^64","^4U"]],"^9",941,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3864,"^8",7,"^9",3864,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/macroexpand-1*","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3864,"^4>",["^W",[null,"^4K","~$cljs.core/MetaFn","^4U"]],"^9",3864,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$var->sym",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3837,"^8",8,"^9",3837,"^:",16,"^4B",true,"^45",["^1L",["^46",["^1L",[["^5L"]]]]]],"^4B",true,"^[","~$cljs.analyzer/var->sym","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^5L"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3837,"^4>","^4L","^9",3837,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5L"]]]]]],"~$check-use-macros",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2670,"^8",7,"^9",2670,"^:",23,"^45",["^1L",["^46",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]],"^45",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/check-use-macros","^6","cljs/analyzer.cljc","^:",23,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]],"^45",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",[null,"^4K","^4L"]]]],"^7",2670,"^9",2670,"^4?",3,"^4@",true,"^45",["^1L",[["^;H","^1A"],["^;H","^7P","^1A"]]]],"~$get-expander",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3821,"^8",7,"^9",3821,"^:",19,"^45",["^1L",["^46",["^1L",[["^5=","^1A"]]]]],"^57","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^[","~$cljs.analyzer/get-expander","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^5=","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3821,"^4>",["^W",["^4L","^4U"]],"^9",3821,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5=","^1A"]]]]],"^57","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3548,"^8",7,"^9",3548,"^:",22,"^45",["^1L",["^46",["^1L",[["^1A","~$jsform","^5P","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-js-star","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^1A","^<K","^5P","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3548,"^9",3548,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^<K","^5P","^5F"]]]]]],"~$cljs-map?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",252,"^8",19,"^9",252,"^:",28,"^47","^48","^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-map?","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",252,"^4>","^48","^9",252,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$do-macroexpand-check",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3841,"^8",8,"^9",3841,"^:",28,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F","~$mac-var"]]]]]],"^4B",true,"^[","~$cljs.analyzer/do-macroexpand-check","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^1A","^5F","^<P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3841,"^4>",["^W",[null,"^4U"]],"^9",3841,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^<P"]]]]]],"~$build-dot-form",["^ ","^[","~$cljs.analyzer/build-dot-form","^6","cljs/analyzer.cljc","^7",3318,"^8",1,"^9",3318,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3318,"^8",11,"^9",3318,"^:",25],"^47","^4X"],"~$register-constant!",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",565,"^8",8,"^9",565,"^:",26,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$val"],["^1A","^<U"]]]]],"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^<U"],["^1A","^<U"]]],"^45",["^1L",[["^<U"],["^1A","^<U"]]],"^4<",["^1L",[null,null]]]],"^4B",true,"^[","~$cljs.analyzer/register-constant!","^6","cljs/analyzer.cljc","^:",26,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^<U"],["^1A","^<U"]]],"^45",["^1L",[["^<U"],["^1A","^<U"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^<U"],["^1A","^<U"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47",["^W",[null,"^4L"]]]],"^7",565,"^9",565,"^4?",2,"^4@",true,"^45",["^1L",[["^<U"],["^1A","^<U"]]]],"~$js-star-interp",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3442,"^8",7,"^9",3442,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","~$s"]]]]]],"^[","~$cljs.analyzer/js-star-interp","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","~$s"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3442,"^4>","^4K","^9",3442,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1331,"^8",16,"^9",1331,"^:",30,"^6H",true],"^[","~$cljs.analyzer/*recur-frames*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^6H",true,"^7",1331,"^9",1331,"^47","^4L"],"~$STRING_SYM",["^ ","^[","~$cljs.analyzer/STRING_SYM","^6","cljs/analyzer.cljc","^7",224,"^8",4,"^9",224,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",224,"^8",9,"^9",224,"^:",19],"^47","^64"],"~$analyze-fn-methods-pass2*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2100,"^8",7,"^9",2100,"^:",32,"^45",["^1L",["^46",["^1L",[["~$menv","^6N","^6O","~$meths"]]]]]],"^[","~$cljs.analyzer/analyze-fn-methods-pass2*","^6","cljs/analyzer.cljc","^:",32,"^4:",["^1L",[["^=2","^6N","^6O","^=3"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2100,"^4>","^4K","^9",2100,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^=2","^6N","^6O","^=3"]]]]]],"^Y",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3924,"^8",7,"^9",3924,"^:",20,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]],"^57","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^[","~$cljs.analyzer/macroexpand-1","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3924,"^9",3924,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]],"^57","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1289,"^8",7,"^9",1289,"^:",24,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^[","~$cljs.analyzer/resolve-macro-var","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1289,"^4>",["^W",[null,"^4L","^4U"]],"^9",1289,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2271,"^8",7,"^9",2271,"^:",31,"^45",["^1L",["^46",["^1L",[["^1A","~$init","^:B"]]]]]],"^[","~$cljs.analyzer/analyze-let-binding-init","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[["^1A","^=9","^:B"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2271,"^9",2271,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^=9","^:B"]]]]]],"~$infer-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1442,"^8",7,"^9",1442,"^:",16,"^45",["^1L",["^46",["^1L",[["^1A","~$e"]]]]],"^57","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^[","~$cljs.analyzer/infer-tag","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^1A","~$e"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1442,"^4>",["^W",[null,"^4L"]],"^9",1442,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","~$e"]]]]],"^57","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2964,"^8",7,"^9",2964,"^:",32,"^45",["^1L",["^46",["^1L",[["~$specs"]]]]]],"^[","~$cljs.analyzer/canonicalize-import-specs","^6","cljs/analyzer.cljc","^:",32,"^4:",["^1L",[["^=>"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2964,"^9",2964,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^=>"]]]]]],"~$analyze-form-seq",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4640,"^8",7,"^9",4640,"^:",23,"^45",["^1L",["^46",["^1L",[["~$forms"],["^=A","^6A"],["^=A","^6A","~$return-last?"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]],"^45",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]],"^4<",["^1L",[null,null,null]]]],"^[","~$cljs.analyzer/analyze-form-seq","^6","cljs/analyzer.cljc","^:",23,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]],"^45",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]],"^4<",["^1L",[null,null,null]]],"^4:",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false]],"^7",4640,"^9",4640,"^4?",3,"^4@",true,"^45",["^1L",[["^=A"],["^=A","^6A"],["^=A","^6A","^=B"]]]],"~$analyze-let-body*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2329,"^8",7,"^9",2329,"^:",24,"^45",["^1L",["^46",["^1L",[["^1A","^:@","^5E"]]]]]],"^[","~$cljs.analyzer/analyze-let-body*","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^1A","^:@","^5E"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2329,"^4>","^4L","^9",2329,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:@","^5E"]]]]]],"~$analyze-js-star*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3519,"^8",7,"^9",3519,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","^<K","^5P","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-js-star*","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^1A","^<K","^5P","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3519,"^4>","^4T","^9",3519,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^<K","^5P","^5F"]]]]]],"~$inferred-rename-macros",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2659,"^8",7,"^9",2659,"^:",29,"^45",["^1L",["^46",["^1L",[["~$rename-macros","^1A"]]]]]],"^[","~$cljs.analyzer/inferred-rename-macros","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^=I","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2659,"^4>",["^W",[null,"^4K","^4L"]],"^9",2659,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^=I","^1A"]]]]]],"~$parse-ns-error-msg",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2720,"^8",7,"^9",2720,"^:",25,"^45",["^1L",["^46",["^1L",[["^:L","^:;"]]]]]],"^[","~$cljs.analyzer/parse-ns-error-msg","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^:L","^:;"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2720,"^4>","^1B","^9",2720,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^:L","^:;"]]]]]],"~$missing-use-macro?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2625,"^8",7,"^9",2625,"^:",25,"^45",["^1L",["^46",["^1L",[["^7V","^5="]]]]]],"^[","~$cljs.analyzer/missing-use-macro?","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^7V","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2625,"^4>",["^W",["^48","^4U"]],"^9",2625,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^7V","^5="]]]]]],"~$CLJ_NIL_SYM",["^ ","^[","~$cljs.analyzer/CLJ_NIL_SYM","^6","cljs/analyzer.cljc","^7",218,"^8",4,"^9",218,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",218,"^8",9,"^9",218,"^:",20],"^47","^64"],"~$record-ns+name",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4020,"^8",7,"^9",4020,"^:",21,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/record-ns+name","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4020,"^4>","^5R","^9",4020,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$analyzed",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3577,"^8",7,"^9",3577,"^:",15,"^45",["^1L",["^46",["^1L",[["~$x"]]]]],"^57","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^[","~$cljs.analyzer/analyzed","^6","cljs/analyzer.cljc","^:",15,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3577,"^4>",["^W",["^4K","^4L","^<C","^4U"]],"^9",3577,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]],"^57","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$resolve-symbol",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4245,"^8",7,"^9",4245,"^:",21,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"^[","~$cljs.analyzer/resolve-symbol","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4245,"^4>",["^W",[null,"^4L"]],"^9",4245,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"~$missing-renames",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2644,"^8",7,"^9",2644,"^:",22,"^45",["^1L",["^46",["^1L",[["^8U","^1A"]]]]]],"^[","~$cljs.analyzer/missing-renames","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^8U","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2644,"^4>",["^W",[null,"^4K","^4L"]],"^9",2644,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^8U","^1A"]]]]]],"~$resolve*",["^ ","^[","~$cljs.analyzer/resolve*","^6","cljs/analyzer.cljc","^7",1065,"^8",1,"^9",1065,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1065,"^8",11,"^9",1065,"^:",19],"^47","^4X"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",34,"^6H",true],"^[","~$cljs.analyzer/*cljs-macros-path*","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^6H",true,"^7",56,"^9",56,"^47","^4L"],"~$confirm-var-exist-warning",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",790,"^8",7,"^9",790,"^:",32,"^45",["^1L",["^46",["^1L",[["^1A","^9R","^;R"]]]]]],"^[","~$cljs.analyzer/confirm-var-exist-warning","^6","cljs/analyzer.cljc","^:",32,"^4:",["^1L",[["^1A","^9R","^;R"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",790,"^4>","^8M","^9",790,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^9R","^;R"]]]]]],"~$repeat-char",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",530,"^8",8,"^9",530,"^:",19,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$c","~$n"]]]]]],"^4B",true,"^[","~$cljs.analyzer/repeat-char","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["~$c","~$n"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",530,"^9",530,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",165,"^8",7,"^9",165,"^:",24,"^45",["^1L",["^46",["^1L",[[]]]]]],"^[","~$cljs.analyzer/unchecked-arrays?","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",165,"^4>","^48","^9",165,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]]],"~$core-ns?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1821,"^8",8,"^9",1821,"^:",16,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$ns-sym"]]]]]],"^4B",true,"^[","~$cljs.analyzer/core-ns?","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^>8"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1821,"^4>","^48","^9",1821,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^>8"]]]]]],"~$analyze-dot",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3369,"^8",7,"^9",3369,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^5Y","^:3","~$member+","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-dot","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^1A","^5Y","^:3","^>;","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3369,"^9",3369,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5Y","^:3","^>;","^5F"]]]]]],"~$analyze-do-statements",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2245,"^8",7,"^9",2245,"^:",28,"^45",["^1L",["^46",["^1L",[["^1A","^5E"]]]]]],"^[","~$cljs.analyzer/analyze-do-statements","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^1A","^5E"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2245,"^9",2245,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5E"]]]]]],"~$get-line",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",628,"^8",7,"^9",628,"^:",15,"^45",["^1L",["^46",["^1L",[["~$x","^1A"]]]]]],"^[","~$cljs.analyzer/get-line","^6","cljs/analyzer.cljc","^:",15,"^4:",["^1L",[["~$x","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",628,"^4>","^4L","^9",628,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x","^1A"]]]]]],"~$analyze-do-statements*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2242,"^8",7,"^9",2242,"^:",29,"^45",["^1L",["^46",["^1L",[["^1A","^5E"]]]]]],"^[","~$cljs.analyzer/analyze-do-statements*","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^1A","^5E"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2242,"^4>","^4K","^9",2242,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5E"]]]]]],"~$analyze-seq",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3941,"^8",7,"^9",3941,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]]]],"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^45",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/analyze-seq","^6","cljs/analyzer.cljc","^:",18,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^45",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",3,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false,"^47","^4L"]],"^7",3941,"^9",3941,"^4?",4,"^4@",true,"^45",["^1L",[["^1A","^5F","^6@"],["^1A","^5F","^6@","^6A"]]]],"~$desugar-dotted-expr",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3692,"^8",7,"^9",3692,"^:",26,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","^9W"]]]]]]],"^[","~$cljs.analyzer/desugar-dotted-expr","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["~$p__60978"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3692,"^9",3692,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","^9W"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1092,"^8",16,"^9",1092,"^:",45,"^4B",true],"^4B",true,"^[","~$cljs.analyzer/private-var-access-exceptions","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1092,"^9",1092,"^47","^6;","^57","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3594,"^8",8,"^9",3594,"^:",19,"^4B",true,"^45",["^1L",["^46",["^1L",[["^5E"]]]]],"^47","^48"],"^4B",true,"^[","~$cljs.analyzer/all-values?","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^5E"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3594,"^4>","^48","^9",3594,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^5E"]]]]]],"~$find-def-clash",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3022,"^8",7,"^9",3022,"^:",21,"^45",["^1L",["^46",["^1L",[["^1A","^1M","~$segments"]]]]]],"^[","~$cljs.analyzer/find-def-clash","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1A","^1M","^>M"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3022,"^4>","^4U","^9",3022,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^1M","^>M"]]]]]],"~$has-error-data?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",765,"^8",7,"^9",765,"^:",22,"^45",["^1L",["^46",["^1L",[["~$ex"]]]]],"^47","^48"],"^[","~$cljs.analyzer/has-error-data?","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^>P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",765,"^4>","^48","^9",765,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^>P"]]]]]],"~$get-expander*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3796,"^8",7,"^9",3796,"^:",20,"^45",["^1L",["^46",["^1L",[["^5=","^1A"]]]]]],"^[","~$cljs.analyzer/get-expander*","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^5=","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3796,"^4>",["^W",["^4L","^4U"]],"^9",3796,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5=","^1A"]]]]]],"~$fn-name-var",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2081,"^8",7,"^9",2081,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^6N","^6@"]]]]]],"^[","~$cljs.analyzer/fn-name-var","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^1A","^6N","^6@"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2081,"^4>",["^W",["^4L","^4U"]],"^9",2081,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^6N","^6@"]]]]]],"~$munge-node-lib",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1036,"^8",7,"^9",1036,"^:",21,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"^[","~$cljs.analyzer/munge-node-lib","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^6@"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1036,"^4>","^1B","^9",1036,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6@"]]]]]],"~$internal-js-module-exists?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",807,"^8",8,"^9",807,"^:",34,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$js-module-index","^6W"]]]]]],"^4B",true,"^[","~$cljs.analyzer/internal-js-module-exists?","^6","cljs/analyzer.cljc","^:",34,"^4:",["^1L",[["^>Y","^6W"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",807,"^4>","^48","^9",807,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^>Y","^6W"]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",29,"^6H",true],"^[","~$cljs.analyzer/*load-macros*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^6H",true,"^7",61,"^9",61,"^47","^4L"],"~$add-types",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",955,"^8",7,"^9",955,"^:",16,"^45",["^1L",["^46",["^1L",[[],["~$t1"],["^?2","~$t2"],["^?2","^?3","~$&","~$ts"]]]]],"^57","Produces a union of types.","^4P",["^ ","^4=",true,"^4Q",2,"^4?",2,"^4:",["^1L",[[],["^?2"],["^?2","^?3"]]],"^45",["^1L",[[],["^?2"],["^?2","^?3"],["^?2","^?3","~$&","^?4"]]],"^4<",["^1L",[null,null,null,null]]]],"^[","~$cljs.analyzer/add-types","^6","cljs/analyzer.cljc","^:",16,"^4P",["^ ","^4=",true,"^4Q",2,"^4?",2,"^4:",["^1L",[[],["^?2"],["^?2","^?3"]]],"^45",["^1L",[[],["^?2"],["^?2","^?3"],["^?2","^?3","~$&","^?4"]]],"^4<",["^1L",[null,null,null,null]]],"^4:",["^1L",[[],["^?2"],["^?2","^?3"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null,null,null]],"^8",1,"^4=",true,"^4S",[["^ ","^4Q",0,"^4=",false,"^47","^64"],["^ ","^4Q",1,"^4=",false],["^ ","^4Q",2,"^4=",false,"^47",["^W",[null,"^4K","^4L","^64","^4U"]]],["^ ","^4Q",2,"^4=",true,"^47","^4L"]],"^7",955,"^9",955,"^4?",2,"^4@",true,"^45",["^1L",[[],["^?2"],["^?2","^?3"],["^?2","^?3","~$&","^?4"]]],"^57","Produces a union of types."],"~$excluded?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3769,"^8",7,"^9",3769,"^:",16,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^47","^48"],"^[","~$cljs.analyzer/excluded?","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3769,"^4>","^48","^9",3769,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"~$empty-env",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",686,"^8",7,"^9",686,"^:",16,"^45",["^1L",["^46",["^1L",[[]]]]],"^57","Construct an empty analysis environment. Required to analyze forms."],"^[","~$cljs.analyzer/empty-env","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",686,"^9",686,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]],"^57","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",908,"^8",7,"^9",908,"^:",19,"^45",["^1L",["^46",["^1L",[["^1M","^5="]]]]],"^57","Is sym public?","^47","^48"],"^[","~$cljs.analyzer/public-name?","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^1M","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",908,"^4>","^48","^9",908,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1M","^5="]]]]],"^57","Is sym public?"],"~$default-warning-handler",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",514,"^8",7,"^9",514,"^:",30,"^45",["^1L",["^46",["^1L",[["~$warning-type","^1A","~$extra"]]]]]],"^[","~$cljs.analyzer/default-warning-handler","^6","cljs/analyzer.cljc","^:",30,"^4:",["^1L",[["^?=","^1A","^?>"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",514,"^4>",["^W",[null,"^4U"]],"^9",514,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^?=","^1A","^?>"]]]]]],"~$resolve-ns-alias",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",868,"^8",7,"^9",868,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","^6@"],["^1A","^6@","~$not-found"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/resolve-ns-alias","^6","cljs/analyzer.cljc","^:",23,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",[null,"^4L"]]]],"^7",868,"^9",868,"^4?",3,"^4@",true,"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]]],"~$intern-macros",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",634,"^8",7,"^9",634,"^:",20,"^45",["^1L",["^46",["^1L",[["^1M"],["^1M","~$reload"]]]]],"^57","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1M"],["^1M","^?D"]]],"^45",["^1L",[["^1M"],["^1M","^?D"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/intern-macros","^6","cljs/analyzer.cljc","^:",20,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1M"],["^1M","^?D"]]],"^45",["^1L",[["^1M"],["^1M","^?D"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1M"],["^1M","^?D"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47","^4L"],["^ ","^4Q",2,"^4=",false,"^47",["^W",[null,"^4L","^4U"]]]],"^7",634,"^9",634,"^4?",2,"^4@",true,"^45",["^1L",[["^1M"],["^1M","^?D"]]],"^57","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment."],"~$const-expr->constant-value",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1806,"^8",7,"^9",1806,"^:",33,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","~$e"]]]]]]],"^[","~$cljs.analyzer/const-expr->constant-value","^6","cljs/analyzer.cljc","^:",33,"^4:",["^1L",[["~$p__60418"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1806,"^9",1806,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[[["^ ","^84",["^6?"],"^1Q","~$e"]]]]]]],"~$BOOLEAN_OR_SEQ",["^ ","^[","~$cljs.analyzer/BOOLEAN_OR_SEQ","^6","cljs/analyzer.cljc","^7",1390,"^8",1,"^9",1390,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1390,"^8",6,"^9",1390,"^:",20],"^47","^6;"],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",29,"^6H",true],"^[","~$cljs.analyzer/*macro-infer*","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^6H",true,"^7",63,"^9",63,"^47","^4L"],"~$DOT_SYM",["^ ","^[","~$cljs.analyzer/DOT_SYM","^6","cljs/analyzer.cljc","^7",232,"^8",4,"^9",232,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",232,"^8",9,"^9",232,"^:",16],"^47","^64"],"~$gen-constant-id",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",545,"^8",7,"^9",545,"^:",22,"^45",["^1L",["^46",["^1L",[["~$value"]]]]]],"^[","~$cljs.analyzer/gen-constant-id","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^?P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",545,"^4>",["^W",["^4L","^64"]],"^9",545,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^?P"]]]]]],"~$BOOLEAN_SYM",["^ ","^[","~$cljs.analyzer/BOOLEAN_SYM","^6","cljs/analyzer.cljc","^7",226,"^8",1,"^9",226,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",226,"^8",6,"^9",226,"^:",17],"^47","^64"],"~$macro-autoload-ns?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2900,"^8",7,"^9",2900,"^:",25,"^45",["^1L",["^46",["^1L",[["^5F"]]]]],"^57","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^47","^48"],"^[","~$cljs.analyzer/macro-autoload-ns?","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2900,"^4>","^48","^9",2900,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^5F"]]]]],"^57","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1354,"^8",7,"^9",1354,"^:",14,"^45",["^1L",["^46",["^1L",[["~$e"]]]]]],"^[","~$cljs.analyzer/get-tag","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["~$e"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1354,"^4>","^4L","^9",1354,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$e"]]]]]],"~$implicit-nses",["^ ","^[","~$cljs.analyzer/implicit-nses","^6","cljs/analyzer.cljc","^7",781,"^8",1,"^9",781,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",781,"^8",6,"^9",781,"^:",19],"^47","^6;"],"~$valid-proto",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1782,"^8",7,"^9",1782,"^:",18,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/valid-proto","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1782,"^4>",["^W",["^64","^4U"]],"^9",1782,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",924,"^8",7,"^9",924,"^:",23,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/normalize-js-tag","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",924,"^4>",["^W",[null,"^4K","^<C","^4U"]],"^9",924,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$analyze-list",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3978,"^8",7,"^9",3978,"^:",19,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-list","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3978,"^4>","^4L","^9",3978,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$warning",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",726,"^8",7,"^9",726,"^:",14,"^45",["^1L",["^46",["^1L",[["^?=","^1A","^?>"]]]]]],"^[","~$cljs.analyzer/warning","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["^?=","^1A","^?>"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",726,"^4>","^4U","^9",726,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^?=","^1A","^?>"]]]]]],"~$implicit-import?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",783,"^8",7,"^9",783,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","^9R","^;R"]]]]],"^47","^48"],"^[","~$cljs.analyzer/implicit-import?","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^1A","^9R","^;R"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",783,"^4>","^48","^9",783,"^4?",3,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^9R","^;R"]]]]]],"~$missing-use-macros",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2649,"^8",7,"^9",2649,"^:",25,"^45",["^1L",["^46",["^1L",[["^;H","^1A"]]]]]],"^[","~$cljs.analyzer/missing-use-macros","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^;H","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2649,"^4>",["^W",[null,"^4K","^4L"]],"^9",2649,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^;H","^1A"]]]]]],"~$analyze*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4191,"^8",7,"^9",4191,"^:",15,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^6@","^6A"]]]]]],"^[","~$cljs.analyzer/analyze*","^6","cljs/analyzer.cljc","^:",15,"^4:",["^1L",[["^1A","^5F","^6@","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4191,"^4>",["^W",[null,"^4L"]],"^9",4191,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^6@","^6A"]]]]]],"~$-cljs-macros-loaded",["^ ","^[","~$cljs.analyzer/-cljs-macros-loaded","^6","cljs/analyzer.cljc","^7",122,"^8",1,"^9",122,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",122,"^8",6,"^9",122,"^:",25],"^47","~$cljs.core/Atom"],"~$check-uses",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2662,"^8",7,"^9",2662,"^:",17,"^45",["^1L",["^46",["^1L",[["^7Q","^1A"]]]]]],"^[","~$cljs.analyzer/check-uses","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^7Q","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2662,"^4>","^4U","^9",2662,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^7Q","^1A"]]]]]],"~$set-test-induced-tags",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1637,"^8",8,"^9",1637,"^:",29,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^4B",true,"^[","~$cljs.analyzer/set-test-induced-tags","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^1A","^92"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1637,"^4>",["^W",[null,"^4K","^4L"]],"^9",1637,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^92"]]]]],"^57","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1361,"^8",7,"^9",1361,"^:",27,"^45",["^1L",["^46",["^1L",[["~$f","~$params"]]]]]],"^[","~$cljs.analyzer/find-matching-method","^6","cljs/analyzer.cljc","^:",27,"^4:",["^1L",[["~$f","^@D"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1361,"^4>",["^W",["^4L","^4U"]],"^9",1361,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$f","^@D"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",66,"^8",16,"^9",66,"^:",43,"^6H",true],"^[","~$cljs.analyzer/*private-var-access-nowarn*","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^6H",true,"^7",66,"^9",66,"^47","^4L"],"~$invoke-arg-type-validators",["^ ","^[","~$cljs.analyzer/invoke-arg-type-validators","^6","cljs/analyzer.cljc","^7",4121,"^8",1,"^9",4121,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4121,"^8",6,"^9",4121,"^:",32],"^47","^4T"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",51,"^8",16,"^9",51,"^:",27,"^6H",true],"^[","~$cljs.analyzer/*cljs-file*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^6H",true,"^7",51,"^9",51,"^47","^4L"],"~$CLJS_CORE_MACROS_SYM",["^ ","^[","~$cljs.analyzer/CLJS_CORE_MACROS_SYM","^6","cljs/analyzer.cljc","^7",241,"^8",4,"^9",241,"^:",29,"^5",["^ ","^6","cljs/analyzer.cljc","^7",241,"^8",9,"^9",241,"^:",29],"^47","^64"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",27,"^6H",true],"^[","~$cljs.analyzer/*file-defs*","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^6H",true,"^7",65,"^9",65,"^47","^4L"],"~$infer-if",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1398,"^8",7,"^9",1398,"^:",15,"^45",["^1L",["^46",["^1L",[["^1A","~$e"]]]]]],"^[","~$cljs.analyzer/infer-if","^6","cljs/analyzer.cljc","^:",15,"^4:",["^1L",[["^1A","~$e"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1398,"^4>",["^W",[null,"^4K","^4L","^64"]],"^9",1398,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","~$e"]]]]]],"~$topo-sort",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",276,"^8",10,"^9",276,"^:",19,"^45",["^1L",["^46",["^1L",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]],"^45",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/topo-sort","^6","cljs/analyzer.cljc","^:",19,"^4P",["^ ","^4=",false,"^4Q",4,"^4?",4,"^4:",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]],"^45",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]],"^4;",null,"^4Q",4,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",4,"^4=",false,"^47",["^W",["^5R","^4U"]]]],"^7",276,"^9",276,"^4?",4,"^4@",true,"^45",["^1L",[["~$x","^@S"],["~$x","^@T","^@U","^@V"]]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",120,"^8",16,"^9",120,"^:",25,"^6H",true],"^[","~$cljs.analyzer/*verbose*","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^6H",true,"^7",120,"^9",120,"^47","^4L"],"~$analyze-js-value",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3996,"^8",7,"^9",3996,"^:",23,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-js-value","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3996,"^4>","^4T","^9",3996,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$ns->module-type",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1059,"^8",7,"^9",1059,"^:",22,"^45",["^1L",["^46",["^1L",[["^1M"]]]]]],"^[","~$cljs.analyzer/ns->module-type","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^1M"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1059,"^4>",["^W",["~$cljs.core/Keyword","^4U"]],"^9",1059,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M"]]]]]],"~$source-info",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",706,"^8",7,"^9",706,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A"],["^6@","^1A"]]]]],"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1A"],["^6@","^1A"]]],"^45",["^1L",[["^1A"],["^6@","^1A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/source-info","^6","cljs/analyzer.cljc","^:",18,"^4P",["^ ","^4=",false,"^4Q",2,"^4?",2,"^4:",["^1L",[["^1A"],["^6@","^1A"]]],"^45",["^1L",[["^1A"],["^6@","^1A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A"],["^6@","^1A"]]],"^4;",null,"^4Q",2,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",1,"^4=",false,"^47",["^W",["^4L","^4U"]]],["^ ","^4Q",2,"^4=",false,"^47",["^W",["^4L","^4T","^4U"]]]],"^7",706,"^9",706,"^4?",2,"^4@",true,"^45",["^1L",[["^1A"],["^6@","^1A"]]]],"~$analyze-fn-method-param",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2011,"^8",7,"^9",2011,"^:",30,"^45",["^1L",["^46",["^1L",[["^1A"]]]]]],"^[","~$cljs.analyzer/analyze-fn-method-param","^6","cljs/analyzer.cljc","^:",30,"^4:",["^1L",[["^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2011,"^4>","^8M","^9",2011,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A"]]]]]],"~$repl-self-require?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4073,"^8",8,"^9",4073,"^:",26,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","^:U"]]]]]],"^4B",true,"^[","~$cljs.analyzer/repl-self-require?","^6","cljs/analyzer.cljc","^:",26,"^4:",["^1L",[["^1A","^:U"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4073,"^4>",["^W",["^4L","^4U"]],"^9",4073,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:U"]]]]]],"~$analyze-set",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3990,"^8",7,"^9",3990,"^:",18,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"^[","~$cljs.analyzer/analyze-set","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^1A","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3990,"^4>","^4L","^9",3990,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F"]]]]]],"~$numeric-type?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3466,"^8",7,"^9",3466,"^:",20,"^45",["^1L",["^46",["^1L",[["~$t"]]]]],"^47","^48"],"^[","~$cljs.analyzer/numeric-type?","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["~$t"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3466,"^4>","^48","^9",3466,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$t"]]]]]],"~$munge-path",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",264,"^8",10,"^9",264,"^:",20,"^45",["^1L",["^46",["^1L",[["~$ss"]]]]]],"^[","~$cljs.analyzer/munge-path","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^A>"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",264,"^4>",["^W",["^4L","^1B","^64"]],"^9",264,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^A>"]]]]]],"~$ast?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",291,"^8",7,"^9",291,"^:",11,"^45",["^1L",["^46",["^1L",[["~$x"]]]]],"^47","^48"],"^[","~$cljs.analyzer/ast?","^6","cljs/analyzer.cljc","^:",11,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",291,"^4>","^48","^9",291,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$checked-arrays",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",168,"^8",7,"^9",168,"^:",21,"^45",["^1L",["^46",["^1L",[[]]]]],"^57","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^[","~$cljs.analyzer/checked-arrays","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",168,"^4>",["^W",["^4L","^4U"]],"^9",168,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]],"^57","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1785,"^8",7,"^9",1785,"^:",16,"^45",["^1L",["^46",["^1L",[["^1A","^8V","^6A"]]]]]],"^[","~$cljs.analyzer/elide-env","^6","cljs/analyzer.cljc","^:",16,"^4:",["^1L",[["^1A","^8V","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1785,"^4>",["^W",["^4K","^4U"]],"^9",1785,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^8V","^6A"]]]]]],"~$js-module-exists?*",["^ ","^[","~$cljs.analyzer/js-module-exists?*","^6","cljs/analyzer.cljc","^7",818,"^8",1,"^9",818,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",818,"^8",6,"^9",818,"^:",24],"^47","^8M"],"~$parse-require-spec",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2827,"^8",7,"^9",2827,"^:",25,"^45",["^1L",["^46",["^1L",[["^1A","^:K","^:U","~$aliases","^:L"]]]]]],"^[","~$cljs.analyzer/parse-require-spec","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^1A","^:K","^:U","^AI","^:L"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2827,"^4>",["^W",["^4L","^4U"]],"^9",2827,"^4?",5,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^:K","^:U","^AI","^:L"]]]]]],"~$analyze-wrap-meta",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4049,"^8",7,"^9",4049,"^:",24,"^45",["^1L",["^46",["^1L",[["^9W"]]]]]],"^[","~$cljs.analyzer/analyze-wrap-meta","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^9W"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4049,"^4>",["^W",[null,"^4T"]],"^9",4049,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^9W"]]]]]],"~$ANY_SYM",["^ ","^[","~$cljs.analyzer/ANY_SYM","^6","cljs/analyzer.cljc","^7",245,"^8",1,"^9",245,"^:",13,"^5",["^ ","^6","cljs/analyzer.cljc","^7",245,"^8",6,"^9",245,"^:",13],"^47","^64"],"~$property-symbol?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3305,"^8",16,"^9",3305,"^:",32,"^4B",true],"^4B",true,"^[","~$cljs.analyzer/property-symbol?","^6","cljs/analyzer.cljc","^:",32,"^4:",["^1L",[["~$p1__60882#"]]],"^4;",null,"^4<",["^1L",[]],"^8",1,"^4=",false,"^7",3305,"^4>","^48","^9",3305,"^4?",1,"^4@",true,"^45",null],"~$analyze-js-star-args",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3509,"^8",8,"^9",3509,"^:",28,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$js-op","^1A","^5P"]]]]]],"^4B",true,"^[","~$cljs.analyzer/analyze-js-star-args","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^AS","^1A","^5P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3509,"^4>",["^W",["^4L","^4U"]],"^9",3509,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^AS","^1A","^5P"]]]]]],"~$cljs-seq?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",248,"^8",19,"^9",248,"^:",28,"^47","^48","^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-seq?","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",248,"^4>","^48","^9",248,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$get-js-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3435,"^8",7,"^9",3435,"^:",17,"^45",["^1L",["^46",["^1L",[["^5F"]]]]]],"^[","~$cljs.analyzer/get-js-tag","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3435,"^4>",["^W",["^4L","^64","^4U"]],"^9",3435,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5F"]]]]]],"~$parse",["^ ","^[","~$cljs.analyzer/parse","^6","cljs/analyzer.cljc","^7",1471,"^8",1,"^9",1471,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1471,"^8",11,"^9",1471,"^:",16],"^47","^4X"],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",30,"^6H",true],"^[","~$cljs.analyzer/*analyze-deps*","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^6H",true,"^7",59,"^9",59,"^47","^4L"],"~$analyze-let-bindings*",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2282,"^8",7,"^9",2282,"^:",28,"^45",["^1L",["^46",["^1L",[["^5C","^5D","^6?"]]]]]],"^[","~$cljs.analyzer/analyze-let-bindings*","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^5C","^5D","^6?"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2282,"^4>","^61","^9",2282,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5C","^5D","^6?"]]]]]],"~$analysis-error?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",760,"^8",7,"^9",760,"^:",22,"^45",["^1L",["^46",["^1L",[["^>P"]]]]],"^47","^48"],"^[","~$cljs.analyzer/analysis-error?","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^>P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",760,"^4>","^48","^9",760,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^>P"]]]]]],"~$replace-env-pass",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1788,"^8",7,"^9",1788,"^:",23,"^45",["^1L",["^46",["^1L",[["~$new-env"]]]]]],"^[","~$cljs.analyzer/replace-env-pass","^6","cljs/analyzer.cljc","^:",23,"^4:",["^1L",[["^B6"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1788,"^4>","^8M","^9",1788,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^B6"]]]]]],"~$valid-arity?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3599,"^8",8,"^9",3599,"^:",20,"^4B",true,"^45",["^1L",["^46",["^1L",[["^4C","^4D"]]]]],"^47","^48"],"^4B",true,"^[","~$cljs.analyzer/valid-arity?","^6","cljs/analyzer.cljc","^:",20,"^4:",["^1L",[["^4C","^4D"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3599,"^4>","^48","^9",3599,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^4C","^4D"]]]]]],"~$parse-ns-excludes",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2753,"^8",7,"^9",2753,"^:",24,"^45",["^1L",["^46",["^1L",[["^1A","^5P"]]]]]],"^[","~$cljs.analyzer/parse-ns-excludes","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^1A","^5P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2753,"^4>",["^W",[null,"^4L"]],"^9",2753,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5P"]]]]]],"~$analyze-fn-methods-pass2",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2103,"^8",7,"^9",2103,"^:",31,"^45",["^1L",["^46",["^1L",[["^=2","^6N","^6O","^=3"]]]]]],"^[","~$cljs.analyzer/analyze-fn-methods-pass2","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[["^=2","^6N","^6O","^=3"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2103,"^4>","^4K","^9",2103,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^=2","^6N","^6O","^=3"]]]]]],"~$core-name?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",897,"^8",7,"^9",897,"^:",17,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Is sym visible from core in the current compilation namespace?","^47","^48"],"^[","~$cljs.analyzer/core-name?","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",897,"^4>","^48","^9",897,"^4?",2,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]],"^57","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2275,"^8",7,"^9",2275,"^:",18,"^45",["^1L",["^46",["^1L",[["^6@","~$init-expr"]]]]]],"^[","~$cljs.analyzer/get-let-tag","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^6@","^BA"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2275,"^4>","^4L","^9",2275,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6@","^BA"]]]]]],"~$specials",["^ ","^[","~$cljs.analyzer/specials","^6","cljs/analyzer.cljc","^7",1328,"^8",1,"^9",1328,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1328,"^8",6,"^9",1328,"^:",14],"^47","^6;"],"~$elide-irrelevant-meta",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4046,"^8",7,"^9",4046,"^:",28,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"^[","~$cljs.analyzer/elide-irrelevant-meta","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["~$m"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4046,"^4>",["^W",["^4K","^4U"]],"^9",4046,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",875,"^8",7,"^9",875,"^:",29,"^45",["^1L",["^46",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/resolve-macro-ns-alias","^6","cljs/analyzer.cljc","^:",29,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47",["^W",[null,"^4L"]]]],"^7",875,"^9",875,"^4?",3,"^4@",true,"^45",["^1L",[["^1A","^6@"],["^1A","^6@","^?A"]]]],"~$unsorted-map?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3573,"^8",8,"^9",3573,"^:",21,"^4B",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^4B",true,"^[","~$cljs.analyzer/unsorted-map?","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3573,"^4>","^48","^9",3573,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4133,"^8",7,"^9",4133,"^:",29,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","^84",["^6?"],"^1Q","^8V"],"^6A"]]]]]],"^[","~$cljs.analyzer/check-invoke-arg-types","^6","cljs/analyzer.cljc","^:",29,"^4:",["^1L",[["^1A","~$p__61042","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4133,"^4>",["^W",["^4K","^4L","^<C","^4U"]],"^9",4133,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A",["^ ","^84",["^6?"],"^1Q","^8V"],"^6A"]]]]]],"~$check-duplicate-aliases",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3148,"^8",8,"^9",3148,"^:",31,"^4B",true,"^45",["^1L",["^46",["^1L",[["^1A","~$old","~$new"]]]]]],"^4B",true,"^[","~$cljs.analyzer/check-duplicate-aliases","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[["^1A","^BO","^BP"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3148,"^4>","^4U","^9",3148,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^BO","^BP"]]]]]],"~$confirm-ns",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",882,"^8",7,"^9",882,"^:",17,"^45",["^1L",["^46",["^1L",[["^1A","^>8"]]]]],"^57","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^[","~$cljs.analyzer/confirm-ns","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^1A","^>8"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",882,"^4>","^4U","^9",882,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^>8"]]]]],"^57","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^[","~$cljs.analyzer/default-namespaces","^6","cljs/analyzer.cljc","^7",585,"^8",1,"^9",585,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",585,"^8",6,"^9",585,"^:",24],"^47","^4T"],"~$CLJS_CORE_SYM",["^ ","^[","~$cljs.analyzer/CLJS_CORE_SYM","^6","cljs/analyzer.cljc","^7",238,"^8",4,"^9",238,"^:",22,"^5",["^ ","^6","cljs/analyzer.cljc","^7",238,"^8",9,"^9",238,"^:",22],"^47","^64"],"~$earmuffed?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1815,"^8",8,"^9",1815,"^:",18,"^4B",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"^4B",true,"^[","~$cljs.analyzer/earmuffed?","^6","cljs/analyzer.cljc","^:",18,"^4:",["^1L",[["^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1815,"^4>","^48","^9",1815,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5="]]]]]],"~$accumulating-warning-handler",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",730,"^8",8,"^9",730,"^:",36,"^4B",true,"^45",["^1L",["^46",["^1L",[["^5T"]]]]]],"^4B",true,"^[","~$cljs.analyzer/accumulating-warning-handler","^6","cljs/analyzer.cljc","^:",36,"^4:",["^1L",[["^5T"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",730,"^4>","^8M","^9",730,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5T"]]]]]],"~$canonicalize-specs",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2956,"^8",7,"^9",2956,"^:",25,"^45",["^1L",["^46",["^1L",[["^=>"]]]]]],"^[","~$cljs.analyzer/canonicalize-specs","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^=>"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",2956,"^9",2956,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^=>"]]]]]],"~$build-method-call",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3332,"^8",8,"^9",3332,"^:",25,"^4B",true,"^45",["^1L",["^46",["^1L",[["^5Y","~$meth","^5P"]]]]],"^57","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^4B",true,"^[","~$cljs.analyzer/build-method-call","^6","cljs/analyzer.cljc","^:",25,"^4:",["^1L",[["^5Y","^C3","^5P"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3332,"^4>","^4T","^9",3332,"^4?",3,"^4@",true,"^45",["^1L",["^46",["^1L",[["^5Y","^C3","^5P"]]]]],"^57","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",862,"^8",7,"^9",862,"^:",31,"^45",["^1L",["^46",["^1L",[[]]]]]],"^[","~$cljs.analyzer/confirm-var-exists-throw","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[[]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",862,"^4>","^8M","^9",862,"^4?",0,"^4@",true,"^45",["^1L",["^46",["^1L",[[]]]]]],"~$js-module-exists?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",820,"^8",7,"^9",820,"^:",24,"^45",["^1L",["^46",["^1L",[["^6W"]]]]]],"^[","~$cljs.analyzer/js-module-exists?","^6","cljs/analyzer.cljc","^:",24,"^4:",["^1L",[["^6W"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",820,"^4>","^4L","^9",820,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^6W"]]]]]],"~$analyze-form",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4170,"^8",10,"^9",4170,"^:",22,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^6@","^6A"]]]]]],"^[","~$cljs.analyzer/analyze-form","^6","cljs/analyzer.cljc","^:",22,"^4:",["^1L",[["^1A","^5F","^6@","^6A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",4170,"^4>",["^W",["^4K","^4L","^4T","^4U"]],"^9",4170,"^4?",4,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5F","^6@","^6A"]]]]]],"~$var-ast",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1498,"^8",7,"^9",1498,"^:",14,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"^[","~$cljs.analyzer/var-ast","^6","cljs/analyzer.cljc","^:",14,"^4:",["^1L",[["^1A","^5="]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1498,"^9",1498,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1A","^5="]]]]]],"~$add-consts",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4222,"^8",7,"^9",4222,"^:",17,"^45",["^1L",["^46",["^1L",[["~$compiler-state","~$constants-map"]]]]],"^57","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^[","~$cljs.analyzer/add-consts","^6","cljs/analyzer.cljc","^:",17,"^4:",["^1L",[["^C>","^C?"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",4222,"^4>",["^W",[null,"^4L"]],"^9",4222,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^C>","^C?"]]]]],"^57","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",752,"^8",7,"^9",752,"^:",12,"^45",["^1L",["^46",["^1L",[["^1A","^:;"],["^1A","^:;","~$cause"]]]]],"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]],"^45",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]],"^4<",["^1L",[null,null]]]],"^[","~$cljs.analyzer/error","^6","cljs/analyzer.cljc","^:",12,"^4P",["^ ","^4=",false,"^4Q",3,"^4?",3,"^4:",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]],"^45",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]],"^4<",["^1L",[null,null]]],"^4:",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]],"^4;",null,"^4Q",3,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^4S",[["^ ","^4Q",2,"^4=",false,"^47","^4L"],["^ ","^4Q",3,"^4=",false,"^47","^:>"]],"^7",752,"^9",752,"^4?",3,"^4@",true,"^45",["^1L",[["^1A","^:;"],["^1A","^:;","^CB"]]]],"~$record-tag?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3605,"^8",8,"^9",3605,"^:",19,"^4B",true,"^45",["^1L",["^46",["^1L",[["^4I"]]]]]],"^4B",true,"^[","~$cljs.analyzer/record-tag?","^6","cljs/analyzer.cljc","^:",19,"^4:",["^1L",[["^4I"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",3605,"^4>","^48","^9",3605,"^4?",1,"^4@",true,"^45",["^1L",["^46",["^1L",[["^4I"]]]]]],"~$invokeable-ns?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1118,"^8",7,"^9",1118,"^:",21,"^45",["^1L",["^46",["^1L",[["^1M","^1A"]]]]],"^57","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^[","~$cljs.analyzer/invokeable-ns?","^6","cljs/analyzer.cljc","^:",21,"^4:",["^1L",[["^1M","^1A"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",1,"^4=",false,"^7",1118,"^4>",["^W",["^48","^4L"]],"^9",1118,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^1M","^1A"]]]]],"^57","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$cljs-vector?",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",256,"^8",19,"^9",256,"^:",31,"^47","^48","^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"^[","~$cljs.analyzer/cljs-vector?","^6","cljs/analyzer.cljc","^:",31,"^4:",["^1L",[["~$x"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",256,"^4>","^48","^9",256,"^4?",1,"^47","^48","^4@",true,"^45",["^1L",["^46",["^1L",[["~$x"]]]]]],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",50,"^8",16,"^9",50,"^:",25,"^6H",true],"^[","~$cljs.analyzer/*cljs-ns*","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^6H",true,"^7",50,"^9",50,"^47","^4L"],"~$check-macro-arity",["^ ","^44",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3854,"^8",11,"^9",3854,"^:",28,"^4B",true,"^45",["^1L",["^46",["^1L",[["^<P","^5F"]]]]]],"^4B",true,"^[","~$cljs.analyzer/check-macro-arity","^6","cljs/analyzer.cljc","^:",28,"^4:",["^1L",[["^<P","^5F"]]],"^4;",null,"^4<",["^1L",[null,null]],"^8",4,"^4=",false,"^7",3854,"^4>","^4U","^9",3854,"^4?",2,"^4@",true,"^45",["^1L",["^46",["^1L",[["^<P","^5F"]]]]]]],"^1I",["^ ","^N","^N","^U","^U","^1<","^1<","^1D","^1D","^1E","^1D"],"~:cljs.analyzer/constants",["^ ","^1G",["^W",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","~$cljs.core/char?","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","~$cljs.core/sequential?","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:existing","~:children","~:fdef-ns","^1O","~$js/RegExp","~$cljs.core/when","~$cljs.core/keyword?","~:ctor","~$aget","~:recurs","~$cljs.core/implements?","~:body?","^1","~:fname","^4K","^48","~:js-shadowed-by-local","^61","~$cljs.core/simple-symbol?","~$location","~:let","^44","~$cljs.core/Reduced","^95","~$cljs.core/qualified-symbol?","~:unsupported-js-module-type","^;Y","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","~$cljs.core/IList","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:init","~:cljs.analyzer/property","~:numeric","^4B","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^4L","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^L","^V","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^A2","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^8J","^18","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^4[","~$cljs.core/map-entry?","^12","~:bindings","~:warn","~:global-exports","~:def-emits-var","^[","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1Q","~$&form","~$cljs.core/Object","~$cljs.core/string?","~$Array","~$cljs.core/Delay","~$*unchecked-arrays*","~:flag","~:loop-lets","~$cljs.core/qualified-ident?","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^1<","~$cljs.core/qualified-keyword?","^6","~:fields","~:spec-skip-macros","~$js","^6;","~:undeclared-macros-ns","~$long","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^4P","~$cljs.core/Inst","^1H","~:params","~:warning-type","~:macro-present?","^1=","~:dblock","~:js-module-index","~:fn-self-name","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^8K","~$.-cljs$lang$test","^2?","~$js/String","~$do","~$__meta","^56","~:const-expr","~$-speced-vars","~:state","^4:","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^4;","^4Q","^11","~:current-symbol","^1Z","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^4<","^13","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^BP","~:fn-deprecated","~$cljs.core/float?","^1M","^:<","~:literal?","~:sym","^4Z","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","~$cljs.core/List","~:root-source-info","~$cljs.core/let","~$process","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","~$cljs.core/number?","~:clojure.error/column","^14","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^4=","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^84","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^4S","~$not-native","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:protocol-with-overwriting-method","~:nodes","~:cljs.spec/speced-vars","^1G","~:js-array","^6H","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1J","~:case","~:undeclared-ns","~$cljs.core/record?","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^8L","~$array","^42","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1B","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","~:cljs.analyzer/not-found","~:defrecord","~:lib","^6W","~$cljs.core/list?","~:info","~:code","~$cljs.core/simple-ident?","^4>","~:cljs.analyzer/error","^8M","~:then","~$ignore","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1N","~:error","~$document","~$checked-aset","~:def","~:reload-all","^1I","~:exception","^4?","~:t","~:options","~$set!","^1K","~:missing","^47","~:invalid-arithmetic","^21","~:protocol-deprecated","~:target","^I","~$.","~$cljs.core/simple-keyword?","^5L","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^46","^CN","~:try","^64","~$cljs.core/symbol?","~:set","~:items","~:in-loop","~$prototype","~$chars","^4@","~:js-var","^45","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~$cljs.core/and","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^57","^K","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^2<","~$cljs.core/seq?","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","~:jsdoc","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^20","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^4T","~:dep-path","^4U","~:registry-ref","~$cljs.core/instance?","^1T","~$cljs.core/checked-aset","^1P","~:statements","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","~$cljs.core/chunked-seq?","~$unescape","~:protocol-impl-with-variadic-method","~$bytes"]],"^JT",["^LU","^LL","^FQ","^CR","^CW","^D0","^DD","^DR","^DX","^D[","^E=","^EI","^FC","^FY","^G3","^GV","^GX","^H1","^H6","^HB","^HK","^HQ","^I:","^I=","^6H","^IO","^IP","^IS","^IW","^J8","^JR","^K3","^K4","^4@","^KD","^KS","^KZ","^L4","^L7","^L:","^LD","^LX","^G=","^K0","^4U","^GK","^1B","^48","^I7","~~~:t","^FG","^D;","^JD","^HL","^EE","^EO","^L@","^HA","^I0","^F9","^L6","^LA","^E4","^KP","^EF","^FW","^FX","^EM","^G>","^GL","^JS","^KB","^KH","^LG","^LY","^KI","^F5","^JB","^H0","^IU","^IQ","^JO","^I","^K","^KG","^FT","^EA","^FF","^HU","^KR","^KW","^LR","^4T","^IE","^61","^6;","^JG","^I@","^:","^9","^1Z","^GB","^F8","^E8","^G6","^D5","^E?","^GH","^LM","^KT","^J7","^I?","^DH","^I<"]],"^1R",["^ ","^1I",["^W",[]],"^1H",["^W",[]]],"^1S",["^ "],"^1T",["^1=","^1<","^18","^1C","^16","^1?","^1;","^19","^1>","^1D"]],"^12","^10","~:ns-specs",["^ "],"~:ns-spec-vars",["^W",[]],"~:compiler-options",["^26",[["^M0","~:static-fns"],true,["^M0","~:shadow-tweaks"],null,["^M0","~:elide-asserts"],false,["^M0","~:optimize-constants"],null,["^M0","^1Y"],null,["^M0","~:external-config"],null,["^M0","~:tooling-config"],null,["^M0","~:emit-constants"],null,["^M0","~:load-tests"],null,["^M0","~:form-size-threshold"],null,["^M0","~:infer-externs"],true,["^M0","^1["],null,["~:js-options","~:js-provider"],"^KM",["~:mode"],"~:dev",["^M0","~:fn-invoke-direct"],null,["^M0","~:source-map"],"/dev/null"]]]